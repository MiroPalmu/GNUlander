m4trace:/usr/share/aclocal/nls.m4:23: -1- AC_DEFUN([AM_NLS], [
  AC_MSG_CHECKING([whether NLS is requested])
  dnl Default is enabled NLS
  AC_ARG_ENABLE([nls],
    [  --disable-nls           do not use Native Language Support],
    USE_NLS=$enableval, USE_NLS=yes)
  AC_MSG_RESULT([$USE_NLS])
  AC_SUBST([USE_NLS])
])
m4trace:/usr/share/aclocal/po.m4:24: -1- AC_DEFUN([AM_PO_SUBDIRS], [
  AC_REQUIRE([AC_PROG_MAKE_SET])dnl
  AC_REQUIRE([AC_PROG_INSTALL])dnl
  AC_REQUIRE([AC_PROG_MKDIR_P])dnl
  AC_REQUIRE([AC_PROG_SED])dnl
  AC_REQUIRE([AM_NLS])dnl

  dnl Release version of the gettext macros. This is used to ensure that
  dnl the gettext macros and po/Makefile.in.in are in sync.
  AC_SUBST([GETTEXT_MACRO_VERSION], [0.20])

  dnl Perform the following tests also if --disable-nls has been given,
  dnl because they are needed for "make dist" to work.

  dnl Search for GNU msgfmt in the PATH.
  dnl The first test excludes Solaris msgfmt and early GNU msgfmt versions.
  dnl The second test excludes FreeBSD msgfmt.
  AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,
    [$ac_dir/$ac_word --statistics /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1 &&
     (if $ac_dir/$ac_word --statistics /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
    :)
  AC_PATH_PROG([GMSGFMT], [gmsgfmt], [$MSGFMT])

  dnl Test whether it is GNU msgfmt >= 0.15.
changequote(,)dnl
  case `$GMSGFMT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) GMSGFMT_015=: ;;
    *) GMSGFMT_015=$GMSGFMT ;;
  esac
changequote([,])dnl
  AC_SUBST([GMSGFMT_015])

  dnl Search for GNU xgettext 0.12 or newer in the PATH.
  dnl The first test excludes Solaris xgettext and early GNU xgettext versions.
  dnl The second test excludes FreeBSD xgettext.
  AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,
    [$ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1 &&
     (if $ac_dir/$ac_word --omit-header --copyright-holder= --msgid-bugs-address= /dev/null 2>&1 >/dev/null | grep usage >/dev/null; then exit 1; else exit 0; fi)],
    :)
  dnl Remove leftover from FreeBSD xgettext call.
  rm -f messages.po

  dnl Test whether it is GNU xgettext >= 0.15.
changequote(,)dnl
  case `$XGETTEXT --version | sed 1q | sed -e 's,^[^0-9]*,,'` in
    '' | 0.[0-9] | 0.[0-9].* | 0.1[0-4] | 0.1[0-4].*) XGETTEXT_015=: ;;
    *) XGETTEXT_015=$XGETTEXT ;;
  esac
changequote([,])dnl
  AC_SUBST([XGETTEXT_015])

  dnl Search for GNU msgmerge 0.11 or newer in the PATH.
  AM_PATH_PROG_WITH_TEST(MSGMERGE, msgmerge,
    [$ac_dir/$ac_word --update -q /dev/null /dev/null >&]AS_MESSAGE_LOG_FD[ 2>&1], :)

  dnl Test whether it is GNU msgmerge >= 0.20.
  if LC_ALL=C $MSGMERGE --help | grep ' --for-msgfmt ' >/dev/null; then
    MSGMERGE_FOR_MSGFMT_OPTION='--for-msgfmt'
  else
    dnl Test whether it is GNU msgmerge >= 0.12.
    if LC_ALL=C $MSGMERGE --help | grep ' --no-fuzzy-matching ' >/dev/null; then
      MSGMERGE_FOR_MSGFMT_OPTION='--no-fuzzy-matching --no-location --quiet'
    else
      dnl With these old versions, $(MSGMERGE) $(MSGMERGE_FOR_MSGFMT_OPTION) is
      dnl slow. But this is not a big problem, as such old gettext versions are
      dnl hardly in use any more.
      MSGMERGE_FOR_MSGFMT_OPTION='--no-location --quiet'
    fi
  fi
  AC_SUBST([MSGMERGE_FOR_MSGFMT_OPTION])

  dnl Support for AM_XGETTEXT_OPTION.
  test -n "${XGETTEXT_EXTRA_OPTIONS+set}" || XGETTEXT_EXTRA_OPTIONS=
  AC_SUBST([XGETTEXT_EXTRA_OPTIONS])

  AC_CONFIG_COMMANDS([po-directories], [[
    for ac_file in $CONFIG_FILES; do
      # Support "outfile[:infile[:infile...]]"
      case "$ac_file" in
        *:*) ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
      esac
      # PO directories have a Makefile.in generated from Makefile.in.in.
      case "$ac_file" in */Makefile.in)
        # Adjust a relative srcdir.
        ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
        ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
        ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
        # In autoconf-2.13 it is called $ac_given_srcdir.
        # In autoconf-2.50 it is called $srcdir.
        test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
        case "$ac_given_srcdir" in
          .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
          /*) top_srcdir="$ac_given_srcdir" ;;
          *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
        esac
        # Treat a directory as a PO directory if and only if it has a
        # POTFILES.in file. This allows packages to have multiple PO
        # directories under different names or in different locations.
        if test -f "$ac_given_srcdir/$ac_dir/POTFILES.in"; then
          rm -f "$ac_dir/POTFILES"
          test -n "$as_me" && echo "$as_me: creating $ac_dir/POTFILES" || echo "creating $ac_dir/POTFILES"
          gt_tab=`printf '\t'`
          cat "$ac_given_srcdir/$ac_dir/POTFILES.in" | sed -e "/^#/d" -e "/^[ ${gt_tab}]*\$/d" -e "s,.*,     $top_srcdir/& \\\\," | sed -e "\$s/\(.*\) \\\\/\1/" > "$ac_dir/POTFILES"
          POMAKEFILEDEPS="POTFILES.in"
          # ALL_LINGUAS, POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES depend
          # on $ac_dir but don't depend on user-specified configuration
          # parameters.
          if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
            # The LINGUAS file contains the set of available languages.
            if test -n "$OBSOLETE_ALL_LINGUAS"; then
              test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
            fi
            ALL_LINGUAS=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
            POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
          else
            # The set of available languages was given in configure.in.
            ALL_LINGUAS=$OBSOLETE_ALL_LINGUAS
          fi
          # Compute POFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
          # Compute UPDATEPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
          # Compute DUMMYPOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
          # Compute GMOFILES
          # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
          case "$ac_given_srcdir" in
            .) srcdirpre= ;;
            *) srcdirpre='$(srcdir)/' ;;
          esac
          POFILES=
          UPDATEPOFILES=
          DUMMYPOFILES=
          GMOFILES=
          for lang in $ALL_LINGUAS; do
            POFILES="$POFILES $srcdirpre$lang.po"
            UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
            DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
            GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
          done
          # CATALOGS depends on both $ac_dir and the user's LINGUAS
          # environment variable.
          INST_LINGUAS=
          if test -n "$ALL_LINGUAS"; then
            for presentlang in $ALL_LINGUAS; do
              useit=no
              if test "%UNSET%" != "$LINGUAS"; then
                desiredlanguages="$LINGUAS"
              else
                desiredlanguages="$ALL_LINGUAS"
              fi
              for desiredlang in $desiredlanguages; do
                # Use the presentlang catalog if desiredlang is
                #   a. equal to presentlang, or
                #   b. a variant of presentlang (because in this case,
                #      presentlang can be used as a fallback for messages
                #      which are not translated in the desiredlang catalog).
                case "$desiredlang" in
                  "$presentlang" | "$presentlang"_* | "$presentlang".* | "$presentlang"@*)
                    useit=yes
                    ;;
                esac
              done
              if test $useit = yes; then
                INST_LINGUAS="$INST_LINGUAS $presentlang"
              fi
            done
          fi
          CATALOGS=
          if test -n "$INST_LINGUAS"; then
            for lang in $INST_LINGUAS; do
              CATALOGS="$CATALOGS $lang.gmo"
            done
          fi
          test -n "$as_me" && echo "$as_me: creating $ac_dir/Makefile" || echo "creating $ac_dir/Makefile"
          sed -e "/^POTFILES =/r $ac_dir/POTFILES" -e "/^# Makevars/r $ac_given_srcdir/$ac_dir/Makevars" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@POMAKEFILEDEPS@|$POMAKEFILEDEPS|g" "$ac_dir/Makefile.in" > "$ac_dir/Makefile"
          for f in "$ac_given_srcdir/$ac_dir"/Rules-*; do
            if test -f "$f"; then
              case "$f" in
                *.orig | *.bak | *~) ;;
                *) cat "$f" >> "$ac_dir/Makefile" ;;
              esac
            fi
          done
        fi
        ;;
      esac
    done]],
   [# Capture the value of obsolete ALL_LINGUAS because we need it to compute
    # POFILES, UPDATEPOFILES, DUMMYPOFILES, GMOFILES, CATALOGS.
    OBSOLETE_ALL_LINGUAS="$ALL_LINGUAS"
    # Capture the value of LINGUAS because we need it to compute CATALOGS.
    LINGUAS="${LINGUAS-%UNSET%}"
   ])
])
m4trace:/usr/share/aclocal/po.m4:222: -1- AC_DEFUN([AM_POSTPROCESS_PO_MAKEFILE], [
  # When this code is run, in config.status, two variables have already been
  # set:
  # - OBSOLETE_ALL_LINGUAS is the value of LINGUAS set in configure.in,
  # - LINGUAS is the value of the environment variable LINGUAS at configure
  #   time.

changequote(,)dnl
  # Adjust a relative srcdir.
  ac_dir=`echo "$ac_file"|sed 's%/[^/][^/]*$%%'`
  ac_dir_suffix=/`echo "$ac_dir"|sed 's%^\./%%'`
  ac_dots=`echo "$ac_dir_suffix"|sed 's%/[^/]*%../%g'`
  # In autoconf-2.13 it is called $ac_given_srcdir.
  # In autoconf-2.50 it is called $srcdir.
  test -n "$ac_given_srcdir" || ac_given_srcdir="$srcdir"
  case "$ac_given_srcdir" in
    .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;
    /*) top_srcdir="$ac_given_srcdir" ;;
    *)  top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac

  # Find a way to echo strings without interpreting backslash.
  if test "X`(echo '\t') 2>/dev/null`" = 'X\t'; then
    gt_echo='echo'
  else
    if test "X`(printf '%s\n' '\t') 2>/dev/null`" = 'X\t'; then
      gt_echo='printf %s\n'
    else
      echo_func () {
        cat <<EOT
$*
EOT
      }
      gt_echo='echo_func'
    fi
  fi

  # A sed script that extracts the value of VARIABLE from a Makefile.
  tab=`printf '\t'`
  sed_x_variable='
# Test if the hold space is empty.
x
s/P/P/
x
ta
# Yes it was empty. Look if we have the expected variable definition.
/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=/{
  # Seen the first line of the variable definition.
  s/^['"${tab}"' ]*VARIABLE['"${tab}"' ]*=//
  ba
}
bd
:a
# Here we are processing a line from the variable definition.
# Remove comment, more precisely replace it with a space.
s/#.*$/ /
# See if the line ends in a backslash.
tb
:b
s/\\$//
# Print the line, without the trailing backslash.
p
tc
# There was no trailing backslash. The end of the variable definition is
# reached. Clear the hold space.
s/^.*$//
x
bd
:c
# A trailing backslash means that the variable definition continues in the
# next line. Put a nonempty string into the hold space to indicate this.
s/^.*$/P/
x
:d
'
changequote([,])dnl

  # Set POTFILES to the value of the Makefile variable POTFILES.
  sed_x_POTFILES=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/POTFILES/g'`
  POTFILES=`sed -n -e "$sed_x_POTFILES" < "$ac_file"`
  # Compute POTFILES_DEPS as
  #   $(foreach file, $(POTFILES), $(top_srcdir)/$(file))
  POTFILES_DEPS=
  for file in $POTFILES; do
    POTFILES_DEPS="$POTFILES_DEPS "'$(top_srcdir)/'"$file"
  done
  POMAKEFILEDEPS=""

  if test -n "$OBSOLETE_ALL_LINGUAS"; then
    test -n "$as_me" && echo "$as_me: setting ALL_LINGUAS in configure.in is obsolete" || echo "setting ALL_LINGUAS in configure.in is obsolete"
  fi
  if test -f "$ac_given_srcdir/$ac_dir/LINGUAS"; then
    # The LINGUAS file contains the set of available languages.
    ALL_LINGUAS=`sed -e "/^#/d" -e "s/#.*//" "$ac_given_srcdir/$ac_dir/LINGUAS"`
    POMAKEFILEDEPS="$POMAKEFILEDEPS LINGUAS"
  else
    # Set ALL_LINGUAS to the value of the Makefile variable LINGUAS.
    sed_x_LINGUAS=`$gt_echo "$sed_x_variable" | sed -e '/^ *#/d' -e 's/VARIABLE/LINGUAS/g'`
    ALL_LINGUAS=`sed -n -e "$sed_x_LINGUAS" < "$ac_file"`
  fi
  # Compute POFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).po)
  # Compute UPDATEPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).po-update)
  # Compute DUMMYPOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(lang).nop)
  # Compute GMOFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).gmo)
  # Compute PROPERTIESFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(DOMAIN)_$(lang).properties)
  # Compute CLASSFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(DOMAIN)_$(lang).class)
  # Compute QMFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(lang).qm)
  # Compute MSGFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang)).msg)
  # Compute RESOURCESDLLFILES
  # as      $(foreach lang, $(ALL_LINGUAS), $(srcdir)/$(frob $(lang))/$(DOMAIN).resources.dll)
  case "$ac_given_srcdir" in
    .) srcdirpre= ;;
    *) srcdirpre='$(srcdir)/' ;;
  esac
  POFILES=
  UPDATEPOFILES=
  DUMMYPOFILES=
  GMOFILES=
  PROPERTIESFILES=
  CLASSFILES=
  QMFILES=
  MSGFILES=
  RESOURCESDLLFILES=
  for lang in $ALL_LINGUAS; do
    POFILES="$POFILES $srcdirpre$lang.po"
    UPDATEPOFILES="$UPDATEPOFILES $lang.po-update"
    DUMMYPOFILES="$DUMMYPOFILES $lang.nop"
    GMOFILES="$GMOFILES $srcdirpre$lang.gmo"
    PROPERTIESFILES="$PROPERTIESFILES \$(srcdir)/\$(DOMAIN)_$lang.properties"
    CLASSFILES="$CLASSFILES \$(srcdir)/\$(DOMAIN)_$lang.class"
    QMFILES="$QMFILES $srcdirpre$lang.qm"
    frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
    MSGFILES="$MSGFILES $srcdirpre$frobbedlang.msg"
    frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
    RESOURCESDLLFILES="$RESOURCESDLLFILES $srcdirpre$frobbedlang/\$(DOMAIN).resources.dll"
  done
  # CATALOGS depends on both $ac_dir and the user's LINGUAS
  # environment variable.
  INST_LINGUAS=
  if test -n "$ALL_LINGUAS"; then
    for presentlang in $ALL_LINGUAS; do
      useit=no
      if test "%UNSET%" != "$LINGUAS"; then
        desiredlanguages="$LINGUAS"
      else
        desiredlanguages="$ALL_LINGUAS"
      fi
      for desiredlang in $desiredlanguages; do
        # Use the presentlang catalog if desiredlang is
        #   a. equal to presentlang, or
        #   b. a variant of presentlang (because in this case,
        #      presentlang can be used as a fallback for messages
        #      which are not translated in the desiredlang catalog).
        case "$desiredlang" in
          "$presentlang" | "$presentlang"_* | "$presentlang".* | "$presentlang"@*)
            useit=yes
            ;;
        esac
      done
      if test $useit = yes; then
        INST_LINGUAS="$INST_LINGUAS $presentlang"
      fi
    done
  fi
  CATALOGS=
  JAVACATALOGS=
  QTCATALOGS=
  TCLCATALOGS=
  CSHARPCATALOGS=
  if test -n "$INST_LINGUAS"; then
    for lang in $INST_LINGUAS; do
      CATALOGS="$CATALOGS $lang.gmo"
      JAVACATALOGS="$JAVACATALOGS \$(DOMAIN)_$lang.properties"
      QTCATALOGS="$QTCATALOGS $lang.qm"
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      TCLCATALOGS="$TCLCATALOGS $frobbedlang.msg"
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      CSHARPCATALOGS="$CSHARPCATALOGS $frobbedlang/\$(DOMAIN).resources.dll"
    done
  fi

  sed -e "s|@POTFILES_DEPS@|$POTFILES_DEPS|g" -e "s|@POFILES@|$POFILES|g" -e "s|@UPDATEPOFILES@|$UPDATEPOFILES|g" -e "s|@DUMMYPOFILES@|$DUMMYPOFILES|g" -e "s|@GMOFILES@|$GMOFILES|g" -e "s|@PROPERTIESFILES@|$PROPERTIESFILES|g" -e "s|@CLASSFILES@|$CLASSFILES|g" -e "s|@QMFILES@|$QMFILES|g" -e "s|@MSGFILES@|$MSGFILES|g" -e "s|@RESOURCESDLLFILES@|$RESOURCESDLLFILES|g" -e "s|@CATALOGS@|$CATALOGS|g" -e "s|@JAVACATALOGS@|$JAVACATALOGS|g" -e "s|@QTCATALOGS@|$QTCATALOGS|g" -e "s|@TCLCATALOGS@|$TCLCATALOGS|g" -e "s|@CSHARPCATALOGS@|$CSHARPCATALOGS|g" -e 's,^#distdir:,distdir:,' < "$ac_file" > "$ac_file.tmp"
  tab=`printf '\t'`
  if grep -l '@TCLCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/\..*$//' -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang.msg: $lang.po
${tab}@echo "\$(MSGFMT) -c --tcl -d \$(srcdir) -l $lang $srcdirpre$lang.po"; \
${tab}\$(MSGFMT) -c --tcl -d "\$(srcdir)" -l $lang $srcdirpre$lang.po || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if grep -l '@CSHARPCATALOGS@' "$ac_file" > /dev/null; then
    # Add dependencies that cannot be formulated as a simple suffix rule.
    for lang in $ALL_LINGUAS; do
      frobbedlang=`echo $lang | sed -e 's/_/-/g' -e 's/^sr-CS/sr-SP/' -e 's/@latin$/-Latn/' -e 's/@cyrillic$/-Cyrl/' -e 's/^sr-SP$/sr-SP-Latn/' -e 's/^uz-UZ$/uz-UZ-Latn/'`
      cat >> "$ac_file.tmp" <<EOF
$frobbedlang/\$(DOMAIN).resources.dll: $lang.po
${tab}@echo "\$(MSGFMT) -c --csharp -d \$(srcdir) -l $lang $srcdirpre$lang.po -r \$(DOMAIN)"; \
${tab}\$(MSGFMT) -c --csharp -d "\$(srcdir)" -l $lang $srcdirpre$lang.po -r "\$(DOMAIN)" || { rm -f "\$(srcdir)/$frobbedlang.msg"; exit 1; }
EOF
    done
  fi
  if test -n "$POMAKEFILEDEPS"; then
    cat >> "$ac_file.tmp" <<EOF
Makefile: $POMAKEFILEDEPS
EOF
  fi
  mv "$ac_file.tmp" "$ac_file"
])
m4trace:/usr/share/aclocal/po.m4:445: -1- AC_DEFUN([AM_XGETTEXT_OPTION_INIT], [
  XGETTEXT_EXTRA_OPTIONS=
])
m4trace:/usr/share/aclocal/po.m4:451: -1- AC_DEFUN([AM_XGETTEXT_OPTION], [
  AC_REQUIRE([AM_XGETTEXT_OPTION_INIT])
  XGETTEXT_EXTRA_OPTIONS="$XGETTEXT_EXTRA_OPTIONS $1"
])
m4trace:/usr/share/aclocal/progtest.m4:25: -1- AC_DEFUN([AM_PATH_PROG_WITH_TEST], [
# Prepare PATH_SEPARATOR.
# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  # Determine PATH_SEPARATOR by trying to find /bin/sh in a PATH which
  # contains only /bin. Note that ksh looks also at the FPATH variable,
  # so we have to set that as well for the test.
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
    && { (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 \
           || PATH_SEPARATOR=';'
       }
fi

# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
#! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  ac_executable_p="test -x"
else
  ac_executable_p="test -f"
fi
rm -f conf$$.file

# Extract the first word of "$2", so it can be a program name with args.
set dummy $2; ac_word=[$]2
AC_MSG_CHECKING([for $ac_word])
AC_CACHE_VAL([ac_cv_path_$1],
[case "[$]$1" in
  [[\\/]]* | ?:[[\\/]]*)
    ac_cv_path_$1="[$]$1" # Let the user override the test with a path.
    ;;
  *)
    gt_saved_IFS="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in m4_if([$5], , $PATH, [$5]); do
      IFS="$gt_saved_IFS"
      test -z "$ac_dir" && ac_dir=.
      for ac_exec_ext in '' $ac_executable_extensions; do
        if $ac_executable_p "$ac_dir/$ac_word$ac_exec_ext"; then
          echo "$as_me: trying $ac_dir/$ac_word..." >&AS_MESSAGE_LOG_FD
          if [$3]; then
            ac_cv_path_$1="$ac_dir/$ac_word$ac_exec_ext"
            break 2
          fi
        fi
      done
    done
    IFS="$gt_saved_IFS"
dnl If no 4th arg is given, leave the cache variable unset,
dnl so AC_PATH_PROGS will keep looking.
m4_if([$4], , , [  test -z "[$]ac_cv_path_$1" && ac_cv_path_$1="$4"
])dnl
    ;;
esac])dnl
$1="$ac_cv_path_$1"
if test m4_if([$4], , [-n "[$]$1"], ["[$]$1" != "$4"]); then
  AC_MSG_RESULT([$][$1])
else
  AC_MSG_RESULT([no])
fi
AC_SUBST([$1])dnl
])
m4trace:/usr/share/aclocal-1.17/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.17'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.17], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.17/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.17])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.17/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.17/cond-if.m4:23: -1- AC_DEFUN([AM_COND_IF], [m4_ifndef([_AM_COND_VALUE_$1],
	   [m4_fatal([$0: no such condition "$1"])])dnl
_AM_COND_IF([$1])dnl
if test -z "$$1_TRUE"; then :
  m4_n([$2])[]dnl
m4_ifval([$3],
[_AM_COND_ELSE([$1])dnl
else
  $3
])dnl
_AM_COND_ENDIF([$1])dnl
fi[]dnl
])
m4trace:/usr/share/aclocal-1.17/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.17/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thus:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.17/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.17/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.17/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  If GNU make was not used, consider
    re-running the configure script with MAKE="gmake" (or whatever is
    necessary).  You can also try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.17/depout.m4:64: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.17/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
m4_ifdef([_$0_ALREADY_INIT],
  [m4_fatal([$0 expanded multiple times
]m4_defn([_$0_ALREADY_INIT]))],
  [m4_define([_$0_ALREADY_INIT], m4_expansion_stack)])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifset([AC_PACKAGE_NAME], [ok]):m4_ifset([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
# Variables for tags utilities; see am/tags.am
if test -z "$CTAGS"; then
  CTAGS=ctags
fi
AC_SUBST([CTAGS])
if test -z "$ETAGS"; then
  ETAGS=etags
fi
AC_SUBST([ETAGS])
if test -z "$CSCOPE"; then
  CSCOPE=cscope
fi
AC_SUBST([CSCOPE])

AC_REQUIRE([_AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

AC_REQUIRE([_AM_PROG_RM_F])
AC_REQUIRE([_AM_PROG_XARGS_N])

dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.17/init.m4:166: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.17/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.17/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.17/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.17/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.17/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.17/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  MISSING="\${SHELL} '$am_aux_dir/missing'"
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.17/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.17/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.17/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.17/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.17/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.17/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.17/rmf.m4:12: -1- AC_DEFUN([_AM_PROG_RM_F], [am__rm_f_notfound=
AS_IF([(rm -f && rm -fr && rm -rf) 2>/dev/null], [], [am__rm_f_notfound='""'])
AC_SUBST(am__rm_f_notfound)
])
m4trace:/usr/share/aclocal-1.17/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.17/sanity.m4:11: -1- AC_DEFUN([_AM_SLEEP_FRACTIONAL_SECONDS], [dnl
AC_CACHE_CHECK([whether sleep supports fractional seconds],
               am_cv_sleep_fractional_seconds, [dnl
AS_IF([sleep 0.001 2>/dev/null], [am_cv_sleep_fractional_seconds=yes],
                                 [am_cv_sleep_fractional_seconds=no])
])])
m4trace:/usr/share/aclocal-1.17/sanity.m4:28: -1- AC_DEFUN([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION], [dnl
AC_REQUIRE([_AM_SLEEP_FRACTIONAL_SECONDS])
AC_CACHE_CHECK([filesystem timestamp resolution],
               am_cv_filesystem_timestamp_resolution, [dnl
# Default to the worst case.
am_cv_filesystem_timestamp_resolution=2

# Only try to go finer than 1 sec if sleep can do it.
# Don't try 1 sec, because if 0.01 sec and 0.1 sec don't work,
# - 1 sec is not much of a win compared to 2 sec, and
# - it takes 2 seconds to perform the test whether 1 sec works.
# 
# Instead, just use the default 2s on platforms that have 1s resolution,
# accept the extra 1s delay when using $sleep in the Automake tests, in
# exchange for not incurring the 2s delay for running the test for all
# packages.
#
am_try_resolutions=
if test "$am_cv_sleep_fractional_seconds" = yes; then
  # Even a millisecond often causes a bunch of false positives,
  # so just try a hundredth of a second. The time saved between .001 and
  # .01 is not terribly consequential.
  am_try_resolutions="0.01 0.1 $am_try_resolutions"
fi

# In order to catch current-generation FAT out, we must *modify* files
# that already exist; the *creation* timestamp is finer.  Use names
# that make ls -t sort them differently when they have equal
# timestamps than when they have distinct timestamps, keeping
# in mind that ls -t prints the *newest* file first.
rm -f conftest.ts?
: > conftest.ts1
: > conftest.ts2
: > conftest.ts3

# Make sure ls -t actually works.  Do 'set' in a subshell so we don't
# clobber the current shell's arguments. (Outer-level square brackets
# are removed by m4; they're present so that m4 does not expand
# <dollar><star>; be careful, easy to get confused.)
if (
     set X `[ls -t conftest.ts[12]]` &&
     {
       test "$[]*" != "X conftest.ts1 conftest.ts2" ||
       test "$[]*" != "X conftest.ts2 conftest.ts1";
     }
); then :; else
  # If neither matched, then we have a broken ls.  This can happen
  # if, for instance, CONFIG_SHELL is bash and it inherits a
  # broken ls alias from the environment.  This has actually
  # happened.  Such a system could not be considered "sane".
  _AS_ECHO_UNQUOTED(
    ["Bad output from ls -t: \"`[ls -t conftest.ts[12]]`\""],
    [AS_MESSAGE_LOG_FD])
  AC_MSG_FAILURE([ls -t produces unexpected output.
Make sure there is not a broken ls alias in your environment.])
fi

for am_try_res in $am_try_resolutions; do
  # Any one fine-grained sleep might happen to cross the boundary
  # between two values of a coarser actual resolution, but if we do
  # two fine-grained sleeps in a row, at least one of them will fall
  # entirely within a coarse interval.
  echo alpha > conftest.ts1
  sleep $am_try_res
  echo beta > conftest.ts2
  sleep $am_try_res
  echo gamma > conftest.ts3

  # We assume that 'ls -t' will make use of high-resolution
  # timestamps if the operating system supports them at all.
  if (set X `ls -t conftest.ts?` &&
      test "$[]2" = conftest.ts3 &&
      test "$[]3" = conftest.ts2 &&
      test "$[]4" = conftest.ts1); then
    #
    # Ok, ls -t worked. If we're at a resolution of 1 second, we're done,
    # because we don't need to test make.
    make_ok=true
    if test $am_try_res != 1; then
      # But if we've succeeded so far with a subsecond resolution, we
      # have one more thing to check: make. It can happen that
      # everything else supports the subsecond mtimes, but make doesn't;
      # notably on macOS, which ships make 3.81 from 2006 (the last one
      # released under GPLv2). https://bugs.gnu.org/68808
      # 
      # We test $MAKE if it is defined in the environment, else "make".
      # It might get overridden later, but our hope is that in practice
      # it does not matter: it is the system "make" which is (by far)
      # the most likely to be broken, whereas if the user overrides it,
      # probably they did so with a better, or at least not worse, make.
      # https://lists.gnu.org/archive/html/automake/2024-06/msg00051.html
      #
      # Create a Makefile (real tab character here):
      rm -f conftest.mk
      echo 'conftest.ts1: conftest.ts2' >conftest.mk
      echo '	touch conftest.ts2' >>conftest.mk
      #
      # Now, running
      #   touch conftest.ts1; touch conftest.ts2; make
      # should touch ts1 because ts2 is newer. This could happen by luck,
      # but most often, it will fail if make's support is insufficient. So
      # test for several consecutive successes.
      #
      # (We reuse conftest.ts[12] because we still want to modify existing
      # files, not create new ones, per above.)
      n=0
      make=${MAKE-make}
      until test $n -eq 3; do
        echo one > conftest.ts1
        sleep $am_try_res
        echo two > conftest.ts2 # ts2 should now be newer than ts1
        if $make -f conftest.mk | grep 'up to date' >/dev/null; then
          make_ok=false
          break # out of $n loop
        fi
        n=`expr $n + 1`
      done
    fi
    #
    if $make_ok; then
      # Everything we know to check worked out, so call this resolution good.
      am_cv_filesystem_timestamp_resolution=$am_try_res
      break # out of $am_try_res loop
    fi
    # Otherwise, we'll go on to check the next resolution.
  fi
done
rm -f conftest.ts?
# (end _am_filesystem_timestamp_resolution)
])])
m4trace:/usr/share/aclocal-1.17/sanity.m4:161: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_REQUIRE([_AM_FILESYSTEM_TIMESTAMP_RESOLUTION])
# This check should not be cached, as it may vary across builds of
# different projects.
AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
am_build_env_is_sane=no
am_has_slept=no
rm -f conftest.file
for am_try in 1 2; do
  echo "timestamp, slept: $am_has_slept" > conftest.file
  if (
    set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
    if test "$[]*" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
    fi
    test "$[]2" = conftest.file
  ); then
    am_build_env_is_sane=yes
    break
  fi
  # Just in case.
  sleep "$am_cv_filesystem_timestamp_resolution"
  am_has_slept=yes
done

AC_MSG_RESULT([$am_build_env_is_sane])
if test "$am_build_env_is_sane" = no; then
  AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi

# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
AS_IF([test -e conftest.file || grep 'slept: no' conftest.file >/dev/null 2>&1],, [dnl
  ( sleep "$am_cv_filesystem_timestamp_resolution" ) &
  am_sleep_pid=$!
])
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.17/silent.m4:11: -1- AC_DEFUN([_AM_SILENT_RULES], [AM_DEFAULT_VERBOSITY=1
AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
dnl Delay evaluation of AM_DEFAULT_VERBOSITY to the end to allow multiple calls
dnl to AM_SILENT_RULES to change the default value.
AC_CONFIG_COMMANDS_PRE([dnl
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
esac
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
])dnl
])
m4trace:/usr/share/aclocal-1.17/silent.m4:69: -1- AC_DEFUN([AM_SILENT_RULES], [AC_REQUIRE([_AM_SILENT_RULES])
AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1])])
m4trace:/usr/share/aclocal-1.17/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.17/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.17/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.17/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test x$am_uid = xunknown; then
        AC_MSG_WARN([ancient id detected; assuming current UID is ok, but dist-ustar might not work])
      elif test $am_uid -le $am_max_uid; then
        AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test x$gm_gid = xunknown; then
        AC_MSG_WARN([ancient id detected; assuming current GID is ok, but dist-ustar might not work])
      elif test $am_gid -le $am_max_gid; then
        AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:/usr/share/aclocal-1.17/xargsn.m4:12: -1- AC_DEFUN([_AM_PROG_XARGS_N], [AC_CACHE_CHECK([xargs -n works], am_cv_xargs_n_works, [dnl
AS_IF([test "`echo 1 2 3 | xargs -n2 echo`" = "1 2
3"], [am_cv_xargs_n_works=yes], [am_cv_xargs_n_works=no])])
AS_IF([test "$am_cv_xargs_n_works" = yes], [am__xargs_n='xargs -n'], [dnl
  am__xargs_n='am__xargs_n () { shift; sed "s/ /\\n/g" | while read am__xargs_n_arg; do "$@" "$am__xargs_n_arg"; done; }'
])dnl
AC_SUBST(am__xargs_n)
])
m4trace:m4/00gnulib.m4:26: -1- AC_DEFUN([gl_COMPILER_CLANG], [
dnl AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([whether the compiler is clang],
    [gl_cv_compiler_clang],
    [dnl Use _AC_COMPILE_IFELSE instead of AC_EGREP_CPP, to avoid error
     dnl "circular dependency of AC_LANG_COMPILER(C)" if AC_PROG_CC has
     dnl not yet been invoked.
     _AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[
           #ifdef __clang__
           barfbarf
           #endif
           ]],[[]])
        ],
        [gl_cv_compiler_clang=no],
        [gl_cv_compiler_clang=yes])
    ])
])
m4trace:m4/00gnulib.m4:45: -1- AC_DEFUN([gl_COMPILER_PREPARE_CHECK_DECL], [
dnl AC_REQUIRE([AC_PROG_CC])
dnl AC_REQUIRE([gl_COMPILER_CLANG])
  AC_CACHE_CHECK([for compiler option needed when checking for declarations],
    [gl_cv_compiler_check_decl_option],
    [if test $gl_cv_compiler_clang = yes; then
       dnl Test whether the compiler supports the option
       dnl '-Werror=implicit-function-declaration'.
       saved_ac_compile="$ac_compile"
       ac_compile="$ac_compile -Werror=implicit-function-declaration"
       dnl Use _AC_COMPILE_IFELSE instead of AC_COMPILE_IFELSE, to avoid a
       dnl warning "AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS".
       _AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],
         [gl_cv_compiler_check_decl_option='-Werror=implicit-function-declaration'],
         [gl_cv_compiler_check_decl_option=none])
       ac_compile="$saved_ac_compile"
     else
       gl_cv_compiler_check_decl_option=none
     fi
    ])
  if test "x$gl_cv_compiler_check_decl_option" != xnone; then
    ac_compile_for_check_decl="$ac_compile $gl_cv_compiler_check_decl_option"
  else
    ac_compile_for_check_decl="$ac_compile"
  fi
])
m4trace:m4/00gnulib.m4:87: -1- AC_DEFUN([gl_00GNULIB])
m4trace:m4/__inline.m4:11: -1- AC_DEFUN([gl___INLINE], [
  AC_CACHE_CHECK([whether the compiler supports the __inline keyword],
    [gl_cv_c___inline],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
         [[typedef int foo_t;
           static __inline foo_t foo (void) { return 0; }]],
         [[return foo ();]])],
       [gl_cv_c___inline=yes],
       [gl_cv_c___inline=no])])
  if test $gl_cv_c___inline = yes; then
    AC_DEFINE([HAVE___INLINE], [1],
      [Define to 1 if the compiler supports the keyword '__inline'.])
  fi
])
m4trace:m4/absolute-header.m4:24: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    [gl_absolute_header],
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET([ac_header_exists]) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET([gl_absolute_header])"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:54: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    mingw* | windows*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/access.m4:9: -1- AC_DEFUN([gl_FUNC_ACCESS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl On native Windows, access (= _access) does not support the X_OK mode.
  dnl It works by chance on some versions of mingw.
  case "$host_os" in
    mingw* | windows*)
      REPLACE_ACCESS=1
      ;;
    *)
      dnl Mac OS X 10.5 mistakenly allows access("link-to-file/",amode).
      AC_CHECK_FUNCS_ONCE([lstat])
      AC_CACHE_CHECK([whether access honors trailing slash],
        [gl_cv_func_access_slash_works],
        [# Assume that if we have lstat, we can also check symlinks.
         if test $ac_cv_func_lstat = yes; then
           rm -rf conftest.f conftest.lnk
           touch conftest.f || AC_MSG_ERROR([cannot create temporary files])
           ln -s conftest.f conftest.lnk
           AC_RUN_IFELSE(
             [AC_LANG_PROGRAM([[
                #include <unistd.h>
                ]],
                [[int result = 0;
                  if (access ("conftest.lnk/", R_OK) == 0)
                    result |= 1;
                  return result;
                ]])],
             [gl_cv_func_access_slash_works=yes],
             [gl_cv_func_access_slash_works=no],
             dnl When crosscompiling, assume access is broken.
             [case "$host_os" in
                                   # Guess yes on Linux systems.
                linux-* | linux)   gl_cv_func_access_slash_works="guessing yes" ;;
                                   # Guess yes on systems that emulate the Linux system calls.
                midipix*)          gl_cv_func_access_slash_works="guessing yes" ;;
                                   # Guess yes on glibc systems.
                *-gnu*)            gl_cv_func_access_slash_works="guessing yes" ;;
                                   # If we don't know, obey --enable-cross-guesses.
                *)                 gl_cv_func_access_slash_works="$gl_cross_guess_normal" ;;
              esac
             ])
           rm -rf conftest.f conftest.lnk
         else
           gl_cv_func_access_slash_works="guessing yes"
         fi
      ])
      case "$gl_cv_func_access_slash_works" in
        *yes) ;;
        *)
          REPLACE_ACCESS=1
          AC_DEFINE([ACCESS_TRAILING_SLASH_BUG], [1],
            [Define if access does not correctly handle trailing slashes.])
          ;;
      esac
      ;;
  esac
])
m4trace:m4/alloca.m4:10: -1- AC_DEFUN([gl_FUNC_ALLOCA], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  if test $ac_cv_func_alloca_works = no; then
    gl_PREREQ_ALLOCA
  fi

  # Define an additional variable used in the Makefile substitution.
  if test $ac_cv_working_alloca_h = yes; then
    AC_CACHE_CHECK([for alloca as a compiler built-in], [gl_cv_rpl_alloca], [
      AC_EGREP_CPP([Need own alloca], [
#if defined __GNUC__ || defined _AIX || defined _MSC_VER
        Need own alloca
#endif
        ], [gl_cv_rpl_alloca=yes], [gl_cv_rpl_alloca=no])
    ])
    if test $gl_cv_rpl_alloca = yes; then
      dnl OK, alloca can be implemented through a compiler built-in.
      AC_DEFINE([HAVE_ALLOCA], [1],
        [Define to 1 if you have 'alloca' after including <alloca.h>,
         a header that may be supplied by this distribution.])
      GL_GENERATE_ALLOCA_H=true
    else
      dnl alloca exists as a library function, i.e. it is slow and probably
      dnl a memory leak. Don't define HAVE_ALLOCA in this case.
      GL_GENERATE_ALLOCA_H=false
    fi
  else
    GL_GENERATE_ALLOCA_H=true
  fi

  if test $ac_cv_working_alloca_h = yes; then
    HAVE_ALLOCA_H=1
  else
    HAVE_ALLOCA_H=0
  fi
  AC_SUBST([HAVE_ALLOCA_H])
])
m4trace:m4/alloca.m4:51: -1- AC_DEFUN([gl_PREREQ_ALLOCA], [:])
m4trace:m4/assert_h.m4:11: -1- AC_DEFUN([gl_ASSERT_H], [
  AC_CACHE_CHECK([for static_assert], [gl_cv_static_assert],
    [gl_saved_CFLAGS=$CFLAGS
     for gl_working in "yes, a keyword" "yes, an <assert.h> macro"; do
      AS_CASE([$gl_working],
        [*assert.h*], [CFLAGS="$gl_saved_CFLAGS -DINCLUDE_ASSERT_H"])

      AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if defined __clang__ && __STDC_VERSION__ < 202311
             #pragma clang diagnostic error "-Wc2x-extensions"
             #pragma clang diagnostic error "-Wc++1z-extensions"
            #endif
            #ifdef INCLUDE_ASSERT_H
             #include <assert.h>
            #endif
            static_assert (2 + 2 == 4, "arithmetic does not work");
            static_assert (2 + 2 == 4);
          ]],
          [[
            static_assert (sizeof (char) == 1, "sizeof does not work");
            static_assert (sizeof (char) == 1);
          ]])],
       [gl_cv_static_assert=$gl_working],
       [gl_cv_static_assert=no])
      CFLAGS=$gl_saved_CFLAGS
      test "$gl_cv_static_assert" != no && break
     done])

  GL_GENERATE_ASSERT_H=false
  AS_CASE([$gl_cv_static_assert],
    [yes*keyword*],
      [AC_DEFINE([HAVE_C_STATIC_ASSERT], [1],
         [Define to 1 if the static_assert keyword works.])],
    [no],
      [GL_GENERATE_ASSERT_H=true
       gl_NEXT_HEADERS([assert.h])])

  dnl The "zz" puts this toward config.h's end, to avoid potential
  dnl collisions with other definitions.
  dnl #undef assert so that programs are not tempted to use it without
  dnl specifically including assert.h.
  dnl #undef __ASSERT_H__ so that on IRIX, when programs later include
  dnl <assert.h>, this include actually defines assert.
  dnl Break the #undef_s apart with a comment so that 'configure' does
  dnl not comment them out.
  AH_VERBATIM([zzstatic_assert],
[#if (!defined HAVE_C_STATIC_ASSERT && !defined assert \
     && (!defined __cplusplus \
         || (__cpp_static_assert < 201411 \
             && __GNUG__ < 6 && __clang_major__ < 6)))
 #include <assert.h>
 #undef/**/assert
 #ifdef __sgi
  #undef/**/__ASSERT_H__
 #endif
 /* Solaris 11.4 <assert.h> defines static_assert as a macro with 2 arguments.
    We need it also to be invocable with a single argument.  */
 #if defined __sun && (__STDC_VERSION__ - 0 >= 201112L) && !defined __cplusplus
  #undef/**/static_assert
  #define static_assert _Static_assert
 #endif
#endif])
])
m4trace:m4/builtin-expect.m4:13: -1- AC_DEFUN([gl___BUILTIN_EXPECT], [
  AC_CACHE_CHECK([for __builtin_expect],
    [gl_cv___builtin_expect],
    [AC_LINK_IFELSE(
       [AC_LANG_SOURCE([[
         int
         main (int argc, char **argv)
         {
           argc = __builtin_expect (argc, 100);
           return argv[argc != 100][0];
         }]])],
       [gl_cv___builtin_expect=yes],
       [AC_LINK_IFELSE(
          [AC_LANG_SOURCE([[
             #include <builtins.h>
             int
             main (int argc, char **argv)
             {
               argc = __builtin_expect (argc, 100);
               return argv[argc != 100][0];
             }]])],
          [gl_cv___builtin_expect="in <builtins.h>"],
          [gl_cv___builtin_expect=no])])])
  if test "$gl_cv___builtin_expect" = yes; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [1])
  elif test "$gl_cv___builtin_expect" = "in <builtins.h>"; then
    AC_DEFINE([HAVE___BUILTIN_EXPECT], [2])
  fi
  AH_VERBATIM([HAVE___BUILTIN_EXPECT],
    [/* Define to 1 if the compiler supports __builtin_expect,
   and to 2 if <builtins.h> does.  */
#undef HAVE___BUILTIN_EXPECT
#ifndef HAVE___BUILTIN_EXPECT
# define __builtin_expect(e, c) (e)
#elif HAVE___BUILTIN_EXPECT == 2
# include <builtins.h>
#endif
    ])
])
m4trace:m4/c-bool.m4:11: -1- AC_DEFUN([gl_C_BOOL], [
  AC_CACHE_CHECK([for bool, true, false], [gl_cv_c_bool],
    [AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE([[
          #if true == false
           #error "true == false"
          #endif
          extern bool b;
          bool b = true == false;]])],
       [gl_cv_c_bool=yes],
       [gl_cv_c_bool=no])])
  if test "$gl_cv_c_bool" = yes; then
    AC_DEFINE([HAVE_C_BOOL], [1],
      [Define to 1 if bool, true and false work as per C2023.])
  fi

  AC_CHECK_HEADERS_ONCE([stdbool.h])

  dnl The "zz" puts this toward config.h's end, to avoid potential
  dnl collisions with other definitions.
  dnl If 'bool', 'true' and 'false' do not work, arrange for them to work.
  dnl In C, this means including <stdbool.h> if it is not already included.
  dnl However, if the preprocessor mistakenly treats 'true' as 0,
  dnl define it to a bool expression equal to 1; this is needed in
  dnl Sun C++ 5.11 (Oracle Solaris Studio 12.2, 2010) and older.
  AH_VERBATIM([zzbool],
[#ifndef HAVE_C_BOOL
# if !defined __cplusplus && !defined __bool_true_false_are_defined
#  if HAVE_STDBOOL_H
#   include <stdbool.h>
#  else
#   if defined __SUNPRO_C
#    error "<stdbool.h> is not usable with this configuration. To make it usable, add -D_STDC_C99= to $CC."
#   else
#    error "<stdbool.h> does not exist on this platform. Use gnulib module 'stdbool-c99' instead of gnulib module 'stdbool'."
#   endif
#  endif
# endif
# if !true
#  define true (!false)
# endif
#endif])
])
m4trace:m4/calloc.m4:19: -1- AC_DEFUN([_AC_FUNC_CALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether calloc (0, n) and calloc (n, 0) return nonnull],
    [ac_cv_func_calloc_0_nonnull],
    [if test $cross_compiling != yes; then
       ac_cv_func_calloc_0_nonnull=yes
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[int result = 0;
              char * volatile p = calloc (0, 0);
              if (!p)
                result |= 1;
              free (p);
              return result;
            ]])],
         [],
         [ac_cv_func_calloc_0_nonnull=no])
     else
       case "$host_os" in
                             # Guess yes on glibc systems.
         *-gnu* | gnu*)      ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                             # Guess yes on musl systems.
         *-musl* | midipix*) ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                             # Guess yes on native Windows.
         mingw* | windows*)  ac_cv_func_calloc_0_nonnull="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
         *)                  ac_cv_func_calloc_0_nonnull="$gl_cross_guess_normal" ;;
       esac
     fi
    ])
  AS_CASE([$ac_cv_func_calloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/calloc.m4:58: -1- AC_DEFUN([gl_FUNC_CALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_CALLOC_POSIX])

  dnl Through the dependency on module extensions-aix, _LINUX_SOURCE_COMPAT
  dnl gets defined already before this macro gets invoked.  This helps
  dnl if !(__VEC__ || __AIXVEC), and doesn't hurt otherwise.

  REPLACE_CALLOC_FOR_CALLOC_GNU="$REPLACE_CALLOC_FOR_CALLOC_POSIX"
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 0; then
    _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC_FOR_CALLOC_GNU=1])
  fi
])
m4trace:m4/calloc.m4:78: -1- AC_DEFUN([gl_FUNC_CALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    REPLACE_CALLOC_FOR_CALLOC_POSIX=1
  fi
  dnl Although in theory we should also test for size_t overflow,
  dnl in practice testing for ptrdiff_t overflow suffices
  dnl since PTRDIFF_MAX <= SIZE_MAX on all known Gnulib porting targets.
  dnl A separate size_t test would slow down 'configure'.
])
m4trace:m4/canonicalize.m4:13: -1- AC_DEFUN([gl_FUNC_CANONICALIZE_FILENAME_MODE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name])
  gl_CHECK_FUNCS_ANDROID([faccessat], [[#include <unistd.h>]])
  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
  else
    case "$gl_cv_func_realpath_works" in
      *yes) ;;
      *)    REPLACE_CANONICALIZE_FILE_NAME=1 ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:32: -1- AC_DEFUN([gl_CANONICALIZE_LGPL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CANONICALIZE_LGPL_SEPARATE])
  if test $ac_cv_func_canonicalize_file_name = no; then
    HAVE_CANONICALIZE_FILE_NAME=0
    if test $ac_cv_func_realpath = no; then
      HAVE_REALPATH=0
    else
      case "$gl_cv_func_realpath_works" in
        *yes) ;;
        *)    REPLACE_REALPATH=1 ;;
      esac
    fi
  else
    case "$gl_cv_func_realpath_works" in
      *yes)
        ;;
      *)
        REPLACE_CANONICALIZE_FILE_NAME=1
        REPLACE_REALPATH=1
        ;;
    esac
  fi
])
m4trace:m4/canonicalize.m4:60: -1- AC_DEFUN([gl_CANONICALIZE_LGPL_SEPARATE], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_CHECK_FUNCS_ONCE([canonicalize_file_name])
  gl_CHECK_FUNCS_ANDROID([faccessat], [[#include <unistd.h>]])

  dnl On native Windows, we use _getcwd(), regardless whether getcwd() is
  dnl available through the linker option '-loldnames'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | windows*) ;;
    *) AC_CHECK_FUNCS([getcwd]) ;;
  esac

  AC_REQUIRE([gl_DOUBLE_SLASH_ROOT])
  AC_REQUIRE([gl_FUNC_REALPATH_WORKS])
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/canonicalize.m4:83: -1- AC_DEFUN([gl_FUNC_REALPATH_WORKS], [
  AC_CHECK_FUNCS_ONCE([realpath lstat])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether realpath works], [gl_cv_func_realpath_works], [
    rm -rf conftest.a conftest.d
    touch conftest.a
    # Assume that if we have lstat, we can also check symlinks.
    if test $ac_cv_func_lstat = yes; then
      ln -s conftest.a conftest.l
    fi
    mkdir conftest.d
    AC_RUN_IFELSE([
      AC_LANG_PROGRAM([[
        ]GL_NOCRASH[
        #include <errno.h>
        #include <stdlib.h>
        #include <string.h>
      ]], [[
        int result = 0;
        /* This test fails on Solaris 10.  */
        {
          char *name = realpath ("conftest.a", NULL);
          if (!(name && *name == '/'))
            result |= 1;
          free (name);
        }
        /* This test fails on older versions of Cygwin.  */
        {
          char *name = realpath ("conftest.b/../conftest.a", NULL);
          if (name != NULL)
            result |= 2;
          free (name);
        }
        /* This test fails on macOS 14, Cygwin 2.9.  */
        #if HAVE_LSTAT
        {
          char *name = realpath ("conftest.l/../conftest.a", NULL);
          if (name != NULL || errno != ENOTDIR)
            result |= 4;
          free (name);
        }
        #endif
        /* This test fails on macOS 14, OpenBSD 6.0.  */
        {
          char *name = realpath ("conftest.a/", NULL);
          if (name != NULL)
            result |= 8;
          free (name);
        }
        /* This test fails on AIX 7, Solaris 10.  */
        {
          char *name1 = realpath (".", NULL);
          char *name2 = realpath ("conftest.d//./..", NULL);
          if (! name1 || ! name2 || strcmp (name1, name2))
            result |= 16;
          free (name1);
          free (name2);
        }
        #ifdef __linux__
        /* On Linux, // is the same as /. See also double-slash-root.m4.
           realpath() should respect this.
           This test fails on musl libc 1.2.2.  */
        {
          char *name = realpath ("//", NULL);
          if (! name || strcmp (name, "/"))
            result |= 32;
          free (name);
        }
        #endif
        return result;
      ]])
     ],
     [gl_cv_func_realpath_works=yes],
     [case $? in
        32) gl_cv_func_realpath_works=nearly ;;
        *)  gl_cv_func_realpath_works=no ;;
      esac
     ],
     [case "$host_os" in
                           # Guess yes on glibc systems.
        *-gnu* | gnu*)     gl_cv_func_realpath_works="guessing yes" ;;
                           # Guess 'nearly' on musl systems.
        *-musl*)           gl_cv_func_realpath_works="guessing nearly" ;;
                           # Guess no on macOS.
        darwin*)           gl_cv_func_realpath_works="guessing no" ;;
                           # Guess no on Cygwin.
        cygwin*)           gl_cv_func_realpath_works="guessing no" ;;
                           # Guess no on native Windows.
        mingw* | windows*) gl_cv_func_realpath_works="guessing no" ;;
                           # If we don't know, obey --enable-cross-guesses.
        *)                 gl_cv_func_realpath_works="$gl_cross_guess_normal" ;;
      esac
     ])
    rm -rf conftest.a conftest.l conftest.d
  ])
  case "$gl_cv_func_realpath_works" in
    *yes)
      AC_DEFINE([FUNC_REALPATH_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles leading slashes and a trailing slash correctly.])
      ;;
    *nearly)
      AC_DEFINE([FUNC_REALPATH_NEARLY_WORKS], [1],
        [Define to 1 if realpath() can malloc memory, always gives an absolute path, and handles a trailing slash correctly.])
      ;;
  esac
])
m4trace:m4/chdir-long.m4:17: -1- AC_DEFUN([gl_FUNC_CHDIR_LONG], [
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether this system supports file names of any length],
    [gl_cv_have_unlimited_file_name_length],
    [AC_EGREP_CPP([have_arbitrary_file_name_length_limit],
                  gl_PATHMAX_SNIPPET[
#ifdef PATH_MAX
have_arbitrary_file_name_length_limit
#endif],
    [gl_cv_have_unlimited_file_name_length=no],
    [gl_cv_have_unlimited_file_name_length=yes])])
])
m4trace:m4/chdir-long.m4:31: -1- AC_DEFUN([gl_PREREQ_CHDIR_LONG], [:])
m4trace:m4/close.m4:9: -1- AC_DEFUN_ONCE([gl_FUNC_CLOSE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_CLOSE=1
    fi
  ])
  m4_ifdef([gl_PREREQ_SYS_H_WINSOCK2], [
    gl_PREREQ_SYS_H_WINSOCK2
    if test $UNISTD_H_HAVE_WINSOCK2_H = 1; then
      dnl Even if the 'socket' module is not used here, another part of the
      dnl application may use it and pass file descriptors that refer to
      dnl sockets to the close() function. So enable the support for sockets.
      REPLACE_CLOSE=1
    fi
  ])
  dnl Replace close() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_CLOSE = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_CLOSE=1
      fi
    fi
  ])
])
m4trace:m4/closedir.m4:9: -1- AC_DEFUN([gl_FUNC_CLOSEDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([closedir])
  if test $ac_cv_func_closedir = no; then
    HAVE_CLOSEDIR=0
  else
    dnl Replace closedir() on native Windows and OS/2 kLIBC,
    dnl to support fdopendir().
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      REPLACE_CLOSEDIR=1
    fi
    dnl Replace closedir() for supporting the gnulib-defined fchdir() function,
    dnl to keep fchdir's bookkeeping up-to-date.
    m4_ifdef([gl_FUNC_FCHDIR], [
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_CLOSEDIR=1
      fi
    ])
  fi
])
m4trace:m4/codeset.m4:12: -1- AC_DEFUN([AM_LANGINFO_CODESET], [
  AC_CACHE_CHECK([for nl_langinfo and CODESET], [am_cv_langinfo_codeset],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <langinfo.h>]],
          [[char* cs = nl_langinfo(CODESET); return !cs;]])],
       [am_cv_langinfo_codeset=yes],
       [am_cv_langinfo_codeset=no])
    ])
  if test $am_cv_langinfo_codeset = yes; then
    AC_DEFINE([HAVE_LANGINFO_CODESET], [1],
      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])
  fi
])
m4trace:m4/d-ino.m4:13: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO], [AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CACHE_CHECK([for d_ino member in directory struct],
                  [gl_cv_struct_dirent_d_ino],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <sys/types.h>
             #include <sys/stat.h>
             #include <dirent.h>
           ]],
           [[DIR *dp = opendir (".");
             struct dirent *e;
             struct stat st;
             if (! dp)
               return 1;
             e = readdir (dp);
             if (! e)
               { closedir (dp); return 2; }
             if (lstat (e->d_name, &st) != 0)
               { closedir (dp); return 3; }
             if (e->d_ino != st.st_ino)
               { closedir (dp); return 4; }
             closedir (dp);
             return 0;
           ]])],
           [gl_cv_struct_dirent_d_ino=yes],
           [gl_cv_struct_dirent_d_ino=no],
           [case "$host_os" in
                                 # Guess yes on glibc systems with Linux kernel.
              linux*-gnu*)       gl_cv_struct_dirent_d_ino="guessing yes" ;;
                                 # Guess yes on musl systems with Linux kernel.
              linux*-musl*)      gl_cv_struct_dirent_d_ino="guessing yes" ;;
                                 # Guess yes on systems that emulate the Linux system calls.
              midipix*)          gl_cv_struct_dirent_d_ino="guessing yes" ;;
                                 # Guess no on native Windows.
              mingw* | windows*) gl_cv_struct_dirent_d_ino="guessing no" ;;
                                 # If we don't know, obey --enable-cross-guesses.
              *)                 gl_cv_struct_dirent_d_ino="$gl_cross_guess_normal" ;;
            esac
           ])])
   case "$gl_cv_struct_dirent_d_ino" in
     *yes)
       AC_DEFINE([D_INO_IN_DIRENT], [1],
         [Define if struct dirent has a member d_ino that actually works.])
       ;;
   esac
  
])
m4trace:m4/dirent_h.m4:11: -1- AC_DEFUN_ONCE([gl_DIRENT_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  dnl <dirent.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([dirent.h])
  if test $ac_cv_header_dirent_h = yes; then
    HAVE_DIRENT_H=1
  else
    HAVE_DIRENT_H=0
  fi
  AC_SUBST([HAVE_DIRENT_H])

  gl_DIRENT_DIR

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
])
m4trace:m4/dirent_h.m4:35: -1- AC_DEFUN_ONCE([gl_DIRENT_DIR], [
  dnl Set DIR_HAS_FD_MEMBER if dirfd() works, i.e. not always returns -1.
  dnl We could use the findings from gl_FUNC_DIRFD and gl_PREREQ_DIRFD, but
  dnl it's simpler since we know the affected platforms.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | windows* | os2*) DIR_HAS_FD_MEMBER=0 ;;
    *)                        DIR_HAS_FD_MEMBER=1 ;;
  esac
  AC_SUBST([DIR_HAS_FD_MEMBER])
])
m4trace:m4/dirent_h.m4:52: -1- AC_DEFUN([gl_DIRENT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_DIRENT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/dirent_h.m4:64: -1- AC_DEFUN([gl_DIRENT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_DIRENT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
])
m4trace:m4/dirent_h.m4:81: -1- AC_DEFUN([gl_DIRENT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_OPENDIR=1;       AC_SUBST([HAVE_OPENDIR])
  HAVE_READDIR=1;       AC_SUBST([HAVE_READDIR])
  HAVE_REWINDDIR=1;     AC_SUBST([HAVE_REWINDDIR])
  HAVE_CLOSEDIR=1;      AC_SUBST([HAVE_CLOSEDIR])
  HAVE_DECL_DIRFD=1;    AC_SUBST([HAVE_DECL_DIRFD])
  HAVE_DECL_FDOPENDIR=1;AC_SUBST([HAVE_DECL_FDOPENDIR])
  HAVE_FDOPENDIR=1;     AC_SUBST([HAVE_FDOPENDIR])
  HAVE_SCANDIR=1;       AC_SUBST([HAVE_SCANDIR])
  HAVE_ALPHASORT=1;     AC_SUBST([HAVE_ALPHASORT])
  REPLACE_OPENDIR=0;    AC_SUBST([REPLACE_OPENDIR])
  REPLACE_READDIR=0;    AC_SUBST([REPLACE_READDIR])
  REPLACE_REWINDDIR=0;  AC_SUBST([REPLACE_REWINDDIR])
  REPLACE_CLOSEDIR=0;   AC_SUBST([REPLACE_CLOSEDIR])
  REPLACE_DIRFD=0;      AC_SUBST([REPLACE_DIRFD])
  REPLACE_FDOPENDIR=0;  AC_SUBST([REPLACE_FDOPENDIR])
])
m4trace:m4/dirfd.m4:13: -1- AC_DEFUN([gl_FUNC_DIRFD], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Persuade glibc <dirent.h> to declare dirfd().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS([dirfd])
  AC_CHECK_DECLS([dirfd], , ,
    [[#include <sys/types.h>
      #include <dirent.h>]])
  if test $ac_cv_have_decl_dirfd = no; then
    HAVE_DECL_DIRFD=0
  fi

  AC_CACHE_CHECK([whether dirfd is a macro],
    [gl_cv_func_dirfd_macro],
    [AC_EGREP_CPP([dirent_header_defines_dirfd], [
#include <sys/types.h>
#include <dirent.h>
#ifdef dirfd
 dirent_header_defines_dirfd
#endif],
       [gl_cv_func_dirfd_macro=yes],
       [gl_cv_func_dirfd_macro=no])])

  if test $ac_cv_func_dirfd = no && test $gl_cv_func_dirfd_macro = no; then
    HAVE_DIRFD=0
  else
    HAVE_DIRFD=1
    dnl Replace dirfd() on native Windows and OS/2 kLIBC,
    dnl to support fdopendir().
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      REPLACE_DIRFD=1
    fi
  fi
])
m4trace:m4/dirfd.m4:54: -1- AC_DEFUN([gl_PREREQ_DIRFD], [
  AC_CACHE_CHECK([how to get the file descriptor associated with an open DIR*],
                 [gl_cv_sys_dir_fd_member_name],
    [
      gl_saved_CFLAGS=$CFLAGS
      for ac_expr in d_fd dd_fd; do

        CFLAGS="$CFLAGS -DDIR_FD_MEMBER_NAME=$ac_expr"
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
           #include <sys/types.h>
           #include <dirent.h>]],
          [[DIR *dir_p = opendir("."); (void) dir_p->DIR_FD_MEMBER_NAME;]])],
          [dir_fd_found=yes]
        )
        CFLAGS=$gl_saved_CFLAGS
        test "$dir_fd_found" = yes && break
      done
      test "$dir_fd_found" = yes || ac_expr=no_such_member

      gl_cv_sys_dir_fd_member_name=$ac_expr
    ]
  )
  if test $gl_cv_sys_dir_fd_member_name != no_such_member; then
    AC_DEFINE_UNQUOTED([DIR_FD_MEMBER_NAME],
      [$gl_cv_sys_dir_fd_member_name],
      [the name of the file descriptor member of DIR])
  fi
  AH_VERBATIM([DIR_TO_FD],
              [#ifdef DIR_FD_MEMBER_NAME
# define DIR_TO_FD(Dir_p) ((Dir_p)->DIR_FD_MEMBER_NAME)
#else
# define DIR_TO_FD(Dir_p) -1
#endif
])
])
m4trace:m4/double-slash-root.m4:9: -1- AC_DEFUN([gl_DOUBLE_SLASH_ROOT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether // is distinct from /], [gl_cv_double_slash_root],
    [ if test x"$cross_compiling" = xyes ; then
        # When cross-compiling, there is no way to tell whether // is special
        # short of a list of hosts.  However, the only known hosts to date
        # that have a distinct // are Apollo DomainOS (too old to port to),
        # Cygwin, and z/OS.  If anyone knows of another system for which // has
        # special semantics and is distinct from /, please report it to
        # <bug-gnulib@gnu.org>.
        case $host in
          *-cygwin | i370-ibm-openedition)
            gl_cv_double_slash_root=yes ;;
          *)
            # Be optimistic and assume that / and // are the same when we
            # don't know.
            gl_cv_double_slash_root='unknown, assuming no' ;;
        esac
      else
        set x `ls -di / // 2>/dev/null`
        if test "$[2]" = "$[4]" && wc //dev/null >/dev/null 2>&1; then
          gl_cv_double_slash_root=no
        else
          gl_cv_double_slash_root=yes
        fi
      fi])
  if test "$gl_cv_double_slash_root" = yes; then
    AC_DEFINE([DOUBLE_SLASH_IS_DISTINCT_ROOT], [1],
      [Define to 1 if // is a file system root distinct from /.])
  fi
])
m4trace:m4/dup.m4:9: -1- AC_DEFUN([gl_FUNC_DUP], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_DUP=1
    fi
  ])
  dnl Replace dup() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP=1
    fi
  ])
  AC_CACHE_CHECK([whether dup works], [gl_cv_func_dup_works],
    [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM([[#include <unistd.h>
                         #include <fcntl.h>
                         #include <errno.h>
                       ]GL_MDA_DEFINES],
         [[/* On OS/2 kLIBC, dup does not work on a directory fd.  */
           int fd = open (".", O_RDONLY);
           return fd < 0 ? 1 : dup (fd) < 0 ? 2 : 0;
         ]])
      ],
      [gl_cv_func_dup_works=yes],
      [gl_cv_func_dup_works=no],
      [case "$host_os" in
                            # Guess no on native Windows.
         mingw* | windows*) gl_cv_func_dup_works="guessing no" ;;
         *)                 gl_cv_func_dup_works="guessing yes" ;;
       esac
      ])
    ])
  case "$gl_cv_func_dup_works" in
    *yes) ;;
    *)
      REPLACE_DUP=1
      ;;
  esac
])
m4trace:m4/dup.m4:56: -1- AC_DEFUN([gl_PREREQ_DUP], [:])
m4trace:m4/dup2.m4:9: -1- AC_DEFUN([gl_FUNC_DUP2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether dup2 works], [gl_cv_func_dup2_works],
    [AC_RUN_IFELSE([
       AC_LANG_PROGRAM(
         [[#include <errno.h>
           #include <fcntl.h>
           #include <limits.h>
           #include <sys/resource.h>
           #include <unistd.h>
           ]GL_MDA_DEFINES[
           #ifndef RLIM_SAVED_CUR
           # define RLIM_SAVED_CUR RLIM_INFINITY
           #endif
           #ifndef RLIM_SAVED_MAX
           # define RLIM_SAVED_MAX RLIM_INFINITY
           #endif
         ]],
         [[int result = 0;
           int bad_fd = INT_MAX;
           struct rlimit rlim;
           if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
               && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
               && rlim.rlim_cur != RLIM_INFINITY
               && rlim.rlim_cur != RLIM_SAVED_MAX
               && rlim.rlim_cur != RLIM_SAVED_CUR)
             bad_fd = rlim.rlim_cur;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_SETFD, FD_CLOEXEC) == -1)
               result |= 1;
           #endif
           if (dup2 (1, 1) != 1)
             result |= 2;
           #ifdef FD_CLOEXEC
             if (fcntl (1, F_GETFD) != FD_CLOEXEC)
               result |= 4;
           #endif
           close (0);
           if (dup2 (0, 0) != -1)
             result |= 8;
           /* Many gnulib modules require POSIX conformance of EBADF.  */
           if (dup2 (2, bad_fd) == -1 && errno != EBADF)
             result |= 16;
           /* Flush out some cygwin core dumps.  */
           if (dup2 (2, -1) != -1 || errno != EBADF)
             result |= 32;
           dup2 (2, 255);
           dup2 (2, 256);
           /* On OS/2 kLIBC, dup2() does not work on a directory fd.  */
           {
             int fd = open (".", O_RDONLY);
             if (fd == -1)
               result |= 64;
             else if (dup2 (fd, fd + 1) == -1)
               result |= 128;
             close (fd);
           }
           return result;]])
      ],
      [gl_cv_func_dup2_works=yes], [gl_cv_func_dup2_works=no],
      [case "$host_os" in
         mingw* | windows*) # on this platform, dup2 always returns 0 for success
           gl_cv_func_dup2_works="guessing no" ;;
         cygwin*) # on cygwin 1.5.x, dup2(1,1) returns 0
           gl_cv_func_dup2_works="guessing no" ;;
         aix* | freebsd*)
                 # on AIX 7.1 and FreeBSD 6.1, dup2 (1,toobig) gives EMFILE,
                 # not EBADF.
           gl_cv_func_dup2_works="guessing no" ;;
         haiku*) # on Haiku alpha 2, dup2(1, 1) resets FD_CLOEXEC.
           gl_cv_func_dup2_works="guessing no" ;;
         *-android*) # implemented using dup3(), which fails if oldfd == newfd
           gl_cv_func_dup2_works="guessing no" ;;
         os2*) # on OS/2 kLIBC, dup2() does not work on a directory fd.
           gl_cv_func_dup2_works="guessing no" ;;
         *) gl_cv_func_dup2_works="guessing yes" ;;
       esac])
    ])
  case "$gl_cv_func_dup2_works" in
    *yes) ;;
    *)
      REPLACE_DUP2=1
      AC_CHECK_FUNCS([setdtablesize])
      ;;
  esac
  dnl Replace dup2() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      REPLACE_DUP2=1
    fi
  ])
])
m4trace:m4/dup2.m4:107: -1- AC_DEFUN([gl_PREREQ_DUP2], [])
m4trace:m4/eaccess.m4:9: -1- AC_DEFUN([gl_FUNC_EACCESS], [
  AC_CHECK_FUNC([eaccess], ,
    [AC_DEFINE([eaccess], [access],
       [Define as 'access' if you don't have the eaccess() function.])])
])
m4trace:m4/eealloc.m4:9: -1- AC_DEFUN([gl_EEALLOC], [
  AC_REQUIRE([gl_EEMALLOC])
  AC_REQUIRE([gl_EEREALLOC])
])
m4trace:m4/eealloc.m4:15: -1- AC_DEFUN([gl_EEMALLOC], [
  _AC_FUNC_MALLOC_IF(
    [gl_cv_func_malloc_0_nonnull=1],
    [gl_cv_func_malloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([MALLOC_0_IS_NONNULL], [$gl_cv_func_malloc_0_nonnull],
    [If malloc(0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/eealloc.m4:25: -1- AC_DEFUN([gl_EEREALLOC], [
  _AC_FUNC_REALLOC_IF(
    [gl_cv_func_realloc_0_nonnull=1],
    [gl_cv_func_realloc_0_nonnull=0])
  AC_DEFINE_UNQUOTED([REALLOC_0_IS_NONNULL], [$gl_cv_func_realloc_0_nonnull],
    [If realloc(NULL,0) is != NULL, define this to 1.  Otherwise define this
     to 0.])
])
m4trace:m4/environ.m4:9: -1- AC_DEFUN_ONCE([gl_ENVIRON], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  dnl Persuade glibc <unistd.h> to declare environ.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS_ONCE([unistd.h])
  gt_CHECK_VAR_DECL(
    [#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ],
    [environ])
  if test $gt_cv_var_environ_declaration != yes; then
    HAVE_DECL_ENVIRON=0
  fi
])
m4trace:m4/environ.m4:31: -1- AC_DEFUN([gt_CHECK_VAR_DECL], [
  define([gt_cv_var], [gt_cv_var_]$2[_declaration])
  AC_CACHE_CHECK([if $2 is properly declared], [gt_cv_var],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[$1
            typedef struct { int foo; } foo_t;
            extern foo_t $2;]],
          [[$2.foo = 1;]])],
       [gt_cv_var=no],
       [gt_cv_var=yes])])
  if test $gt_cv_var = yes; then
    AC_DEFINE([HAVE_]m4_translit($2, [a-z], [A-Z])[_DECL], 1,
              [Define if you have the declaration of $2.])
  fi
  undefine([gt_cv_var])
])
m4trace:m4/errno_h.m4:11: -1- AC_DEFUN_ONCE([gl_HEADER_ERRNO_H], [
  AC_REQUIRE([AC_PROG_CC])

  dnl Through the dependency on module extensions-aix, _LINUX_SOURCE_COMPAT
  dnl gets defined already before this macro gets invoked.  This persuades
  dnl AIX 7.3 errno.h to assign ENOTEMPTY a value different than EEXIST.

  AC_CACHE_CHECK([for complete errno.h], [gl_cv_header_errno_h_complete], [
    AC_EGREP_CPP([booboo],[
#include <errno.h>
#if !defined ETXTBSY
booboo
#endif
#if !defined ENOMSG
booboo
#endif
#if !defined EIDRM
booboo
#endif
#if !defined ENOLINK
booboo
#endif
#if !defined EPROTO
booboo
#endif
#if !defined EMULTIHOP
booboo
#endif
#if !defined EBADMSG
booboo
#endif
#if !defined EOVERFLOW
booboo
#endif
#if !defined ENOTSUP
booboo
#endif
#if !defined ENETRESET
booboo
#endif
#if !defined ECONNABORTED
booboo
#endif
#if !defined ESTALE
booboo
#endif
#if !defined EDQUOT
booboo
#endif
#if !defined ECANCELED
booboo
#endif
#if !defined EOWNERDEAD
booboo
#endif
#if !defined ENOTRECOVERABLE
booboo
#endif
#if !defined EILSEQ
booboo
#endif
#if !defined ESOCKTNOSUPPORT
booboo
#endif
      ],
      [gl_cv_header_errno_h_complete=no],
      [gl_cv_header_errno_h_complete=yes])
  ])
  if test $gl_cv_header_errno_h_complete = yes; then
    GL_GENERATE_ERRNO_H=false
  else
    gl_NEXT_HEADERS([errno.h])
    GL_GENERATE_ERRNO_H=true
  fi
  gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
  gl_REPLACE_ERRNO_VALUE([ENOLINK])
  gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
])
m4trace:m4/errno_h.m4:97: -1- AC_DEFUN([gl_REPLACE_ERRNO_VALUE], [
  if $GL_GENERATE_ERRNO_H; then
    AC_CACHE_CHECK([for ]$1[ value], [gl_cv_header_errno_h_]$1, [
      AC_EGREP_CPP([yes],[
#include <errno.h>
#ifdef ]$1[
yes
#endif
      ],
      [gl_cv_header_errno_h_]$1[=yes],
      [gl_cv_header_errno_h_]$1[=no])
      if test $gl_cv_header_errno_h_]$1[ = no; then
        AC_EGREP_CPP([yes],[
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
#ifdef ]$1[
yes
#endif
          ], [gl_cv_header_errno_h_]$1[=hidden])
        if test $gl_cv_header_errno_h_]$1[ = hidden; then
          dnl The macro exists but is hidden.
          dnl Define it to the same value.
          AC_COMPUTE_INT([gl_cv_header_errno_h_]$1, $1, [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
        fi
      fi
    ])
    case $gl_cv_header_errno_h_$1 in
      yes | no)
        $1_HIDDEN=0; $1_VALUE=
        ;;
      *)
        $1_HIDDEN=1; $1_VALUE="$gl_cv_header_errno_h_$1"
        ;;
    esac
    AC_SUBST($1[_HIDDEN])
    AC_SUBST($1[_VALUE])
  fi
])
m4trace:m4/error.m4:9: -1- AC_DEFUN([gl_ERROR], [
])
m4trace:m4/error.m4:14: -1- AC_DEFUN([gl_PREREQ_ERROR], [
  dnl Use system extensions on Android, so that AC_FUNC_STRERROR_R
  dnl discovers the GNU API for strerror_r on Android API level 23 and later.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_FUNC_STRERROR_R])
  :
])
m4trace:m4/error_h.m4:12: -1- AC_DEFUN_ONCE([gl_ERROR_H], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  gl_CHECK_NEXT_HEADERS([error.h])
  if test $ac_cv_header_error_h = yes; then
    HAVE_ERROR_H=1
  else
    HAVE_ERROR_H=0
  fi
  AC_SUBST([HAVE_ERROR_H])

  REPLACE_ERROR=0

  gl_CHECK_FUNCS_ANDROID([error], [[#include <error.h>]])
  if test $ac_cv_func_error = yes; then
    HAVE_ERROR=1
  else
    HAVE_ERROR=0
    case "$gl_cv_onwards_func_error" in
      future*) REPLACE_ERROR=1 ;;
    esac
  fi

  dnl We don't use AC_FUNC_ERROR_AT_LINE any more, because it is no longer
  dnl maintained in Autoconf and because it invokes AC_LIBOBJ.
  dnl We need to notice a missing declaration, like gl_CHECK_FUNCS_ANDROID does.
  AC_CHECK_DECL([error_at_line], , , [[#include <error.h>]])
  if test $ac_cv_have_decl_error_at_line = yes; then
    AC_CACHE_CHECK([for error_at_line], [ac_cv_lib_error_at_line],
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <error.h>]],
            [[error_at_line (0, 0, "", 0, "an error occurred");]])],
         [ac_cv_lib_error_at_line=yes],
         [ac_cv_lib_error_at_line=no])])
  else
    ac_cv_lib_error_at_line=no
  fi
  if test $ac_cv_lib_error_at_line = yes; then
    HAVE_ERROR_AT_LINE=1
  else
    HAVE_ERROR_AT_LINE=0
  fi
  REPLACE_ERROR_AT_LINE=0

  if test $ac_cv_func_error = yes && test $ac_cv_lib_error_at_line = yes; then
    dnl On Android 11, when error_print_progname is set, the output of the
    dnl error() function contains an extra space.
    AC_CACHE_CHECK([for working error function],
      [gl_cv_func_working_error],
      [if test $cross_compiling != yes; then
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM([[
              #include <error.h>
              static void print_no_progname (void) {}
            ]], [[
              error_print_progname = print_no_progname;
              error (0, 0, "foo");
            ]])
           ],
           [rm -f conftest.out
            if test -s conftest$ac_exeext \
               && ./conftest$ac_exeext 2> conftest.out; then
              if grep ' ' conftest.out >/dev/null; then
                gl_cv_func_working_error=no
              else
                gl_cv_func_working_error=yes
              fi
            else
              gl_cv_func_working_error=no
            fi
            rm -f conftest.out
           ],
           [gl_cv_func_working_error=no])
       else
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
              #include <error.h>
            ]], [[
              error (0, 0, "foo");
            ]])
           ],
           [case "$host_os" in
                               # Guess yes on glibc systems.
              *-gnu* | gnu*)   gl_cv_func_working_error="guessing yes" ;;
                               # Guess no on Android.
              linux*-android*) gl_cv_func_working_error="guessing no" ;;
                               # If we don't know, obey --enable-cross-guesses.
              *)               gl_cv_func_working_error="$gl_cross_guess_normal" ;;
            esac
           ],
           [gl_cv_func_working_error=no])
       fi
      ])
    case "$gl_cv_func_working_error" in
      *no)
        REPLACE_ERROR=1
        REPLACE_ERROR_AT_LINE=1
        ;;
    esac
  fi

  m4_ifdef([gl_HAVE_MODULE_VERROR],
    [COMPILE_ERROR_C=1],
    [if test $HAVE_ERROR = 0 || test $REPLACE_ERROR = 1 \
        || test $HAVE_ERROR_AT_LINE = 0 \
        || test $REPLACE_ERROR_AT_LINE = 1; then
       COMPILE_ERROR_C=1
     else
       COMPILE_ERROR_C=0
     fi])

  AC_SUBST([HAVE_ERROR])
  AC_SUBST([HAVE_ERROR_AT_LINE])
  AC_SUBST([REPLACE_ERROR])
  AC_SUBST([REPLACE_ERROR_AT_LINE])
])
m4trace:m4/extensions-aix.m4:22: -1- AC_DEFUN_ONCE([gl_USE_AIX_EXTENSIONS], [
  AC_DEFINE([_LINUX_SOURCE_COMPAT], [1],
    [Define so that AIX headers are more compatible with GNU/Linux.])
])
m4trace:m4/extensions.m4:219: -1- AC_DEFUN_ONCE([gl_USE_SYSTEM_EXTENSIONS], [
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl On OpenBSD 6.8 with GCC, the include files contain a couple of
  dnl definitions that are only activated with an explicit -D_ISOC11_SOURCE.
  dnl That's because this version of GCC (4.2.1) supports the option
  dnl '-std=gnu99' but not the option '-std=gnu11'.
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    openbsd*)
      AC_DEFINE([_ISOC11_SOURCE], [1],
        [Define to enable the declarations of ISO C 11 types and functions.])
      ;;
  esac

  dnl On OpenSolaris derivatives, the include files contains a couple of
  dnl declarations that are only activated with an explicit
  dnl -D__STDC_WANT_LIB_EXT1__.
  AH_VERBATIM([USE_ISO_C_23_ANNEX_K_EXTENSIONS],
[/* Define to enable the declarations of ISO C 23 Annex K types and functions.  */
#if !(defined __STDC_WANT_LIB_EXT1__ && __STDC_WANT_LIB_EXT1__)
#undef/**/__STDC_WANT_LIB_EXT1__
#define __STDC_WANT_LIB_EXT1__ 1
#endif
])
])
m4trace:m4/extern-inline.m4:11: -1- AC_DEFUN([gl_EXTERN_INLINE], [
  AC_CACHE_CHECK([whether ctype.h defines __header_inline],
    [gl_cv_have___header_inline],
    [AC_PREPROC_IFELSE(
       [AC_LANG_SOURCE([[#include <ctype.h>
                         #ifndef __header_inline
                          #error "<ctype.h> does not define __header_inline"
                         #endif
                        ]])],
       [gl_cv_have___header_inline=yes],
       [gl_cv_have___header_inline=no])])
  if test "$gl_cv_have___header_inline" = yes; then
    AC_DEFINE([HAVE___HEADER_INLINE], [1],
      [Define to 1 if ctype.h defines __header_inline.])
  fi

  AH_VERBATIM([HAVE___HEADER_INLINE_1],
[/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <https://lists.gnu.org/r/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for 'inline void f
   (void) { } inline void g (void) { f (); }', c99 incorrectly complains
   'reference to static identifier "f" in extern inline function'.
   This bug was observed with Oracle Developer Studio 12.6
   (Sun C 5.15 SunOS_sparc 2017/05/30).

   Suppress extern inline (with or without __attribute__ ((__gnu_inline__)))
   on configurations that mistakenly use 'static inline' to implement
   functions or macros in standard C headers like <ctype.h>.  For example,
   if isdigit is mistakenly implemented via a static inline function,
   a program containing an extern inline function that calls isdigit
   may not work since the C standard prohibits extern inline functions
   from calling static functions (ISO C 99 section 6.7.4.(3).
   This bug is known to occur on:

     OS X 10.8 and earlier; see:
     https://lists.gnu.org/r/bug-gnulib/2012-12/msg00023.html

     DragonFly; see
     http://muscles.dragonflybsd.org/bulk/clang-master-potential/20141111_102002/logs/ah-tty-0.3.12.log

     FreeBSD; see:
     https://lists.gnu.org/r/bug-gnulib/2014-07/msg00104.html

   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <https://trac.macports.org/ticket/41033>.
   Assume DragonFly and FreeBSD will be similar.

   GCC 4.3 and above with -std=c99 or -std=gnu99 implements ISO C99
   inline semantics, unless -fgnu89-inline is used.  It defines a macro
   __GNUC_STDC_INLINE__ to indicate this situation or a macro
   __GNUC_GNU_INLINE__ to indicate the opposite situation.
   GCC 4.2 with -std=c99 or -std=gnu99 implements the GNU C inline
   semantics but warns, unless -fgnu89-inline is used:
     warning: C99 inline functions are not supported; using GNU89
     warning: to disable this warning use -fgnu89-inline or the gnu_inline function attribute
   It defines a macro __GNUC_GNU_INLINE__ to indicate this situation.
 */
#if (((defined __APPLE__ && defined __MACH__) \
      || defined __DragonFly__ || defined __FreeBSD__) \
     && (defined HAVE___HEADER_INLINE \
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
            && ! defined __clang__) \
         : ((! defined _DONT_USE_CTYPE_INLINE_ \
             && (defined __GNUC__ || defined __cplusplus)) \
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_STDHEADER_BUG
#endif
#if ((__GNUC__ \
      ? (defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
         && !defined __PCC__) \
      : (199901L <= __STDC_VERSION__ \
         && !defined __HP_cc \
         && !defined __PGI \
         && !(defined __SUNPRO_C && __STDC__))) \
     && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \
       && !defined __PCC__ \
       && !defined _GL_EXTERN_INLINE_STDHEADER_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE _GL_UNUSED static
# define _GL_EXTERN_INLINE _GL_UNUSED static
#endif

/* In GCC 4.6 (inclusive) to 5.1 (exclusive),
   suppress bogus "no previous prototype for 'FOO'"
   and "no previous declaration for 'FOO'" diagnostics,
   when FOO is an inline function in the header; see
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113> and
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=63877>.  */
#if __GNUC__ == 4 && 6 <= __GNUC_MINOR__
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \
     _Pragma ("GCC diagnostic ignored \"-Wsuggest-attribute=const\"")
# endif
# define _GL_INLINE_HEADER_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-prototypes\"") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-declarations\"") \
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
])
m4trace:m4/fatal-signal.m4:9: -1- AC_DEFUN([gl_FATAL_SIGNAL], [
  AC_REQUIRE([gt_TYPE_SIG_ATOMIC_T])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  gl_PREREQ_SIG_HANDLER_H
])
m4trace:m4/fchdir.m4:9: -1- AC_DEFUN([gl_FUNC_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_DECLS_ONCE([fchdir])
  if test $ac_cv_have_decl_fchdir = no; then
    HAVE_DECL_FCHDIR=0
  fi

  AC_REQUIRE([gl_TEST_FCHDIR])
  if test $HAVE_FCHDIR = 1; then
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      dnl fchdir() should be replaced if dirfd() does not work.
      REPLACE_FCHDIR=1
    fi
  fi

  if test $HAVE_FCHDIR = 0 || test $REPLACE_FCHDIR = 1; then
    AC_DEFINE([REPLACE_FCHDIR], [1],
      [Define to 1 if gnulib's fchdir() replacement is used.])
    dnl We must also replace anything that can manipulate a directory fd,
    dnl to keep our bookkeeping up-to-date.  We don't have to replace
    dnl fstatat, since no platform has fstatat but lacks fchdir.
    AC_CACHE_CHECK([whether open can visit directories],
      [gl_cv_func_open_directory_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <fcntl.h>
            ]GL_MDA_DEFINES],
            [[return open(".", O_RDONLY) < 0;]])],
         [gl_cv_func_open_directory_works=yes],
         [gl_cv_func_open_directory_works=no],
         [case "$host_os" in
                               # Guess yes on Linux systems.
            linux-* | linux)   gl_cv_func_open_directory_works="guessing yes" ;;
                               # Guess yes on systems that emulate the Linux system calls.
            midipix*)          gl_cv_func_open_directory_works="guessing yes" ;;
                               # Guess yes on glibc systems.
            *-gnu* | gnu*)     gl_cv_func_open_directory_works="guessing yes" ;;
                               # Guess no on native Windows.
            mingw* | windows*) gl_cv_func_open_directory_works="guessing no" ;;
                               # If we don't know, obey --enable-cross-guesses.
            *)                 gl_cv_func_open_directory_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_open_directory_works" in
      *yes) ;;
      *)
        AC_DEFINE([REPLACE_OPEN_DIRECTORY], [1], [Define to 1 if open() should
work around the inability to open a directory.])
        ;;
    esac
  fi
])
m4trace:m4/fchdir.m4:68: -1- AC_DEFUN([gl_TEST_FCHDIR], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fchdir])
  if test $ac_cv_func_fchdir = no; then
    HAVE_FCHDIR=0
  fi
])
m4trace:m4/fchdir.m4:78: -1- AC_DEFUN([gl_PREREQ_FCHDIR], [:])
m4trace:m4/fcntl-o.m4:16: -1- AC_DEFUN([gl_FCNTL_O_FLAGS], [
  dnl Persuade glibc <fcntl.h> to define O_NOATIME and O_NOFOLLOW.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_FUNCS_ONCE([symlink])
  AC_CACHE_CHECK([for working fcntl.h], [gl_cv_header_working_fcntl_h],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/stat.h>
           #if HAVE_UNISTD_H
           # include <unistd.h>
           #else /* on Windows with MSVC */
           # include <io.h>
           # include <stdlib.h>
           # defined sleep(n) _sleep ((n) * 1000)
           #endif
           #include <fcntl.h>
           ]GL_MDA_DEFINES[
           #ifndef O_NOATIME
            #define O_NOATIME 0
           #endif
           #ifndef O_NOFOLLOW
            #define O_NOFOLLOW 0
           #endif
           static int const constants[] =
            {
              O_CREAT, O_EXCL, O_NOCTTY, O_TRUNC, O_APPEND,
              O_NONBLOCK, O_SYNC, O_ACCMODE, O_RDONLY, O_RDWR, O_WRONLY
            };
          ]],
          [[
            int result = !constants;
            #if HAVE_SYMLINK
            {
              static char const sym[] = "conftest.sym";
              if (symlink ("/dev/null", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_WRONLY | O_NOFOLLOW | O_CREAT, 0);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              if (unlink (sym) != 0 || symlink (".", sym) != 0)
                result |= 2;
              else
                {
                  int fd = open (sym, O_RDONLY | O_NOFOLLOW);
                  if (fd >= 0)
                    {
                      close (fd);
                      result |= 4;
                    }
                }
              unlink (sym);
            }
            #endif
            {
              static char const file[] = "confdefs.h";
              int fd = open (file, O_RDONLY | O_NOATIME);
              if (fd < 0)
                result |= 8;
              else
                {
                  struct stat st0;
                  if (fstat (fd, &st0) != 0)
                    result |= 16;
                  else
                    {
                      char c;
                      sleep (1);
                      if (read (fd, &c, 1) != 1)
                        result |= 24;
                      else
                        {
                          if (close (fd) != 0)
                            result |= 32;
                          else
                            {
                              struct stat st1;
                              if (stat (file, &st1) != 0)
                                result |= 40;
                              else
                                if (st0.st_atime != st1.st_atime)
                                  result |= 64;
                            }
                        }
                    }
                }
            }
            return result;]])],
       [gl_cv_header_working_fcntl_h=yes],
       [case $? in #(
        4) gl_cv_header_working_fcntl_h='no (bad O_NOFOLLOW)';; #(
        64) gl_cv_header_working_fcntl_h='no (bad O_NOATIME)';; #(
        68) gl_cv_header_working_fcntl_h='no (bad O_NOATIME, O_NOFOLLOW)';; #(
         *) gl_cv_header_working_fcntl_h='no';;
        esac],
       [case "$host_os" in
                             # Guess 'no' on native Windows.
          mingw* | windows*) gl_cv_header_working_fcntl_h='no' ;;
          *)                 gl_cv_header_working_fcntl_h=cross-compiling ;;
        esac
       ])
    ])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOATIME* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOATIME], [$ac_val],
    [Define to 1 if O_NOATIME works.])

  case $gl_cv_header_working_fcntl_h in #(
  *O_NOFOLLOW* | no | cross-compiling) ac_val=0;; #(
  *) ac_val=1;;
  esac
  AC_DEFINE_UNQUOTED([HAVE_WORKING_O_NOFOLLOW], [$ac_val],
    [Define to 1 if O_NOFOLLOW works.])
])
m4trace:m4/fcntl.m4:18: -1- AC_DEFUN([gl_FUNC_FCNTL], [
  dnl Persuade glibc to expose F_DUPFD_CLOEXEC.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    gl_REPLACE_FCNTL
  else
    dnl cygwin 1.5.x F_DUPFD has wrong errno, and allows negative target
    dnl haiku alpha 2 F_DUPFD has wrong errno
    AC_CACHE_CHECK([whether fcntl handles F_DUPFD correctly],
      [gl_cv_func_fcntl_f_dupfd_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <errno.h>
              #include <fcntl.h>
              #include <limits.h>
              #include <sys/resource.h>
              #include <unistd.h>
              ]GL_MDA_DEFINES[
              #ifndef RLIM_SAVED_CUR
              # define RLIM_SAVED_CUR RLIM_INFINITY
              #endif
              #ifndef RLIM_SAVED_MAX
              # define RLIM_SAVED_MAX RLIM_INFINITY
              #endif
            ]],
            [[int result = 0;
              int bad_fd = INT_MAX;
              struct rlimit rlim;
              if (getrlimit (RLIMIT_NOFILE, &rlim) == 0
                  && 0 <= rlim.rlim_cur && rlim.rlim_cur <= INT_MAX
                  && rlim.rlim_cur != RLIM_INFINITY
                  && rlim.rlim_cur != RLIM_SAVED_MAX
                  && rlim.rlim_cur != RLIM_SAVED_CUR)
                bad_fd = rlim.rlim_cur;
              if (fcntl (0, F_DUPFD, -1) != -1) result |= 1;
              if (errno != EINVAL) result |= 2;
              if (fcntl (0, F_DUPFD, bad_fd) != -1) result |= 4;
              if (errno != EINVAL) result |= 8;
              /* On OS/2 kLIBC, F_DUPFD does not work on a directory fd */
              {
                int fd;
                fd = open (".", O_RDONLY);
                if (fd == -1)
                  result |= 16;
                else if (fcntl (fd, F_DUPFD, STDERR_FILENO + 1) == -1)
                  result |= 32;

                close (fd);
              }
              return result;]])],
         [gl_cv_func_fcntl_f_dupfd_works=yes],
         [gl_cv_func_fcntl_f_dupfd_works=no],
         [case $host_os in
            aix* | cygwin* | haiku*)
               gl_cv_func_fcntl_f_dupfd_works="guessing no" ;;
            *) gl_cv_func_fcntl_f_dupfd_works="guessing yes" ;;
          esac])])
    case $gl_cv_func_fcntl_f_dupfd_works in
      *yes) ;;
      *) gl_REPLACE_FCNTL
        AC_DEFINE([FCNTL_DUPFD_BUGGY], [1], [Define this to 1 if F_DUPFD
          behavior does not match POSIX]) ;;
    esac

    dnl Many systems lack F_DUPFD_CLOEXEC.
    dnl NetBSD 10.0 declares F_DUPFD_CLOEXEC but it works only like F_DUPFD.
    AC_CACHE_CHECK([whether fcntl understands F_DUPFD_CLOEXEC],
      [gl_cv_func_fcntl_f_dupfd_cloexec],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[#include <fcntl.h>
              #include <unistd.h>
              int main (int argc, char *argv[])
              {
                if (argc == 1)
                  /* parent process */
                  {
                    if (fcntl (1, F_DUPFD_CLOEXEC, 10) < 0)
                      return 1;
                    return execl ("./conftest", "./conftest", "child", NULL);
                  }
                else
                  /* child process */
                  return (fcntl (10, F_GETFL) < 0 ? 0 : 42);
              }
            ]])
         ],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#ifdef __linux__
/* The Linux kernel only added F_DUPFD_CLOEXEC in 2.6.24, so we always replace
   it to support the semantics on older kernels that failed with EINVAL.  */
choke me
#endif
           ]])],
           [gl_cv_func_fcntl_f_dupfd_cloexec=yes],
           [gl_cv_func_fcntl_f_dupfd_cloexec="needs runtime check"])
         ],
         [gl_cv_func_fcntl_f_dupfd_cloexec=no],
         [case "$host_os" in
                     # Guess no on NetBSD.
            netbsd*) gl_cv_func_fcntl_f_dupfd_cloexec="guessing no" ;;
            *)       gl_cv_func_fcntl_f_dupfd_cloexec="$gl_cross_guess_normal" ;;
          esac
         ])
      ])
    case "$gl_cv_func_fcntl_f_dupfd_cloexec" in
      *yes) ;;
      *)    gl_REPLACE_FCNTL
            dnl No witness macro needed for this bug.
            ;;
    esac
  fi
  dnl Replace fcntl() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      gl_REPLACE_FCNTL
    fi
  ])
])
m4trace:m4/fcntl.m4:144: -1- AC_DEFUN([gl_REPLACE_FCNTL], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    HAVE_FCNTL=0
  else
    REPLACE_FCNTL=1
  fi
])
m4trace:m4/fcntl_h.m4:13: -1- AC_DEFUN_ONCE([gl_FCNTL_H], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_O_FLAGS])
  gl_NEXT_HEADERS([fcntl.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
])
m4trace:m4/fcntl_h.m4:36: -1- AC_DEFUN([gl_FCNTL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_FCNTL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fcntl_h.m4:48: -1- AC_DEFUN([gl_FCNTL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_FCNTL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
])
m4trace:m4/fcntl_h.m4:64: -1- AC_DEFUN([gl_FCNTL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCNTL=1;          AC_SUBST([HAVE_FCNTL])
  HAVE_OPENAT=1;         AC_SUBST([HAVE_OPENAT])
  REPLACE_CREAT=0;       AC_SUBST([REPLACE_CREAT])
  REPLACE_FCNTL=0;       AC_SUBST([REPLACE_FCNTL])
  REPLACE_OPEN=0;        AC_SUBST([REPLACE_OPEN])
  REPLACE_OPENAT=0;      AC_SUBST([REPLACE_OPENAT])
])
m4trace:m4/fdopendir.m4:13: -1- AC_DEFUN([gl_FUNC_FDOPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl FreeBSD 7.3 has the function, but failed to declare it.
  AC_CHECK_DECLS([fdopendir], [], [HAVE_DECL_FDOPENDIR=0], [[
#include <dirent.h>
    ]])
  AC_CHECK_FUNCS_ONCE([fdopendir])
  if test $ac_cv_func_fdopendir = no; then
    HAVE_FDOPENDIR=0
  else
    AC_CACHE_CHECK([whether fdopendir works],
      [gl_cv_func_fdopendir_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM([[
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
]GL_MDA_DEFINES[
#if !HAVE_DECL_FDOPENDIR
extern
# ifdef __cplusplus
"C"
# endif
DIR *fdopendir (int);
#endif
]],
            [[int result = 0;
              int fd = open ("conftest.c", O_RDONLY);
              if (fd < 0) result |= 1;
              if (fdopendir (fd)) result |= 2;
              if (close (fd)) result |= 4;
              return result;
            ]])],
         [gl_cv_func_fdopendir_works=yes],
         [gl_cv_func_fdopendir_works=no],
         [case "$host_os" in
                                # Guess yes on glibc systems.
            *-gnu*)             gl_cv_func_fdopendir_works="guessing yes" ;;
                                # Guess yes on musl systems.
            *-musl* | midipix*) gl_cv_func_fdopendir_works="guessing yes" ;;
                                # If we don't know, obey --enable-cross-guesses.
            *)                  gl_cv_func_fdopendir_works="$gl_cross_guess_normal" ;;
          esac
         ])])
    case "$gl_cv_func_fdopendir_works" in
      *yes) ;;
      *)
        REPLACE_FDOPENDIR=1
        ;;
    esac
  fi
])
m4trace:m4/filenamecat.m4:9: -1- AC_DEFUN([gl_FILE_NAME_CONCAT], [
  AC_REQUIRE([gl_FILE_NAME_CONCAT_LGPL])
])
m4trace:m4/filenamecat.m4:14: -1- AC_DEFUN([gl_FILE_NAME_CONCAT_LGPL], [
  dnl Prerequisites of lib/filenamecat-lgpl.c.
  gl_CHECK_FUNCS_ANDROID([mempcpy], [[#include <string.h>]])
])
m4trace:m4/findprog-in.m4:9: -1- AC_DEFUN([gl_FINDPROG_IN], [
  dnl Prerequisites of lib/findprog-in.c.
  AC_REQUIRE([gl_FUNC_EACCESS])
])
m4trace:m4/free.m4:11: -1- AC_DEFUN([gl_FUNC_FREE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl In the next release of POSIX, free must preserve errno.
  dnl https://www.austingroupbugs.net/view.php?id=385
  dnl https://sourceware.org/bugzilla/show_bug.cgi?id=17924
  dnl So far, we know of three platforms that do this:
  dnl * glibc >= 2.33, thanks to the fix for this bug:
  dnl   <https://sourceware.org/bugzilla/show_bug.cgi?id=17924>
  dnl * OpenBSD >= 4.5, thanks to this commit:
  dnl   <https://cvsweb.openbsd.org/cgi-bin/cvsweb/src/lib/libc/stdlib/malloc.c.diff?r1=1.100&r2=1.101&f=h>
  dnl * Solaris, because its malloc() implementation is based on brk(),
  dnl   not mmap(); hence its free() implementation makes no system calls.
  dnl For other platforms, you can only be sure if they state it in their
  dnl documentation, or by code inspection of the free() implementation in libc.
  AC_CACHE_CHECK([whether free is known to preserve errno],
    [gl_cv_func_free_preserves_errno],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[#if 2 < __GLIBC__ + (33 <= __GLIBC_MINOR__)
            #elif defined __OpenBSD__
            #elif defined __sun
            #else
              #error "'free' is not known to preserve errno"
            #endif
          ]])],
       [gl_cv_func_free_preserves_errno=yes],
       [gl_cv_func_free_preserves_errno=no])
    ])

  case $gl_cv_func_free_preserves_errno in
   *yes)
    AC_DEFINE([HAVE_FREE_POSIX], [1],
      [Define if the 'free' function is guaranteed to preserve errno.])
    ;;
   *) REPLACE_FREE=1 ;;
  esac
])
m4trace:m4/free.m4:54: -1- AC_DEFUN([gl_PREREQ_FREE], [:])
m4trace:m4/fstat.m4:9: -1- AC_DEFUN([gl_FUNC_FSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  case "$host_os" in
    darwin* | mingw* | windows* | solaris*)
      dnl macOS and Solaris stat can return a negative tv_nsec.
      dnl On MinGW, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      REPLACE_FSTAT=1
      ;;
  esac

  dnl Replace fstat() for supporting the gnulib-defined open() on directories.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      case "$gl_cv_func_open_directory_works" in
        *yes) ;;
        *)
          REPLACE_FSTAT=1
          ;;
      esac
    fi
  ])
])
m4trace:m4/fstat.m4:38: -1- AC_DEFUN([gl_PREREQ_FSTAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/fstatat.m4:13: -1- AC_DEFUN([gl_FUNC_FSTATAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fstatat])

  if test $ac_cv_func_fstatat = no; then
    HAVE_FSTATAT=0
  else
    dnl Test for an AIX 7.1 bug; see
    dnl <https://lists.gnu.org/r/bug-tar/2011-09/msg00015.html>.
    AC_CACHE_CHECK([whether fstatat (..., 0) works],
      [gl_cv_func_fstatat_zero_flag],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[
              #include <fcntl.h>
              #include <sys/stat.h>
              int
              main (void)
              {
                struct stat a;
                return fstatat (AT_FDCWD, ".", &a, 0) != 0;
              }
            ]])],
         [gl_cv_func_fstatat_zero_flag=yes],
         [gl_cv_func_fstatat_zero_flag=no],
         [case "$host_os" in
            aix*) gl_cv_func_fstatat_zero_flag="guessing no";;
            *)    gl_cv_func_fstatat_zero_flag="guessing yes";;
          esac
         ])
      ])

    case $gl_cv_func_fstatat_zero_flag+$gl_cv_func_lstat_dereferences_slashed_symlink in
    *yes+*yes) ;;
    *) REPLACE_FSTATAT=1 ;;
    esac

    case $host_os in
      darwin* | solaris*)
        REPLACE_FSTATAT=1 ;;
    esac

    case $REPLACE_FSTATAT,$gl_cv_func_fstatat_zero_flag in
      1,*yes)
         AC_DEFINE([HAVE_WORKING_FSTATAT_ZERO_FLAG], [1],
           [Define to 1 if fstatat (..., 0) works.
            For example, it does not work in AIX 7.1.])
         ;;
    esac
  fi
])
m4trace:m4/ftruncate.m4:11: -1- AC_DEFUN([gl_FUNC_FTRUNCATE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  gl_CHECK_FUNCS_ANDROID([ftruncate], [[#include <unistd.h>]])
  if test $ac_cv_func_ftruncate = yes; then
    m4_ifdef([gl_LARGEFILE], [
      AC_REQUIRE([AC_CANONICAL_HOST])
      case "$host_os" in
        mingw* | windows*)
          dnl Native Windows, and Large File Support is requested.
          dnl The MSVCRT _chsize() function only accepts a 32-bit file size,
          dnl and the mingw64 ftruncate64() function is unreliable (it may
          dnl delete the file, see
          dnl <https://web.archive.org/web/20160425005423/http://mingw-w64.sourcearchive.com/documentation/2.0-1/ftruncate64_8c_source.html>).
          dnl Use gnulib's ftruncate() implementation instead.
          REPLACE_FTRUNCATE=1
          ;;
      esac
    ], [
      :
    ])
  else
    HAVE_FTRUNCATE=0
    case "$gl_cv_onwards_func_ftruncate" in
      future*) REPLACE_FTRUNCATE=1 ;;
    esac
  fi
])
m4trace:m4/ftruncate.m4:41: -1- AC_DEFUN([gl_PREREQ_FTRUNCATE], [
  AC_CHECK_FUNCS([_chsize])
])
m4trace:m4/getcwd-abort-bug.m4:16: -1- AC_DEFUN([gl_FUNC_GETCWD_ABORT_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([getcwd])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])

  AC_CACHE_CHECK([whether getcwd succeeds when 4k < cwd_length < 16k],
    [gl_cv_func_getcwd_succeeds_beyond_4k],
    [# Remove any remnants of a previous test.
     rm -rf confdir-14B---
     # Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir-14B---"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else /* on Windows with MSVC */
# include <direct.h>
#endif
#include <string.h>
#include <sys/stat.h>

]gl_PATHMAX_SNIPPET[
]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* This size is chosen to be larger than PATH_MAX (4k), yet smaller than
   the 16kB pagesize on ia64 linux.  Those conditions make the code below
   trigger a bug in glibc's getcwd implementation before 2.4.90-10.  */
#define TARGET_LEN (5 * 1024)

int
main ()
{
  char *cwd;
  size_t initial_cwd_len;
  int fail = 0;

  /* The bug is triggered when PATH_MAX < page size, so skip
     this relatively expensive and invasive test if that's not true.  */
#if defined PATH_MAX && defined _SC_PAGESIZE
  int bug_possible = PATH_MAX < sysconf (_SC_PAGESIZE);
#else
  int bug_possible = 0;
#endif
  if (! bug_possible)
    return 0;

  cwd = getcwd (NULL, 0);
  if (cwd == NULL)
    return 2;

  initial_cwd_len = strlen (cwd);
  free (cwd);

  if (1)
    {
      static char const dir_name[] = "confdir-14B---";
      size_t desired_depth = ((TARGET_LEN - 1 - initial_cwd_len)
                              / sizeof dir_name);
      size_t d;
      for (d = 0; d < desired_depth; d++)
        {
          if (mkdir (dir_name, S_IRWXU) < 0 || chdir (dir_name) < 0)
            {
              if (! (errno == ERANGE || errno == ENAMETOOLONG
                     || errno == ENOENT))
                fail = 3; /* Unable to construct deep hierarchy.  */
              break;
            }
        }

      /* If libc has the bug in question, this invocation of getcwd
         results in a failed assertion.  */
      cwd = getcwd (NULL, 0);
      if (cwd == NULL)
        fail = 4; /* getcwd didn't assert, but it failed for a long name
                     where the answer could have been learned.  */
      free (cwd);

      /* Call rmdir first, in case the above chdir failed.  */
      rmdir (dir_name);
      while (0 < d--)
        {
          if (chdir ("..") < 0)
            {
              fail = 5;
              break;
            }
          rmdir (dir_name);
        }
    }

  return fail;
}
          ]])],
       [gl_cv_func_getcwd_succeeds_beyond_4k=yes],
       [dnl An abort will provoke an exit code of something like 134 (128 + 6).
        dnl An exit code of 4 can also occur (for example in
        dnl musl libc 1.2.2/powerpc64le, NetBSD 10.0, OpenBSD 6.7:
        dnl getcwd (NULL, 0) fails rather than returning a string longer than
        dnl PATH_MAX.  This may be POSIX compliant (in some interpretations of
        dnl POSIX).  But gnulib's getcwd module wants to provide a non-NULL
        dnl value in this case.
        ret=$?
        if test $ret -ge 128 || test $ret = 4; then
          gl_cv_func_getcwd_succeeds_beyond_4k=no
        else
          gl_cv_func_getcwd_succeeds_beyond_4k=yes
        fi
       ],
       [case "$host_os" in
             # Guess no otherwise, even on glibc systems and musl systems.
          *) gl_cv_func_getcwd_succeeds_beyond_4k="guessing no"
        esac
       ])
    ])
  case "$gl_cv_func_getcwd_succeeds_beyond_4k" in
    *no)
      $1
      ;;
    *)
      $2
      ;;
  esac
])
m4trace:m4/getcwd-path-max.m4:18: -1- AC_DEFUN([gl_FUNC_GETCWD_PATH_MAX], [
  AC_CHECK_DECLS_ONCE([getcwd, alarm])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_REQUIRE([gl_PATHMAX_SNIPPET_PREREQ])
  AC_CACHE_CHECK([whether getcwd handles long file names properly],
    [gl_cv_func_getcwd_path_max],
    [# Arrange for deletion of the temporary directory this test creates.
     ac_clean_files="$ac_clean_files confdir3"
     dnl Please keep this in sync with tests/test-getcwd.c.
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
          [[
#include <errno.h>
#include <stdlib.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#else
# include <direct.h>
#endif
#if HAVE_DECL_ALARM
# include <signal.h>
#endif
#include <string.h>
#include <limits.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>

]gl_PATHMAX_SNIPPET[

#ifndef AT_FDCWD
# define AT_FDCWD 0
#endif
#ifdef ENAMETOOLONG
# define is_ENAMETOOLONG(x) ((x) == ENAMETOOLONG)
#else
# define is_ENAMETOOLONG(x) 0
#endif

/* Use the getcwd function, not any macro.  */
#undef getcwd

]GL_MDA_DEFINES[

#ifndef S_IRWXU
# define S_IRWXU 0700
#endif

/* The length of this name must be 8.  */
#define DIR_NAME "confdir3"
#define DIR_NAME_LEN 8
#define DIR_NAME_SIZE (DIR_NAME_LEN + 1)

/* The length of "../".  */
#define DOTDOTSLASH_LEN 3

/* Leftover bytes in the buffer, to work around library or OS bugs.  */
#define BUF_SLOP 20

int
main ()
{
#ifndef PATH_MAX
  /* The Hurd doesn't define this, so getcwd can't exhibit the bug --
     at least not on a local file system.  And if we were to start worrying
     about remote file systems, we'd have to enable the wrapper function
     all of the time, just to be safe.  That's not worth the cost.  */
  exit (0);
#elif ((INT_MAX / (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1) \
        - DIR_NAME_SIZE - BUF_SLOP) \
       <= PATH_MAX)
  /* FIXME: Assuming there's a system for which this is true,
     this should be done in a compile test.  */
  exit (0);
#else
  char buf[PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN + 1)
           + DIR_NAME_SIZE + BUF_SLOP];
  char *cwd;
  size_t initial_cwd_len;
  size_t cwd_len;
  int fail;
  size_t n_chdirs;

# if HAVE_DECL_ALARM
  /* This test makes some buggy getcwd implementations take a long time, e.g.
     on NAS devices
     <https://lists.gnu.org/archive/html/bug-gnulib/2024-03/msg00444.html>
     and in sandboxed environments <https://bugs.gentoo.org/447970>.
     Give up after 5 seconds; a getcwd slower than that isn't worth using
     anyway.  */
  signal (SIGALRM, SIG_DFL);
  alarm (5);
# endif

  cwd = getcwd (buf, PATH_MAX);
  if (cwd == NULL)
    exit (10);

  cwd_len = initial_cwd_len = strlen (cwd);
  fail = 0;
  n_chdirs = 0;

  while (1)
    {
      size_t dotdot_max = PATH_MAX * (DIR_NAME_SIZE / DOTDOTSLASH_LEN);
      char *c = NULL;

      cwd_len += DIR_NAME_SIZE;
      /* If mkdir or chdir fails, it could be that this system cannot create
         any file with an absolute name longer than PATH_MAX, such as cygwin.
         If so, leave fail as 0, because the current working directory can't
         be too long for getcwd if it can't even be created.  On Linux with
         the 9p file system, mkdir fails with error EINVAL when cwd_len gets
         too long; ignore this failure because the getcwd() system call
         produces good results whereas the gnulib substitute calls getdents64
         which fails with error EPROTO.
         For other errors, be pessimistic and consider that as a failure,
         too.  */
      if (mkdir (DIR_NAME, S_IRWXU) < 0 || chdir (DIR_NAME) < 0)
        {
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            #ifdef __linux__
            if (! (errno == EINVAL))
            #endif
              fail = 20;
          break;
        }

      if (PATH_MAX <= cwd_len && cwd_len < PATH_MAX + DIR_NAME_SIZE)
        {
          struct stat sb;

          c = getcwd (buf, PATH_MAX);
          if (!c && errno == ENOENT)
            {
              fail = 11;
              break;
            }
          if (c)
            {
              fail = 31;
              break;
            }
          if (! (errno == ERANGE || is_ENAMETOOLONG (errno)))
            {
              fail = 21;
              break;
            }

          /* Our replacement needs to be able to stat() long ../../paths,
             so generate a path larger than PATH_MAX to check,
             avoiding the replacement if we can't stat().  */
          c = getcwd (buf, cwd_len + 1);
          if (c && !AT_FDCWD && stat (c, &sb) != 0 && is_ENAMETOOLONG (errno))
            {
              fail = 32;
              break;
            }
        }

      if (dotdot_max <= cwd_len - initial_cwd_len)
        {
          if (dotdot_max + DIR_NAME_SIZE < cwd_len - initial_cwd_len)
            break;
          c = getcwd (buf, cwd_len + 1);
          if (!c)
            {
              if (! (errno == ERANGE || errno == ENOENT
                     || is_ENAMETOOLONG (errno)))
                {
                  fail = 22;
                  break;
                }
              if (AT_FDCWD || errno == ERANGE || errno == ENOENT)
                {
                  fail = 12;
                  break;
                }
            }
        }

      if (c && strlen (c) != cwd_len)
        {
          fail = 23;
          break;
        }
      ++n_chdirs;
    }

  /* Leaving behind such a deep directory is not polite.
     So clean up here, right away, even though the driving
     shell script would also clean up.  */
  {
    size_t i;

    /* Try rmdir first, in case the chdir failed.  */
    rmdir (DIR_NAME);
    for (i = 0; i <= n_chdirs; i++)
      {
        if (chdir ("..") < 0)
          break;
        if (rmdir (DIR_NAME) != 0)
          break;
      }
  }

  exit (fail);
#endif
}
          ]])],
       [gl_cv_func_getcwd_path_max=yes],
       [case $? in
        10|11|12) gl_cv_func_getcwd_path_max='no, but it is partly working';;
        31) gl_cv_func_getcwd_path_max='no, it has the AIX bug';;
        32) gl_cv_func_getcwd_path_max='yes, but with shorter paths';;
        *) gl_cv_func_getcwd_path_max=no;;
        esac],
       [# Cross-compilation guesses:
        case "$host_os" in
          aix*) # On AIX, it has the AIX bug.
            gl_cv_func_getcwd_path_max='guessing no, it has the AIX bug' ;;
          gnu*) # On Hurd, it is 'yes'.
            gl_cv_func_getcwd_path_max='guessing yes' ;;
          linux* | kfreebsd*)
            # On older Linux+glibc it's 'no, but it is partly working',
            # on newer Linux+glibc it's 'yes'.
            # On Linux+musl libc, it's 'no, but it is partly working'.
            # On kFreeBSD+glibc, it's 'no, but it is partly working'.
            gl_cv_func_getcwd_path_max='guessing no, but it is partly working' ;;
          *) # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_getcwd_path_max="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
])
m4trace:m4/getcwd.m4:13: -1- AC_DEFUN([gl_FUNC_GETCWD_NULL], [
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
   AC_CHECK_HEADERS_ONCE([unistd.h])
   AC_CACHE_CHECK([whether getcwd (NULL, 0) allocates memory for result],
     [gl_cv_func_getcwd_null],
     [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#	 include <stdlib.h>
#        if HAVE_UNISTD_H
#         include <unistd.h>
#        else /* on Windows with MSVC */
#         include <direct.h>
#        endif
         ]GL_MDA_DEFINES],
         [[
#if defined _WIN32 && ! defined __CYGWIN__
/* mingw cwd does not start with '/', but _getcwd does allocate.
   However, mingw fails to honor non-zero size.  */
#else
           if (chdir ("/") != 0)
             return 1;
           else
             {
               char *f = getcwd (NULL, 0);
               if (! f)
                 return 2;
               if (f[0] != '/')
                 { free (f); return 3; }
               if (f[1] != '\0')
                 { free (f); return 4; }
               free (f);
               return 0;
             }
#endif
         ]])],
        [gl_cv_func_getcwd_null=yes],
        [gl_cv_func_getcwd_null=no],
        [[case "$host_os" in
                           # Guess yes on glibc systems.
            *-gnu* | gnu*) gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on musl systems.
            *-musl*)       gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on systems that emulate the Linux system calls.
            midipix*)      gl_cv_func_getcwd_null="guessing yes";;
                           # Guess yes on Cygwin.
            cygwin*)       gl_cv_func_getcwd_null="guessing yes";;
                           # If we don't know, obey --enable-cross-guesses.
            *)             gl_cv_func_getcwd_null="$gl_cross_guess_normal";;
          esac
        ]])])
])
m4trace:m4/getcwd.m4:65: -1- AC_DEFUN([gl_FUNC_GETCWD_SIGNATURE], [
  AC_CACHE_CHECK([for getcwd with POSIX signature],
    [gl_cv_func_getcwd_posix_signature],
    [AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <unistd.h>
         ]GL_MDA_DEFINES],
         [[extern
           #ifdef __cplusplus
           "C"
           #endif
           char *getcwd (char *, size_t);
         ]])
      ],
      [gl_cv_func_getcwd_posix_signature=yes],
      [gl_cv_func_getcwd_posix_signature=no])
   ])
])
m4trace:m4/getcwd.m4:92: -1- AC_DEFUN([gl_FUNC_GETCWD_LGPL], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])

  case $gl_cv_func_getcwd_null,$gl_cv_func_getcwd_posix_signature in
  *yes,yes) ;;
  *)
    dnl Minimal replacement lib/getcwd-lgpl.c.
    REPLACE_GETCWD=1
    ;;
  esac
])
m4trace:m4/getcwd.m4:109: -1- AC_DEFUN([gl_FUNC_GETCWD], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_GETCWD_NULL])
  AC_REQUIRE([gl_FUNC_GETCWD_SIGNATURE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  gl_abort_bug=no
  case "$host_os" in
    mingw* | windows*)
      gl_cv_func_getcwd_path_max=yes
      ;;
    *)
      gl_FUNC_GETCWD_PATH_MAX
      case "$gl_cv_func_getcwd_null" in
        *yes)
          gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
          ;;
      esac
      ;;
  esac
  dnl Define HAVE_MINIMALLY_WORKING_GETCWD and HAVE_PARTLY_WORKING_GETCWD
  dnl if appropriate.
  case "$gl_cv_func_getcwd_path_max" in
    *"no" | *"no, it has the AIX bug") ;;
    *)
      AC_DEFINE([HAVE_MINIMALLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd minimally works, that is, its result can be
         trusted when it succeeds.])
      ;;
  esac
  case "$gl_cv_func_getcwd_path_max" in
    *"no, but it is partly working")
      AC_DEFINE([HAVE_PARTLY_WORKING_GETCWD], [1],
        [Define to 1 if getcwd works, except it sometimes fails when it
         shouldn't, setting errno to ERANGE, ENAMETOOLONG, or ENOENT.])
      ;;
    *"yes, but with shorter paths")
      AC_DEFINE([HAVE_GETCWD_SHORTER], [1],
        [Define to 1 if getcwd works, but with shorter paths
         than is generally tested with the replacement.])
      ;;
  esac

  if { case "$gl_cv_func_getcwd_null" in *yes) false;; *) true;; esac; } \
     || test $gl_cv_func_getcwd_posix_signature != yes \
     || { case "$gl_cv_func_getcwd_path_max" in *yes*) false;; *) true;; esac; } \
     || test $gl_abort_bug = yes; then
    REPLACE_GETCWD=1
  fi
])
m4trace:m4/getcwd.m4:162: -1- AC_DEFUN([gl_PREREQ_GETCWD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_DIRENT_D_INO])
  :
])
m4trace:m4/getdtablesize.m4:9: -1- AC_DEFUN([gl_FUNC_GETDTABLESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([getdtablesize])
  AC_CHECK_DECLS_ONCE([getdtablesize])
  if test $ac_cv_func_getdtablesize = yes &&
     test $ac_cv_have_decl_getdtablesize = yes; then
    AC_CACHE_CHECK([whether getdtablesize works],
      [gl_cv_func_getdtablesize_works],
      [dnl There are two concepts: the "maximum possible file descriptor value + 1"
       dnl and the "maximum number of open file descriptors in a process".
       dnl Per SUSv2 and POSIX, getdtablesize() should return the first one.
       dnl On most platforms, the first and the second concept are the same.
       dnl On OpenVMS, however, they are different and getdtablesize() returns
       dnl the second one; thus the test below fails. But we don't care
       dnl because there's no good way to write a replacement getdtablesize().
       case "$host_os" in
         vms*) gl_cv_func_getdtablesize_works="no (limitation)" ;;
         *)
           dnl Cygwin 1.7.25 automatically increases the RLIMIT_NOFILE soft
           dnl limit up to an unchangeable hard limit; all other platforms
           dnl correctly require setrlimit before getdtablesize() can report
           dnl a larger value.
           AC_RUN_IFELSE([
             AC_LANG_PROGRAM(
               [[#include <unistd.h>]
                GL_MDA_DEFINES
               ],
               [[int size = getdtablesize();
                 if (dup2 (0, getdtablesize()) != -1)
                   return 1;
                 if (size != getdtablesize())
                   return 2;
               ]])],
             [gl_cv_func_getdtablesize_works=yes],
             [gl_cv_func_getdtablesize_works=no],
             [case "$host_os" in
                cygwin*) # on cygwin 1.5.25, getdtablesize() automatically grows
                  gl_cv_func_getdtablesize_works="guessing no" ;;
                *) gl_cv_func_getdtablesize_works="guessing yes" ;;
              esac
             ])
           ;;
       esac
      ])
    case "$gl_cv_func_getdtablesize_works" in
      *yes | "no (limitation)") ;;
      *) REPLACE_GETDTABLESIZE=1 ;;
    esac
  else
    HAVE_GETDTABLESIZE=0
  fi
])
m4trace:m4/getdtablesize.m4:65: -1- AC_DEFUN([gl_PREREQ_GETDTABLESIZE], [:])
m4trace:m4/getprogname.m4:11: -1- AC_DEFUN([gl_FUNC_GETPROGNAME], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  gl_CHECK_FUNCS_ANDROID([getprogname], [[#include <stdlib.h>]])
  if test $ac_cv_func_getprogname = no; then
    HAVE_GETPROGNAME=0
    case "$gl_cv_onwards_func_getprogname" in
      future*) REPLACE_GETPROGNAME=1 ;;
    esac
  fi
  AC_CHECK_DECLS([program_invocation_name],
    [],
    [HAVE_DECL_PROGRAM_INVOCATION_NAME=0],
    [[#include <errno.h>]])
])
m4trace:m4/getprogname.m4:28: -1- AC_DEFUN([gl_PREREQ_GETPROGNAME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([getexecname])
  ac_found=0
  AC_CHECK_DECLS([program_invocation_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([program_invocation_short_name], [ac_found=1], [],
    [#include <errno.h>])
  AC_CHECK_DECLS([__argv], [ac_found=1], [], [#include <stdlib.h>])

  # Incur the cost of this test only if none of the above worked.
  if test $ac_found = 0; then
    # On OpenBSD 5.1, using the global __progname variable appears to be
    # the only way to implement getprogname.
    AC_CACHE_CHECK([whether __progname is defined in default libraries],
      [gl_cv_var___progname],
      [
        gl_cv_var___progname=
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
            [[extern char *__progname;]],
            [[return *__progname;]]
          )],
          [gl_cv_var___progname=yes]
        )
      ]
    )
    if test "$gl_cv_var___progname" = yes; then
      AC_DEFINE([HAVE_VAR___PROGNAME], 1,
        [Define if you have a global __progname variable])
    fi
  fi
])
m4trace:m4/gnulib-common.m4:13: -1- AC_DEFUN([gl_COMMON], [
  dnl Use AC_REQUIRE here, so that the code is expanded once only.
  AC_REQUIRE([gl_00GNULIB])
  AC_REQUIRE([gl_COMMON_BODY])
  AC_REQUIRE([gl_ZZGNULIB])
])
m4trace:m4/gnulib-common.m4:19: -1- AC_DEFUN([gl_COMMON_BODY], [
  AH_VERBATIM([0witness],
[/* Witness that <config.h> has been included.  */
#define _GL_CONFIG_H_INCLUDED 1
])
  AH_VERBATIM([_GL_GNUC_PREREQ],
[/* True if the compiler says it groks GNU C version MAJOR.MINOR.
    Except that
      - clang groks GNU C 4.2, even on Windows, where it does not define
        __GNUC__.
      - The OpenMandriva-modified clang compiler pretends that it groks
        GNU C version 13.1, but it doesn't: It does not support
        __attribute__ ((__malloc__ (f, i))), nor does it support
        __attribute__ ((__warning__ (message))) on a function redeclaration.
      - Users can make clang lie as well, through the -fgnuc-version option.  */
#if defined __GNUC__ && defined __GNUC_MINOR__ && !defined __clang__
# define _GL_GNUC_PREREQ(major, minor) \
    ((major) < __GNUC__ + ((minor) <= __GNUC_MINOR__))
#elif defined __clang__
  /* clang really only groks GNU C 4.2.  */
# define _GL_GNUC_PREREQ(major, minor) \
    ((major) < 4 + ((minor) <= 2))
#else
# define _GL_GNUC_PREREQ(major, minor) 0
#endif
])
  AH_VERBATIM([_Noreturn],
[/* The _Noreturn keyword of C11.  */
#ifndef _Noreturn
# if (defined __cplusplus \
      && ((201103 <= __cplusplus && !(__GNUC__ == 4 && __GNUC_MINOR__ == 7)) \
          || (defined _MSC_VER && 1900 <= _MSC_VER)) \
      && 0)
    /* [[noreturn]] is not practically usable, because with it the syntax
         extern _Noreturn void func (...);
       would not be valid; such a declaration would only be valid with 'extern'
       and '_Noreturn' swapped, or without the 'extern' keyword.  However, some
       AIX system header files and several gnulib header files use precisely
       this syntax with 'extern'.  */
#  define _Noreturn [[noreturn]]
# elif (defined __clang__ && __clang_major__ < 16 \
        && defined _GL_WORK_AROUND_LLVM_BUG_59792)
   /* Compile with -D_GL_WORK_AROUND_LLVM_BUG_59792 to work around
      that rare LLVM bug, though you may get many false-alarm warnings.  */
#  define _Noreturn
# elif ((!defined __cplusplus || defined __clang__) \
        && (201112 <= (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) \
            || (!defined __STRICT_ANSI__ \
                && (_GL_GNUC_PREREQ (4, 7) \
                    || (defined __apple_build_version__ \
                        ? 6000000 <= __apple_build_version__ \
                        : 3 < __clang_major__ + (5 <= __clang_minor__))))))
   /* _Noreturn works as-is.  */
# elif _GL_GNUC_PREREQ (2, 8) || defined __clang__ || 0x5110 <= __SUNPRO_C
#  define _Noreturn __attribute__ ((__noreturn__))
# elif 1200 <= (defined _MSC_VER ? _MSC_VER : 0)
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
  AH_VERBATIM([isoc99_inline],
[/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
  AH_VERBATIM([attribute],
[/* Attributes.  */
/* Define _GL_HAS_ATTRIBUTE only once, because on FreeBSD, with gcc < 5, if
   <config.h> gets included once again after <sys/cdefs.h>, __has_attribute(x)
   expands to 0 always, and redefining _GL_HAS_ATTRIBUTE would turn off all
   attributes.  */
#ifndef _GL_HAS_ATTRIBUTE
# if (defined __has_attribute \
      && (!defined __clang_minor__ \
          || (defined __apple_build_version__ \
              ? 7000000 <= __apple_build_version__ \
              : 5 <= __clang_major__)))
#  define _GL_HAS_ATTRIBUTE(attr) __has_attribute (__##attr##__)
# else
#  define _GL_HAS_ATTRIBUTE(attr) _GL_ATTR_##attr
#  define _GL_ATTR_alloc_size _GL_GNUC_PREREQ (4, 3)
#  define _GL_ATTR_always_inline _GL_GNUC_PREREQ (3, 2)
#  define _GL_ATTR_artificial _GL_GNUC_PREREQ (4, 3)
#  define _GL_ATTR_cold _GL_GNUC_PREREQ (4, 3)
#  define _GL_ATTR_const _GL_GNUC_PREREQ (2, 95)
#  define _GL_ATTR_deprecated _GL_GNUC_PREREQ (3, 1)
#  define _GL_ATTR_diagnose_if 0
#  define _GL_ATTR_error _GL_GNUC_PREREQ (4, 3)
#  define _GL_ATTR_externally_visible _GL_GNUC_PREREQ (4, 1)
#  define _GL_ATTR_fallthrough _GL_GNUC_PREREQ (7, 0)
#  define _GL_ATTR_format _GL_GNUC_PREREQ (2, 7)
#  define _GL_ATTR_leaf _GL_GNUC_PREREQ (4, 6)
#  define _GL_ATTR_malloc _GL_GNUC_PREREQ (3, 0)
#  ifdef _ICC
#   define _GL_ATTR_may_alias 0
#  else
#   define _GL_ATTR_may_alias _GL_GNUC_PREREQ (3, 3)
#  endif
#  define _GL_ATTR_noinline _GL_GNUC_PREREQ (3, 1)
#  define _GL_ATTR_nonnull _GL_GNUC_PREREQ (3, 3)
#  define _GL_ATTR_nonstring _GL_GNUC_PREREQ (8, 0)
#  define _GL_ATTR_nothrow _GL_GNUC_PREREQ (3, 3)
#  define _GL_ATTR_packed _GL_GNUC_PREREQ (2, 7)
#  define _GL_ATTR_pure _GL_GNUC_PREREQ (2, 96)
#  define _GL_ATTR_reproducible 0 /* not yet supported, as of GCC 14 */
#  define _GL_ATTR_returns_nonnull _GL_GNUC_PREREQ (4, 9)
#  define _GL_ATTR_sentinel _GL_GNUC_PREREQ (4, 0)
#  define _GL_ATTR_unsequenced 0 /* not yet supported, as of GCC 14 */
#  define _GL_ATTR_unused _GL_GNUC_PREREQ (2, 7)
#  define _GL_ATTR_warn_unused_result _GL_GNUC_PREREQ (3, 4)
# endif
#endif

/* Use __has_c_attribute if available.  However, do not use with
   pre-C23 GCC, which can issue false positives if -Wpedantic.  */
#if (defined __has_c_attribute \
     && ! (_GL_GNUC_PREREQ (4, 6) \
           && (defined __STDC_VERSION__ ? __STDC_VERSION__ : 0) <= 201710))
# define _GL_HAVE___HAS_C_ATTRIBUTE 1
#else
# define _GL_HAVE___HAS_C_ATTRIBUTE 0
#endif

/* Attributes in bracket syntax [[...]] vs. attributes in __attribute__((...))
   syntax, in function declarations.  There are two problems here.
   (Last tested with gcc/g++ 14 and clang/clang++ 18.)

   1) We want that the _GL_ATTRIBUTE_* can be cumulated on the same declaration
      in any order.
      =========================== foo.c = foo.cc ===========================
      __attribute__ ((__deprecated__)) [[__nodiscard__]] int bar1 (int);
      [[__nodiscard__]] __attribute__ ((__deprecated__)) int bar2 (int);
      ======================================================================
      This gives a syntax error
        - in C mode with gcc
          <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108796>, and
        - in C++ mode with clang++ version < 16, and
        - in C++ mode, inside extern "C" {}, still in newer clang++ versions
          <https://github.com/llvm/llvm-project/issues/101990>.
 */
/* Define if, in a function declaration, the attributes in bracket syntax
   [[...]] must come before the attributes in __attribute__((...)) syntax.
   If this is defined, it is best to avoid the bracket syntax, so that the
   various _GL_ATTRIBUTE_* can be cumulated on the same declaration in any
   order.  */
#ifdef __cplusplus
# if defined __clang__
#  define _GL_BRACKET_BEFORE_ATTRIBUTE 1
# endif
#else
# if defined __GNUC__ && !defined __clang__
#  define _GL_BRACKET_BEFORE_ATTRIBUTE 1
# endif
#endif
/*
   2) We want that the _GL_ATTRIBUTE_* can be placed in a declaration
        - without 'extern', in C as well as in C++,
        - with 'extern', in C,
        - with 'extern "C"', in C++
      in the same position.  That is, we don't want to be forced to use a
      macro which arranges for the attribute to come before 'extern' in
      one case and after 'extern' in the other case, because such a macro
      would make the source code of .h files pretty ugly.
      =========================== foo.c = foo.cc ===========================
      #ifdef __cplusplus
      # define CC "C"
      #else
      # define CC
      #endif

      #define ND   [[__nodiscard__]]
      #define WUR  __attribute__((__warn_unused_result__))

      #ifdef __cplusplus
      extern "C" {
      #endif
                                        // gcc   clang  g++   clang++

      ND int foo (int);
      int ND foo (int);                 // warn  error  warn  error
      int foo ND (int);
      int foo (int) ND;                 // warn  error  warn  error

      WUR int foo (int);
      int WUR foo (int);
      int fo1 WUR (int);                // error error  error error
      int foo (int) WUR;

      #ifdef __cplusplus
      }
      #endif

                                        // gcc   clang  g++   clang++

      ND extern CC int foo (int);       //              error error
      extern CC ND int foo (int);       // error error
      extern CC int ND foo (int);       // warn  error  warn  error
      extern CC int foo ND (int);
      extern CC int foo (int) ND;       // warn  error  warn  error

      WUR extern CC int foo (int);      //              warn
      extern CC WUR int foo (int);
      extern CC int WUR foo (int);
      extern CC int foo WUR (int);      // error error  error error
      extern CC int foo (int) WUR;

      ND EXTERN_C_FUNC int foo (int);   //              error error
      EXTERN_C_FUNC ND int foo (int);
      EXTERN_C_FUNC int ND foo (int);   // warn  error  warn  error
      EXTERN_C_FUNC int foo ND (int);
      EXTERN_C_FUNC int foo (int) ND;   // warn  error  warn  error

      WUR EXTERN_C_FUNC int foo (int);  //              warn
      EXTERN_C_FUNC WUR int foo (int);
      EXTERN_C_FUNC int WUR foo (int);
      EXTERN_C_FUNC int fo2 WUR (int);  // error error  error error
      EXTERN_C_FUNC int foo (int) WUR;
      ======================================================================
      So, if we insist on using the 'extern' keyword ('extern CC' idiom):
        * If _GL_ATTRIBUTE_* expands to bracket syntax [[...]]
          in both C and C++, there is one available position:
            - between the function name and the parameter list.
        * If _GL_ATTRIBUTE_* expands to __attribute__((...)) syntax
          in both C and C++, there are several available positions:
            - before the return type,
            - between return type and function name,
            - at the end of the declaration.
        * If _GL_ATTRIBUTE_* expands to bracket syntax [[...]] in C and to
          __attribute__((...)) syntax in C++, there is no available position:
          it would need to come before 'extern' in C but after 'extern "C"'
          in C++.
        * If _GL_ATTRIBUTE_* expands to __attribute__((...)) syntax in C and
          to bracket syntax [[...]] in C++, there is one available position:
            - before the return type.
      Whereas, if we use the 'EXTERN_C_FUNC' idiom, which conditionally
      omits the 'extern' keyword:
        * If _GL_ATTRIBUTE_* expands to bracket syntax [[...]]
          in both C and C++, there are two available positions:
            - before the return type,
            - between the function name and the parameter list.
        * If _GL_ATTRIBUTE_* expands to __attribute__((...)) syntax
          in both C and C++, there are several available positions:
            - before the return type,
            - between return type and function name,
            - at the end of the declaration.
        * If _GL_ATTRIBUTE_* expands to bracket syntax [[...]] in C and to
          __attribute__((...)) syntax in C++, there is one available position:
            - before the return type.
        * If _GL_ATTRIBUTE_* expands to __attribute__((...)) syntax in C and
          to bracket syntax [[...]] in C++, there is one available position:
            - before the return type.
      The best choice is therefore to use the 'EXTERN_C_FUNC' idiom and
      put the attributes before the return type. This works regardless
      to what the _GL_ATTRIBUTE_* macros expand.
 */

/* Attributes in bracket syntax [[...]] vs. attributes in __attribute__((...))
   syntax, in static/inline function definitions.

   There are similar constraints as for function declarations.  However, here,
   we cannot omit the storage-class specifier.  Therefore, the following rule
   applies:
     * The macros
         _GL_ATTRIBUTE_CONST
         _GL_ATTRIBUTE_DEPRECATED
         _GL_ATTRIBUTE_MAYBE_UNUSED
         _GL_ATTRIBUTE_NODISCARD
         _GL_ATTRIBUTE_PURE
         _GL_ATTRIBUTE_REPRODUCIBLE
         _GL_ATTRIBUTE_UNSEQUENCED
       which may expand to bracket syntax [[...]], must come first, before the
       storage-class specifier.
     * Other _GL_ATTRIBUTE_* macros, that expand to __attribute__((...)) syntax,
       are better placed between the storage-class specifier and the return
       type.
 */

/* Attributes in bracket syntax [[...]] vs. attributes in __attribute__((...))
   syntax, in variable declarations.

   At which position can they be placed?
   (Last tested with gcc/g++ 14 and clang/clang++ 18.)

      =========================== foo.c = foo.cc ===========================
      #ifdef __cplusplus
      # define CC "C"
      #else
      # define CC
      #endif

      #define BD   [[__deprecated__]]
      #define AD   __attribute__ ((__deprecated__))

                              // gcc   clang  g++    clang++

      BD extern CC int var;   //              error  error
      extern CC BD int var;   // error error
      extern CC int BD var;   // warn  error  warn   error
      extern CC int var BD;

      AD extern CC int var;   //              warn
      extern CC AD int var;
      extern CC int AD var;
      extern CC int var AD;

      BD extern CC int z[];   //              error  error
      extern CC BD int z[];   // error error
      extern CC int BD z[];   // warn  error  warn   error
      extern CC int z1 BD [];
      extern CC int z[] BD;   // warn  error         error

      AD extern CC int z[];   //              warn
      extern CC AD int z[];
      extern CC int AD z[];
      extern CC int z2 AD []; // error error  error  error
      extern CC int z[] AD;
      ======================================================================

   * For non-array variables, the only good position is after the variable name,
     that is, at the end of the declaration.
   * For array variables, you will need to distinguish C and C++:
       - In C, before the 'extern' keyword.
       - In C++, between the 'extern "C"' and the variable's type.
 */
]dnl There is no _GL_ATTRIBUTE_ALIGNED; use stdalign's alignas instead.
[
/* _GL_ATTRIBUTE_ALLOC_SIZE ((N)) declares that the Nth argument of the function
   is the size of the returned memory block.
   _GL_ATTRIBUTE_ALLOC_SIZE ((M, N)) declares that the Mth argument multiplied
   by the Nth argument of the function is the size of the returned memory block.
 */
/* Applies to: functions, pointer to functions, function types.  */
#ifndef _GL_ATTRIBUTE_ALLOC_SIZE
# if _GL_HAS_ATTRIBUTE (alloc_size)
#  define _GL_ATTRIBUTE_ALLOC_SIZE(args) __attribute__ ((__alloc_size__ args))
# else
#  define _GL_ATTRIBUTE_ALLOC_SIZE(args)
# endif
#endif

/* _GL_ATTRIBUTE_ALWAYS_INLINE tells that the compiler should always inline the
   function and report an error if it cannot do so.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_ALWAYS_INLINE
# if _GL_HAS_ATTRIBUTE (always_inline)
#  define _GL_ATTRIBUTE_ALWAYS_INLINE __attribute__ ((__always_inline__))
# else
#  define _GL_ATTRIBUTE_ALWAYS_INLINE
# endif
#endif

/* _GL_ATTRIBUTE_ARTIFICIAL declares that the function is not important to show
    in stack traces when debugging.  The compiler should omit the function from
    stack traces.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_ARTIFICIAL
# if _GL_HAS_ATTRIBUTE (artificial)
#  define _GL_ATTRIBUTE_ARTIFICIAL __attribute__ ((__artificial__))
# else
#  define _GL_ATTRIBUTE_ARTIFICIAL
# endif
#endif

/* _GL_ATTRIBUTE_COLD declares that the function is rarely executed.  */
/* Applies to: functions.  */
/* Avoid __attribute__ ((cold)) on MinGW; see thread starting at
   <https://lists.gnu.org/r/emacs-devel/2019-04/msg01152.html>.
   Also, Oracle Studio 12.6 requires 'cold' not '__cold__'.  */
#ifndef _GL_ATTRIBUTE_COLD
# if _GL_HAS_ATTRIBUTE (cold) && !defined __MINGW32__
#  ifndef __SUNPRO_C
#   define _GL_ATTRIBUTE_COLD __attribute__ ((__cold__))
#  else
#   define _GL_ATTRIBUTE_COLD __attribute__ ((cold))
#  endif
# else
#  define _GL_ATTRIBUTE_COLD
# endif
#endif

/* _GL_ATTRIBUTE_CONST declares:
   It is OK for a compiler to move calls to the function and to omit
   calls to the function if another call has the same arguments or the
   result is not used.
   This attribute is safe for a function that neither depends on
   nor affects state, and always returns exactly once -
   e.g., does not raise an exception, call longjmp, or loop forever.
   (This attribute is stricter than _GL_ATTRIBUTE_PURE because the
   function cannot observe state.  It is stricter than
   _GL_ATTRIBUTE_UNSEQUENCED because the function must return exactly
   once and cannot depend on state addressed by its arguments.)  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_CONST
# if _GL_HAS_ATTRIBUTE (const)
#  define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
# else
#  define _GL_ATTRIBUTE_CONST _GL_ATTRIBUTE_UNSEQUENCED
# endif
#endif

/* _GL_ATTRIBUTE_DEALLOC (F, I) declares that the function returns pointers
   that can be freed by passing them as the Ith argument to the
   function F.
   _GL_ATTRIBUTE_DEALLOC_FREE declares that the function returns pointers that
   can be freed via 'free'; it can be used only after declaring 'free'.  */
/* Applies to: functions.  Cannot be used on inline functions.  */
#ifndef _GL_ATTRIBUTE_DEALLOC
# if _GL_GNUC_PREREQ (11, 0)
#  define _GL_ATTRIBUTE_DEALLOC(f, i) __attribute__ ((__malloc__ (f, i)))
# else
#  define _GL_ATTRIBUTE_DEALLOC(f, i)
# endif
#endif
/* If gnulib's <string.h> or <wchar.h> has already defined this macro, continue
   to use this earlier definition, since <stdlib.h> may not have been included
   yet.  */
#ifndef _GL_ATTRIBUTE_DEALLOC_FREE
# if defined __cplusplus && defined __GNUC__ && !defined __clang__
/* Work around GCC bug <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108231> */
#  define _GL_ATTRIBUTE_DEALLOC_FREE \
     _GL_ATTRIBUTE_DEALLOC ((void (*) (void *)) free, 1)
# else
#  define _GL_ATTRIBUTE_DEALLOC_FREE \
     _GL_ATTRIBUTE_DEALLOC (free, 1)
# endif
#endif

/* _GL_ATTRIBUTE_DEPRECATED: Declares that an entity is deprecated.
   The compiler may warn if the entity is used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: namespace, class, template specialization.  */
#ifndef _GL_ATTRIBUTE_DEPRECATED
# ifndef _GL_BRACKET_BEFORE_ATTRIBUTE
#  if _GL_HAVE___HAS_C_ATTRIBUTE
#   if __has_c_attribute (__deprecated__)
#    define _GL_ATTRIBUTE_DEPRECATED [[__deprecated__]]
#   endif
#  endif
# endif
# if !defined _GL_ATTRIBUTE_DEPRECATED && _GL_HAS_ATTRIBUTE (deprecated)
#  define _GL_ATTRIBUTE_DEPRECATED __attribute__ ((__deprecated__))
# endif
# ifndef _GL_ATTRIBUTE_DEPRECATED
#  define _GL_ATTRIBUTE_DEPRECATED
# endif
#endif

/* _GL_ATTRIBUTE_ERROR(msg) requests an error if a function is called and
   the function call is not optimized away.
   _GL_ATTRIBUTE_WARNING(msg) requests a warning if a function is called and
   the function call is not optimized away.  */
/* Applies to: functions.  */
#if !(defined _GL_ATTRIBUTE_ERROR && defined _GL_ATTRIBUTE_WARNING)
# if _GL_HAS_ATTRIBUTE (error)
#  define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__error__ (msg)))
#  define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__warning__ (msg)))
# elif _GL_HAS_ATTRIBUTE (diagnose_if)
#  define _GL_ATTRIBUTE_ERROR(msg) __attribute__ ((__diagnose_if__ (1, msg, "error")))
#  define _GL_ATTRIBUTE_WARNING(msg) __attribute__ ((__diagnose_if__ (1, msg, "warning")))
# else
#  define _GL_ATTRIBUTE_ERROR(msg)
#  define _GL_ATTRIBUTE_WARNING(msg)
# endif
#endif

/* _GL_ATTRIBUTE_EXTERNALLY_VISIBLE declares that the entity should remain
   visible to debuggers etc., even with '-fwhole-program'.  */
/* Applies to: functions, variables.  */
#ifndef _GL_ATTRIBUTE_EXTERNALLY_VISIBLE
# if _GL_HAS_ATTRIBUTE (externally_visible)
#  define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE __attribute__ ((externally_visible))
# else
#  define _GL_ATTRIBUTE_EXTERNALLY_VISIBLE
# endif
#endif

/* _GL_ATTRIBUTE_FALLTHROUGH declares that it is not a programming mistake if
   the control flow falls through to the immediately following 'case' or
   'default' label.  The compiler should not warn in this case.  */
/* Applies to: Empty statement (;), inside a 'switch' statement.  */
/* Always expands to something.  */
#ifndef _GL_ATTRIBUTE_FALLTHROUGH
# if _GL_HAVE___HAS_C_ATTRIBUTE
#  if __has_c_attribute (__fallthrough__)
#   define _GL_ATTRIBUTE_FALLTHROUGH [[__fallthrough__]]
#  endif
# endif
# if !defined _GL_ATTRIBUTE_FALLTHROUGH && _GL_HAS_ATTRIBUTE (fallthrough)
#  define _GL_ATTRIBUTE_FALLTHROUGH __attribute__ ((__fallthrough__))
# endif
# ifndef _GL_ATTRIBUTE_FALLTHROUGH
#  define _GL_ATTRIBUTE_FALLTHROUGH ((void) 0)
# endif
#endif

/* _GL_ATTRIBUTE_FORMAT ((ARCHETYPE, STRING-INDEX, FIRST-TO-CHECK))
   declares that the STRING-INDEXth function argument is a format string of
   style ARCHETYPE, which is one of:
     printf, gnu_printf
     scanf, gnu_scanf,
     strftime, gnu_strftime,
     strfmon,
   or the same thing prefixed and suffixed with '__'.
   If FIRST-TO-CHECK is not 0, arguments starting at FIRST-TO_CHECK
   are suitable for the format string.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_FORMAT
# if _GL_HAS_ATTRIBUTE (format)
#  define _GL_ATTRIBUTE_FORMAT(spec) __attribute__ ((__format__ spec))
# else
#  define _GL_ATTRIBUTE_FORMAT(spec)
# endif
#endif

/* _GL_ATTRIBUTE_LEAF declares that if the function is called from some other
   compilation unit, it executes code from that unit only by return or by
   exception handling.  This declaration lets the compiler optimize that unit
   more aggressively.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_LEAF
# if _GL_HAS_ATTRIBUTE (leaf)
#  define _GL_ATTRIBUTE_LEAF __attribute__ ((__leaf__))
# else
#  define _GL_ATTRIBUTE_LEAF
# endif
#endif

/* _GL_ATTRIBUTE_MALLOC declares that the function returns a pointer to freshly
   allocated memory.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_MALLOC
# if _GL_HAS_ATTRIBUTE (malloc)
#  define _GL_ATTRIBUTE_MALLOC __attribute__ ((__malloc__))
# else
#  define _GL_ATTRIBUTE_MALLOC
# endif
#endif

/* _GL_ATTRIBUTE_MAY_ALIAS declares that pointers to the type may point to the
   same storage as pointers to other types.  Thus this declaration disables
   strict aliasing optimization.  */
/* Applies to: types.  */
/* Oracle Studio 12.6 mishandles may_alias despite __has_attribute OK.  */
#ifndef _GL_ATTRIBUTE_MAY_ALIAS
# if _GL_HAS_ATTRIBUTE (may_alias) && !defined __SUNPRO_C
#  define _GL_ATTRIBUTE_MAY_ALIAS __attribute__ ((__may_alias__))
# else
#  define _GL_ATTRIBUTE_MAY_ALIAS
# endif
#endif

/* _GL_ATTRIBUTE_MAYBE_UNUSED declares that it is not a programming mistake if
   the entity is not used.  The compiler should not warn if the entity is not
   used.  */
/* Applies to:
     - function, variable,
     - struct, union, struct/union member,
     - enumeration, enumeration item,
     - typedef,
   in C++ also: class.  */
/* In C++ and C23, this is spelled [[__maybe_unused__]].
   GCC's syntax is __attribute__ ((__unused__)).
   clang supports both syntaxes.  Except that with clang ≥ 6, < 10, in C++ mode,
   __has_c_attribute (__maybe_unused__) yields true but the use of
   [[__maybe_unused__]] nevertheless produces a warning.  */
#ifndef _GL_ATTRIBUTE_MAYBE_UNUSED
# ifndef _GL_BRACKET_BEFORE_ATTRIBUTE
#  if defined __clang__ && defined __cplusplus
#   if !defined __apple_build_version__ && __clang_major__ >= 10
#    define _GL_ATTRIBUTE_MAYBE_UNUSED [[__maybe_unused__]]
#   endif
#  elif _GL_HAVE___HAS_C_ATTRIBUTE
#   if __has_c_attribute (__maybe_unused__)
#    define _GL_ATTRIBUTE_MAYBE_UNUSED [[__maybe_unused__]]
#   endif
#  endif
# endif
# ifndef _GL_ATTRIBUTE_MAYBE_UNUSED
#  define _GL_ATTRIBUTE_MAYBE_UNUSED _GL_ATTRIBUTE_UNUSED
# endif
#endif
/* Alternative spelling of this macro, for convenience and for
   compatibility with glibc/include/libc-symbols.h.  */
#define _GL_UNUSED _GL_ATTRIBUTE_MAYBE_UNUSED
/* Earlier spellings of this macro.  */
#define _UNUSED_PARAMETER_ _GL_ATTRIBUTE_MAYBE_UNUSED

/* _GL_ATTRIBUTE_NODISCARD declares that the caller of the function should not
   discard the return value.  The compiler may warn if the caller does not use
   the return value, unless the caller uses something like ignore_value.  */
/* Applies to: function, enumeration, class.  */
#ifndef _GL_ATTRIBUTE_NODISCARD
# ifndef _GL_BRACKET_BEFORE_ATTRIBUTE
#  if defined __clang__ && defined __cplusplus
  /* With clang up to 15.0.6 (at least), in C++ mode, [[__nodiscard__]] produces
     a warning.
     The 1000 below means a yet unknown threshold.  When clang++ version X
     starts supporting [[__nodiscard__]] without warning about it, you can
     replace the 1000 with X.  */
#   if __clang_major__ >= 1000
#    define _GL_ATTRIBUTE_NODISCARD [[__nodiscard__]]
#   endif
#  elif _GL_HAVE___HAS_C_ATTRIBUTE
#   if __has_c_attribute (__nodiscard__)
#    define _GL_ATTRIBUTE_NODISCARD [[__nodiscard__]]
#   endif
#  endif
# endif
# if !defined _GL_ATTRIBUTE_NODISCARD && _GL_HAS_ATTRIBUTE (warn_unused_result)
#  define _GL_ATTRIBUTE_NODISCARD __attribute__ ((__warn_unused_result__))
# endif
# ifndef _GL_ATTRIBUTE_NODISCARD
#  define _GL_ATTRIBUTE_NODISCARD
# endif
#endif

/* _GL_ATTRIBUTE_NOINLINE tells that the compiler should not inline the
   function.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_NOINLINE
# if _GL_HAS_ATTRIBUTE (noinline)
#  define _GL_ATTRIBUTE_NOINLINE __attribute__ ((__noinline__))
# else
#  define _GL_ATTRIBUTE_NOINLINE
# endif
#endif

/* _GL_ATTRIBUTE_NONNULL ((N1, N2,...)) declares that the arguments N1, N2,...
   must not be NULL.
   _GL_ATTRIBUTE_NONNULL () declares that all pointer arguments must not be
   null.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_NONNULL
# if _GL_HAS_ATTRIBUTE (nonnull)
#  define _GL_ATTRIBUTE_NONNULL(args) __attribute__ ((__nonnull__ args))
# else
#  define _GL_ATTRIBUTE_NONNULL(args)
# endif
#endif

/* _GL_ATTRIBUTE_NONSTRING declares that the contents of a character array is
   not meant to be NUL-terminated.  */
/* Applies to: struct/union members and variables that are arrays of element
   type '[[un]signed] char'.  */
#ifndef _GL_ATTRIBUTE_NONSTRING
# if _GL_HAS_ATTRIBUTE (nonstring)
#  define _GL_ATTRIBUTE_NONSTRING __attribute__ ((__nonstring__))
# else
#  define _GL_ATTRIBUTE_NONSTRING
# endif
#endif

/* There is no _GL_ATTRIBUTE_NORETURN; use _Noreturn instead.  */

/* _GL_ATTRIBUTE_NOTHROW declares that the function does not throw exceptions.
 */
/* Applies to: functions.  */
/* After a function's parameter list, this attribute must come first, before
   other attributes.  */
#ifndef _GL_ATTRIBUTE_NOTHROW
# if defined __cplusplus
#  if _GL_GNUC_PREREQ (2, 8) || __clang_major__ >= 4
#   if __cplusplus >= 201103L
#    define _GL_ATTRIBUTE_NOTHROW noexcept (true)
#   else
#    define _GL_ATTRIBUTE_NOTHROW throw ()
#   endif
#  else
#   define _GL_ATTRIBUTE_NOTHROW
#  endif
# else
#  if _GL_HAS_ATTRIBUTE (nothrow)
#   define _GL_ATTRIBUTE_NOTHROW __attribute__ ((__nothrow__))
#  else
#   define _GL_ATTRIBUTE_NOTHROW
#  endif
# endif
#endif

/* _GL_ATTRIBUTE_PACKED declares:
   For struct members: The member has the smallest possible alignment.
   For struct, union, class: All members have the smallest possible alignment,
   minimizing the memory required.  */
/* Applies to: struct members, struct, union,
   in C++ also: class.  */
#ifndef _GL_ATTRIBUTE_PACKED
/* Oracle Studio 12.6 miscompiles code with __attribute__ ((__packed__)) despite
   __has_attribute OK.  */
# if _GL_HAS_ATTRIBUTE (packed) && !defined __SUNPRO_C
#  define _GL_ATTRIBUTE_PACKED __attribute__ ((__packed__))
# else
#  define _GL_ATTRIBUTE_PACKED
# endif
#endif

/* _GL_ATTRIBUTE_PURE declares:
   It is OK for a compiler to move calls to the function and to omit
   calls to the function if another call has the same arguments or the
   result is not used, and if observable state is the same.
   This attribute is safe for a function that does not affect observable state
   and always returns exactly once.
   (This attribute is looser than _GL_ATTRIBUTE_CONST because the function
   can depend on observable state.  It is stricter than
   _GL_ATTRIBUTE_REPRODUCIBLE because the function must return exactly
   once and cannot affect state addressed by its arguments.)  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_PURE
# if _GL_HAS_ATTRIBUTE (pure)
#  define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define _GL_ATTRIBUTE_PURE _GL_ATTRIBUTE_REPRODUCIBLE
# endif
#endif

/* _GL_ATTRIBUTE_REPRODUCIBLE declares:
   It is OK for a compiler to move calls to the function and to omit duplicate
   calls to the function with the same arguments, so long as the state
   addressed by its arguments is the same and is updated in time for
   the rest of the program.
   This attribute is safe for a function that is effectless and idempotent; see
   ISO C 23 § 6.7.12.7 for a definition of these terms.
   (This attribute is looser than _GL_ATTRIBUTE_UNSEQUENCED because
   the function need not be stateless and idempotent.  It is looser
   than _GL_ATTRIBUTE_PURE because the function need not return
   exactly once and can affect state addressed by its arguments.)
   See also <https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2956.htm> and
   <https://stackoverflow.com/questions/76847905/>.  */
/* Applies to: functions, pointer to functions, function types.  */
#ifndef _GL_ATTRIBUTE_REPRODUCIBLE
/* This may be revisited when gcc and clang support [[reproducible]] or possibly
   __attribute__ ((__reproducible__)).  */
# ifndef _GL_BRACKET_BEFORE_ATTRIBUTE
#  if _GL_HAS_ATTRIBUTE (reproducible)
#   define _GL_ATTRIBUTE_REPRODUCIBLE [[reproducible]]
#  endif
# endif
# ifndef _GL_ATTRIBUTE_REPRODUCIBLE
#  define _GL_ATTRIBUTE_REPRODUCIBLE
# endif
#endif

/* _GL_ATTRIBUTE_RETURNS_NONNULL declares that the function's return value is
   a non-NULL pointer.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_RETURNS_NONNULL
# if _GL_HAS_ATTRIBUTE (returns_nonnull)
#  define _GL_ATTRIBUTE_RETURNS_NONNULL __attribute__ ((__returns_nonnull__))
# else
#  define _GL_ATTRIBUTE_RETURNS_NONNULL
# endif
#endif

/* _GL_ATTRIBUTE_SENTINEL(pos) declares that the variadic function expects a
   trailing NULL argument.
   _GL_ATTRIBUTE_SENTINEL () - The last argument is NULL (requires C99).
   _GL_ATTRIBUTE_SENTINEL ((N)) - The (N+1)st argument from the end is NULL.  */
/* Applies to: functions.  */
#ifndef _GL_ATTRIBUTE_SENTINEL
# if _GL_HAS_ATTRIBUTE (sentinel)
#  define _GL_ATTRIBUTE_SENTINEL(pos) __attribute__ ((__sentinel__ pos))
# else
#  define _GL_ATTRIBUTE_SENTINEL(pos)
# endif
#endif

/* _GL_ATTRIBUTE_UNSEQUENCED declares:
   It is OK for a compiler to move calls to the function and to omit duplicate
   calls to the function with the same arguments, so long as the state
   addressed by its arguments is the same.
   This attribute is safe for a function that is effectless, idempotent,
   stateless, and independent; see ISO C 23 § 6.7.12.7 for a definition of
   these terms.
   (This attribute is stricter than _GL_ATTRIBUTE_REPRODUCIBLE because
   the function must be stateless and independent.  It is looser than
   _GL_ATTRIBUTE_CONST because the function need not return exactly
   once and can depend on state addressed by its arguments.)
   See also <https://www.open-std.org/jtc1/sc22/wg14/www/docs/n2956.htm> and
   <https://stackoverflow.com/questions/76847905/>.  */
/* Applies to: functions, pointer to functions, function types.  */
#ifndef _GL_ATTRIBUTE_UNSEQUENCED
/* This may be revisited when gcc and clang support [[unsequenced]] or possibly
   __attribute__ ((__unsequenced__)).  */
# ifndef _GL_BRACKET_BEFORE_ATTRIBUTE
#  if _GL_HAS_ATTRIBUTE (unsequenced)
#   define _GL_ATTRIBUTE_UNSEQUENCED [[unsequenced]]
#  endif
# endif
# ifndef _GL_ATTRIBUTE_UNSEQUENCED
#  define _GL_ATTRIBUTE_UNSEQUENCED
# endif
#endif

/* A helper macro.  Don't use it directly.  */
#ifndef _GL_ATTRIBUTE_UNUSED
# if _GL_HAS_ATTRIBUTE (unused)
#  define _GL_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define _GL_ATTRIBUTE_UNUSED
# endif
#endif

]dnl There is no _GL_ATTRIBUTE_VISIBILITY; see m4/visibility.m4 instead.
[
/* _GL_UNUSED_LABEL; declares that it is not a programming mistake if the
   immediately preceding label is not used.  The compiler should not warn
   if the label is not used.  */
/* Applies to: label (both in C and C++).  */
/* Note that g++ < 4.5 does not support the '__attribute__ ((__unused__)) ;'
   syntax.  But clang does.  */
#ifndef _GL_UNUSED_LABEL
# if !(defined __cplusplus && !_GL_GNUC_PREREQ (4, 5)) || defined __clang__
#  define _GL_UNUSED_LABEL _GL_ATTRIBUTE_UNUSED
# else
#  define _GL_UNUSED_LABEL
# endif
#endif

/* The following attributes enable detection of multithread-safety problems
   and resource leaks at compile-time, by clang ≥ 15, when the warning option
   -Wthread-safety is enabled.  For usage, see
   <https://clang.llvm.org/docs/ThreadSafetyAnalysis.html>.  */
#ifndef _GL_ATTRIBUTE_CAPABILITY_TYPE
# if __clang_major__ >= 15
#  define _GL_ATTRIBUTE_CAPABILITY_TYPE(concept) \
     __attribute__ ((__capability__ (concept)))
#else
#  define _GL_ATTRIBUTE_CAPABILITY_TYPE(concept)
# endif
#endif
#ifndef _GL_ATTRIBUTE_ACQUIRE_CAPABILITY
# if __clang_major__ >= 15
#  define _GL_ATTRIBUTE_ACQUIRE_CAPABILITY(resource) \
     __attribute__ ((__acquire_capability__ (resource)))
# else
#  define _GL_ATTRIBUTE_ACQUIRE_CAPABILITY(resource)
# endif
#endif
#ifndef _GL_ATTRIBUTE_RELEASE_CAPABILITY
# if __clang_major__ >= 15
#  define _GL_ATTRIBUTE_RELEASE_CAPABILITY(resource) \
     __attribute__ ((__release_capability__ (resource)))
# else
#  define _GL_ATTRIBUTE_RELEASE_CAPABILITY(resource)
# endif
#endif
])
  AH_VERBATIM([c_linkage],
[/* In C++, there is the concept of "language linkage", that encompasses
    name mangling and function calling conventions.
    The following macros start and end a block of "C" linkage.  */
#ifdef __cplusplus
# define _GL_BEGIN_C_LINKAGE extern "C" {
# define _GL_END_C_LINKAGE }
#else
# define _GL_BEGIN_C_LINKAGE
# define _GL_END_C_LINKAGE
#endif
])
  AH_VERBATIM([async_safe],
[/* The _GL_ASYNC_SAFE marker should be attached to functions that are
   signal handlers (for signals other than SIGABRT, SIGPIPE) or can be
   invoked from such signal handlers.  Such functions have some restrictions:
     * All functions that it calls should be marked _GL_ASYNC_SAFE as well,
       or should be listed as async-signal-safe in POSIX
       <https://pubs.opengroup.org/onlinepubs/9699919799/functions/V2_chap02.html#tag_15_04>
       section 2.4.3.  Note that malloc(), sprintf(), and fwrite(), in
       particular, are NOT async-signal-safe.
     * All memory locations (variables and struct fields) that these functions
       access must be marked 'volatile'.  This holds for both read and write
       accesses.  Otherwise the compiler might optimize away stores to and
       reads from such locations that occur in the program, depending on its
       data flow analysis.  For example, when the program contains a loop
       that is intended to inspect a variable set from within a signal handler
           while (!signal_occurred)
             ;
       the compiler is allowed to transform this into an endless loop if the
       variable 'signal_occurred' is not declared 'volatile'.
   Additionally, recall that:
     * A signal handler should not modify errno (except if it is a handler
       for a fatal signal and ends by raising the same signal again, thus
       provoking the termination of the process).  If it invokes a function
       that may clobber errno, it needs to save and restore the value of
       errno.  */
#define _GL_ASYNC_SAFE
])
  AH_VERBATIM([micro_optimizations],
[/* _GL_CMP (n1, n2) performs a three-valued comparison on n1 vs. n2, where
   n1 and n2 are expressions without side effects, that evaluate to real
   numbers (excluding NaN).
   It returns
     1  if n1 > n2
     0  if n1 == n2
     -1 if n1 < n2
   The naïve code   (n1 > n2 ? 1 : n1 < n2 ? -1 : 0)  produces a conditional
   jump with nearly all GCC versions up to GCC 10.
   This variant     (n1 < n2 ? -1 : n1 > n2)  produces a conditional with many
   GCC versions up to GCC 9.
   The better code  (n1 > n2) - (n1 < n2)  from Hacker's Delight § 2-9
   avoids conditional jumps in all GCC versions >= 3.4.  */
#define _GL_CMP(n1, n2) (((n1) > (n2)) - ((n1) < (n2)))
])
  dnl Hint which direction to take regarding cross-compilation guesses:
  dnl When a user installs a program on a platform they are not intimately
  dnl familiar with, --enable-cross-guesses=conservative is the appropriate
  dnl choice.  It implements the "If we don't know, assume the worst" principle.
  dnl However, when an operating system developer (on a platform which is not
  dnl yet known to gnulib) builds packages for their platform, they want to
  dnl expose, not hide, possible platform bugs; in this case,
  dnl --enable-cross-guesses=risky is the appropriate choice.
  dnl Sets the variables
  dnl gl_cross_guess_normal    (to be used when 'yes' is good and 'no' is bad),
  dnl gl_cross_guess_inverted  (to be used when 'no' is good and 'yes' is bad).
  AC_ARG_ENABLE([cross-guesses],
    [AS_HELP_STRING([[--enable-cross-guesses={conservative|risky}]],
       [specify policy for cross-compilation guesses])],
    [if test "x$enableval" != xconservative && test "x$enableval" != xrisky; then
       AC_MSG_WARN([invalid argument supplied to --enable-cross-guesses])
       enableval=conservative
     fi
     gl_cross_guesses="$enableval"],
    [gl_cross_guesses=conservative])
  if test $gl_cross_guesses = risky; then
    gl_cross_guess_normal="guessing yes"
    gl_cross_guess_inverted="guessing no"
  else
    gl_cross_guess_normal="guessing no"
    gl_cross_guess_inverted="guessing yes"
  fi
  dnl Preparation for running test programs:
  dnl Tell glibc to write diagnostics from -D_FORTIFY_SOURCE=2 to stderr, not
  dnl to /dev/tty, so they can be redirected to log files.  Such diagnostics
  dnl arise e.g., in the macros gl_PRINTF_DIRECTIVE_N, gl_SNPRINTF_DIRECTIVE_N.
  LIBC_FATAL_STDERR_=1
  export LIBC_FATAL_STDERR_
])
m4trace:m4/gnulib-common.m4:970: -1- AC_DEFUN([gl_MODULE_INDICATOR_INIT_VARIABLE], [
  GL_MODULE_INDICATOR_PREFIX[]_[$1]=m4_if([$2], , [0], [$2])
  AC_SUBST(GL_MODULE_INDICATOR_PREFIX[]_[$1])
])
m4trace:m4/gnulib-common.m4:985: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE], [
  gl_MODULE_INDICATOR_SET_VARIABLE_AUX(
    [GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[$1]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])],
    [gl_MODULE_INDICATOR_CONDITION])
])
m4trace:m4/gnulib-common.m4:998: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX], [
  m4_if(m4_defn([gl_MODULE_INDICATOR_CONDITION]), [1],
    [
     dnl Simplify the expression VALUE || 1 to 1.
     $1=1
    ],
    [gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([$1],
                                             [gl_MODULE_INDICATOR_CONDITION])])
])
m4trace:m4/gnulib-common.m4:1012: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR], [
  dnl Simplify the expression 1 || CONDITION to 1.
  if test "$[]$1" != 1; then
    dnl Simplify the expression 0 || CONDITION to CONDITION.
    if test "$[]$1" = 0; then
      $1=$2
    else
      $1="($[]$1 || $2)"
    fi
  fi
])
m4trace:m4/gnulib-common.m4:1037: -1- AC_DEFUN([gl_MODULE_INDICATOR], [
  AC_DEFINE_UNQUOTED([GNULIB_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]),
    [gl_MODULE_INDICATOR_CONDITION],
    [Define to a C preprocessor expression that evaluates to 1 or 0,
     depending whether the gnulib module $1 shall be considered present.])
])
m4trace:m4/gnulib-common.m4:1060: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])
m4trace:m4/gnulib-common.m4:1072: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_POSIXCHECK], [
  dnl Override gl_WARN_ON_USE_PREPARE.
  dnl But hide this definition from 'aclocal'.
  AC_DEFUN([gl_W][ARN_ON_USE_PREPARE], [])
])
m4trace:m4/gnulib-common.m4:1083: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS], [
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])
m4trace:m4/gnulib-common.m4:1091: -1- AC_DEFUN([gl_FEATURES_H], [
  AC_CHECK_HEADERS_ONCE([features.h])
  if test $ac_cv_header_features_h = yes; then
    HAVE_FEATURES_H=1
  else
    HAVE_FEATURES_H=0
  fi
  AC_SUBST([HAVE_FEATURES_H])
])
m4trace:m4/gnulib-common.m4:1105: -1- AC_DEFUN([gl_PROG_CC_C99], [
  dnl Just use AC_PROG_CC_C99.
  dnl When AC_PROG_CC_C99 and AC_PROG_CC_STDC are used together, the substituted
  dnl value of CC will contain the C99 enabling options twice. But this is only
  dnl a cosmetic problem.
  dnl With Autoconf >= 2.70, use AC_PROG_CC since it implies AC_PROG_CC_C99;
  dnl this avoids a "warning: The macro `AC_PROG_CC_C99' is obsolete."
  m4_version_prereq([2.70],
    [AC_REQUIRE([AC_PROG_CC])],
    [AC_REQUIRE([AC_PROG_CC_C99])])
])
m4trace:m4/gnulib-common.m4:1122: -1- AC_DEFUN([gl_PROG_AR_RANLIB], [
  dnl Minix 3 comes with two toolchains: The Amsterdam Compiler Kit compiler
  dnl as "cc", and GCC as "gcc". They have different object file formats and
  dnl library formats. In particular, the GNU binutils programs ar and ranlib
  dnl produce libraries that work only with gcc, not with cc.
  AC_REQUIRE([AC_PROG_CC])
  dnl The '' hides this use from 'aclocal'.
  AC_BEFORE([$0], [A][M_PROG_AR])
  AC_CACHE_CHECK([for Minix Amsterdam compiler], [gl_cv_c_amsterdam_compiler],
    [
      AC_EGREP_CPP([Amsterdam],
        [
#ifdef __ACK__
Amsterdam
#endif
        ],
        [gl_cv_c_amsterdam_compiler=yes],
        [gl_cv_c_amsterdam_compiler=no])
    ])

  dnl Don't compete with AM_PROG_AR's decision about AR/ARFLAGS if we are not
  dnl building with __ACK__.
  if test $gl_cv_c_amsterdam_compiler = yes; then
    if test -z "$AR"; then
      AR='cc -c.a'
    fi
    if test -z "$ARFLAGS"; then
      ARFLAGS='-o'
    fi
  else
    dnl AM_PROG_AR was added in automake v1.11.2.  AM_PROG_AR does not AC_SUBST
    dnl ARFLAGS variable (it is filed into Makefile.in directly by automake
    dnl script on-demand, if not specified by ./configure of course).
    dnl Don't AC_REQUIRE the AM_PROG_AR otherwise the code for __ACK__ above
    dnl will be ignored.  Also, pay attention to call AM_PROG_AR in else block
    dnl because AM_PROG_AR is written so it could re-set AR variable even for
    dnl __ACK__.  It may seem like its easier to avoid calling the macro here,
    dnl but we need to AC_SUBST both AR/ARFLAGS (thus those must have some good
    dnl default value and automake should usually know them).
    dnl
    dnl The '' hides this use from 'aclocal'.
    m4_ifdef([A][M_PROG_AR], [A][M_PROG_AR], [:])
  fi

  dnl In case the code above has not helped with setting AR/ARFLAGS, use
  dnl Automake-documented default values for AR and ARFLAGS, but prefer
  dnl ${host}-ar over ar (useful for cross-compiling).
  AC_CHECK_TOOL([AR], [ar], [ar])
  if test -z "$ARFLAGS"; then
    ARFLAGS='cr'
  fi

  AC_SUBST([AR])
  AC_SUBST([ARFLAGS])
  if test -z "$RANLIB"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      RANLIB=':'
    else
      dnl Use the ranlib program if it is available.
      AC_PROG_RANLIB
    fi
  fi
  AC_SUBST([RANLIB])
])
m4trace:m4/gnulib-common.m4:1242: -1- AC_DEFUN([gl_BIGENDIAN], [
  AC_C_BIGENDIAN
])
m4trace:m4/gnulib-common.m4:1256: -1- AC_DEFUN([gl_SILENT], [
  exec GL_TMP_FD>&AS_MESSAGE_FD AS_MESSAGE_FD>/dev/null
  $1
  exec AS_MESSAGE_FD>&GL_TMP_FD GL_TMP_FD>&-
])
m4trace:m4/gnulib-common.m4:1268: -1- AC_DEFUN([gl_CACHE_VAL_SILENT], [
  gl_SILENT([
    AC_CACHE_VAL([$1], [$2])
  ])
])
m4trace:m4/gnulib-common.m4:1282: -1- AC_DEFUN([gl_CONDITIONAL], [
  pushdef([AC_CONFIG_COMMANDS_PRE], [:])dnl
  AM_CONDITIONAL([$1], [$2])
  popdef([AC_CONFIG_COMMANDS_PRE])dnl
  if test -z "${[$1]_TRUE}" && test -z "${[$1]_FALSE}"; then
    [$1]_TRUE='#'
    [$1]_FALSE='#'
  fi
])
m4trace:m4/gnulib-common.m4:1298: -1- AC_DEFUN([gl_CC_ALLOW_WARNINGS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for C compiler option to allow warnings],
    [gl_cv_cc_wallow],
    [rm -f conftest*
     echo 'int dummy;' > conftest.c
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -c conftest.c 2>conftest1.err]) >/dev/null
     AC_TRY_COMMAND([${CC-cc} $CFLAGS $CPPFLAGS -Wno-error -c conftest.c 2>conftest2.err]) >/dev/null
     dnl Test the number of error output lines, because AIX xlc accepts the
     dnl option '-Wno-error', just to produce a warning
     dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
     dnl afterwards.
     if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
       gl_cv_cc_wallow='-Wno-error'
     else
       gl_cv_cc_wallow=none
     fi
     rm -f conftest*
    ])
  case "$gl_cv_cc_wallow" in
    none) GL_CFLAG_ALLOW_WARNINGS='' ;;
    *)    GL_CFLAG_ALLOW_WARNINGS="$gl_cv_cc_wallow" ;;
  esac
  AC_SUBST([GL_CFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:1328: -1- AC_DEFUN([gl_CXX_ALLOW_WARNINGS], [
  dnl Requires AC_PROG_CXX or gl_PROG_ANSI_CXX.
  if test -n "$CXX" && test "$CXX" != no; then
    AC_CACHE_CHECK([for C++ compiler option to allow warnings],
      [gl_cv_cxx_wallow],
      [rm -f conftest*
       echo 'int dummy;' > conftest.cc
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -c conftest.cc 2>conftest1.err]) >/dev/null
       AC_TRY_COMMAND([${CXX-c++} $CXXFLAGS $CPPFLAGS -Wno-error -c conftest.cc 2>conftest2.err]) >/dev/null
       dnl Test the number of error output lines, because AIX xlC accepts the
       dnl option '-Wno-error', just to produce a warning
       dnl "Option -Wno-error was incorrectly specified. The option will be ignored."
       dnl afterwards.
       if test $? = 0 && test `wc -l < conftest1.err` = `wc -l < conftest2.err`; then
         gl_cv_cxx_wallow='-Wno-error'
       else
         gl_cv_cxx_wallow=none
       fi
       rm -f conftest*
      ])
    case "$gl_cv_cxx_wallow" in
      none) GL_CXXFLAG_ALLOW_WARNINGS='' ;;
      *)    GL_CXXFLAG_ALLOW_WARNINGS="$gl_cv_cxx_wallow" ;;
    esac
  else
    GL_CXXFLAG_ALLOW_WARNINGS=''
  fi
  AC_SUBST([GL_CXXFLAG_ALLOW_WARNINGS])
])
m4trace:m4/gnulib-common.m4:1362: -1- AC_DEFUN([gl_CC_GNULIB_WARNINGS], [
  AC_REQUIRE([gl_CC_ALLOW_WARNINGS])
  dnl Assume that the compiler supports -Wno-* options only if it also supports
  dnl -Wno-error.
  GL_CFLAG_GNULIB_WARNINGS=''
  if test -n "$GL_CFLAG_ALLOW_WARNINGS"; then
    dnl Enable these warning options:
    dnl
    dnl                                       GCC             clang
    dnl -Wno-cast-qual                        >= 3            >= 3.9
    dnl -Wno-conversion                       >= 3            >= 3.9
    dnl -Wno-float-conversion                 >= 4.9          >= 3.9
    dnl -Wno-float-equal                      >= 3            >= 3.9
    dnl -Wimplicit-fallthrough                >= 7            >= 3.9
    dnl -Wno-pedantic                         >= 4.8          >= 3.9
    dnl -Wno-sign-compare                     >= 3            >= 3.9
    dnl -Wno-sign-conversion                  >= 4.3          >= 3.9
    dnl -Wno-tautological-out-of-range-compare  -             >= 3.9
    dnl -Wno-type-limits                      >= 4.3          >= 3.9
    dnl -Wno-undef                            >= 3            >= 3.9
    dnl -Wno-unsuffixed-float-constants       >= 4.5
    dnl -Wno-unused-const-variable            >= 4.4          >= 3.9
    dnl -Wno-unused-function                  >= 3            >= 3.9
    dnl -Wno-unused-parameter                 >= 3            >= 3.9
    dnl
    cat > conftest.c <<\EOF
      #if (__GNUC__ >= 3 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-cast-qual
      -Wno-conversion
      -Wno-float-equal
      -Wno-sign-compare
      -Wno-undef
      -Wno-unused-function
      -Wno-unused-parameter
      #endif
      #if (__GNUC__ + (__GNUC_MINOR__ >= 9) > 4 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-float-conversion
      #endif
      #if (__GNUC__ >= 7 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wimplicit-fallthrough
      #endif
      #if (__GNUC__ + (__GNUC_MINOR__ >= 8) > 4 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-pedantic
      #endif
      #if 3 < __clang_major__ + (9 <= __clang_minor__)
      -Wno-tautological-constant-out-of-range-compare
      #endif
      #if (__GNUC__ + (__GNUC_MINOR__ >= 3) > 4 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-sign-conversion
      -Wno-type-limits
      #endif
      #if (__GNUC__ + (__GNUC_MINOR__ >= 4) > 4 && !defined __clang__) || (__clang_major__ + (__clang_minor__ >= 9) > 3)
      -Wno-unused-const-variable
      #endif
      #if (__GNUC__ + (__GNUC_MINOR__ >= 5) > 4 && !defined __clang__)
      -Wno-unsuffixed-float-constants
      #endif
EOF
    gl_command="$CC $CFLAGS $CPPFLAGS -E conftest.c > conftest.out"
    if AC_TRY_EVAL([gl_command]); then
      gl_options=`grep -v '#' conftest.out`
      for word in $gl_options; do
        GL_CFLAG_GNULIB_WARNINGS="$GL_CFLAG_GNULIB_WARNINGS $word"
      done
    fi
    rm -f conftest.c conftest.out
  fi
  AC_SUBST([GL_CFLAG_GNULIB_WARNINGS])
])
m4trace:m4/gnulib-common.m4:1440: -1- AC_DEFUN([gl_CONDITIONAL_HEADER], [
  m4_pushdef([gl_header_name], AS_TR_SH(m4_toupper($1)))
  m4_pushdef([gl_generate_var], [GL_GENERATE_]AS_TR_SH(m4_toupper($1)))
  m4_pushdef([gl_generate_cond], [GL_GENERATE_]AS_TR_SH(m4_toupper($1)))
  case "$gl_generate_var" in
    false) gl_header_name='' ;;
    true)
      dnl It is OK to use a .h file in lib/ from within tests/, but not vice
      dnl versa.
      if test -z "$gl_header_name"; then
        gl_header_name="${gl_source_base_prefix}$1"
      fi
      ;;
    *) echo "*** gl_generate_var is not set correctly" 1>&2; exit 1 ;;
  esac
  AC_SUBST(gl_header_name)
  gl_CONDITIONAL(gl_generate_cond, [$gl_generate_var])
  m4_popdef([gl_generate_cond])
  m4_popdef([gl_generate_var])
  m4_popdef([gl_header_name])
])
m4trace:m4/gnulib-common.m4:1464: -1- AC_DEFUN([gl_PREPARE_CHECK_FUNCS_MACOS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_COMPILER_CLANG])
  AC_CACHE_CHECK([for compiler option needed when checking for future declarations],
    [gl_cv_compiler_check_future_option],
    [case "$host_os" in
       dnl This is only needed on macOS.
       darwin*)
         if test $gl_cv_compiler_clang = yes; then
           dnl Test whether the compiler supports the option
           dnl '-Werror=unguarded-availability-new'.
           saved_ac_compile="$ac_compile"
           ac_compile="$ac_compile -Werror=unguarded-availability-new"
           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],[[]])],
             [gl_cv_compiler_check_future_option='-Werror=unguarded-availability-new'],
             [gl_cv_compiler_check_future_option=none])
           ac_compile="$saved_ac_compile"
         else
           gl_cv_compiler_check_future_option=none
         fi
         ;;
       *) gl_cv_compiler_check_future_option=none ;;
     esac
    ])
])
m4trace:m4/gnulib-common.m4:1496: -1- AC_DEFUN([gl_CHECK_FUNCS_DEFAULT_CASE], [
         *)
           AC_CHECK_FUNC([$1])
           [gl_cv_onwards_func_][$1]=$[ac_cv_func_][$1]
           ;;
])
m4trace:m4/gnulib-common.m4:1504: -1- AC_DEFUN([gl_CHECK_FUNCS_CASE_FOR_ANDROID], [
         linux*-android*)
           AC_CHECK_DECL([$1], , , [$2])
           if test $[ac_cv_have_decl_][$1] = yes; then
             AC_CHECK_FUNC([[$1]])
             if test $[ac_cv_func_][$1] = yes; then
               [gl_cv_onwards_func_][$1]=yes
             else
               dnl The function is declared but does not exist. This should not
               dnl happen normally. But anyway, we know that a future version
               dnl of Android will have the function.
               [gl_cv_onwards_func_][$1]='future OS version'
             fi
           else
             [gl_cv_onwards_func_][$1]='future OS version'
           fi
           ;;
])
m4trace:m4/gnulib-common.m4:1524: -1- AC_DEFUN([gl_CHECK_FUNCS_CASE_FOR_MACOS], [
         darwin*)
           if test "x$gl_cv_compiler_check_future_option" != "xnone"; then
             dnl Use a compile test, not a link test.
             saved_ac_compile="$ac_compile"
             ac_compile="$ac_compile $gl_cv_compiler_check_future_option"
             saved_ac_compile_for_check_decl="$ac_compile_for_check_decl"
             ac_compile_for_check_decl="$ac_compile_for_check_decl $gl_cv_compiler_check_future_option"
             unset [ac_cv_have_decl_][$1]
             AC_CHECK_DECL([$1], , , [$2])
             ac_compile="$saved_ac_compile"
             ac_compile_for_check_decl="$saved_ac_compile_for_check_decl"
             [ac_cv_func_][$1]="$[ac_cv_have_decl_][$1]"
             if test $[ac_cv_func_][$1] = yes; then
               [gl_cv_onwards_func_][$1]=yes
             else
               unset [ac_cv_have_decl_][$1]
               AC_CHECK_DECL([$1], , , [$2])
               if test $[ac_cv_have_decl_][$1] = yes; then
                 [gl_cv_onwards_func_][$1]='future OS version'
               else
                 [gl_cv_onwards_func_][$1]=no
               fi
             fi
           else
             AC_CHECK_FUNC([$1])
             [gl_cv_onwards_func_][$1]=$[ac_cv_func_][$1]
           fi
           ;;
])
m4trace:m4/gnulib-common.m4:1556: -1- AC_DEFUN([gl_CHECK_FUNCS_SET_RESULTS], [
  case "$[gl_cv_onwards_func_][$1]" in
    future*) [ac_cv_func_][$1]=no ;;
    *)       [ac_cv_func_][$1]=$[gl_cv_onwards_func_][$1] ;;
  esac
  if test $[ac_cv_func_][$1] = yes; then
    AC_DEFINE([HAVE_]m4_translit([[$1]],
                                 [abcdefghijklmnopqrstuvwxyz],
                                 [ABCDEFGHIJKLMNOPQRSTUVWXYZ]),
              [1], [Define to 1 if you have the `$1' function.])
  fi
])
m4trace:m4/gnulib-common.m4:1605: -1- AC_DEFUN([gl_CHECK_FUNCS_ANDROID], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([for [$1]],
    [[gl_cv_onwards_func_][$1]],
    [gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([$1], [$2])
         gl_CHECK_FUNCS_DEFAULT_CASE([$1])
       esac
      ])
    ])
  gl_CHECK_FUNCS_SET_RESULTS([$1])
])
m4trace:m4/gnulib-common.m4:1658: -1- AC_DEFUN([gl_CHECK_FUNCS_MACOS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PREPARE_CHECK_FUNCS_MACOS])
  AC_CACHE_CHECK([for [$1]],
    [[gl_cv_onwards_func_][$1]],
    [gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_MACOS([$1], [$2])
         gl_CHECK_FUNCS_DEFAULT_CASE([$1])
       esac
      ])
    ])
  gl_CHECK_FUNCS_SET_RESULTS([$1])
])
m4trace:m4/gnulib-common.m4:1678: -1- AC_DEFUN([gl_CHECK_FUNCS_ANDROID_MACOS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PREPARE_CHECK_FUNCS_MACOS])
  AC_CACHE_CHECK([for [$1]],
    [[gl_cv_onwards_func_][$1]],
    [gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([$1], [$2])
         gl_CHECK_FUNCS_CASE_FOR_MACOS([$1], [$2])
         gl_CHECK_FUNCS_DEFAULT_CASE([$1])
       esac
      ])
    ])
  gl_CHECK_FUNCS_SET_RESULTS([$1])
])
m4trace:m4/gnulib-common.m4:1704: -1- AC_DEFUN([GL_MDA_DEFINES], [
AC_REQUIRE([_GL_MDA_DEFINES])
[$gl_mda_defines]
])
m4trace:m4/gnulib-common.m4:1708: -1- AC_DEFUN([_GL_MDA_DEFINES], [gl_mda_defines='
#if defined _WIN32 && !defined __CYGWIN__
#define access    _access
#define chdir     _chdir
#define chmod     _chmod
#define close     _close
#define creat     _creat
#define dup       _dup
#define dup2      _dup2
#define ecvt      _ecvt
#define execl     _execl
#define execle    _execle
#define execlp    _execlp
#define execv     _execv
#define execve    _execve
#define execvp    _execvp
#define execvpe   _execvpe
#define fcloseall _fcloseall
#define fcvt      _fcvt
#define fdopen    _fdopen
#define fileno    _fileno
#define gcvt      _gcvt
#define getcwd    _getcwd
#define getpid    _getpid
#define getw      _getw
#define isatty    _isatty
#define j0        _j0
#define j1        _j1
#define jn        _jn
#define lfind     _lfind
#define lsearch   _lsearch
#define lseek     _lseek
#define memccpy   _memccpy
#define mkdir     _mkdir
#define mktemp    _mktemp
#define open      _open
#define putenv    _putenv
#define putw      _putw
#define read      _read
#define rmdir     _rmdir
#define strdup    _strdup
#define swab      _swab
#define tempnam   _tempnam
#define tzset     _tzset
#define umask     _umask
#define unlink    _unlink
#define utime     _utime
#define wcsdup    _wcsdup
#define write     _write
#define y0        _y0
#define y1        _y1
#define yn        _yn
#endif
'
])
m4trace:m4/gnulib-comp.m4:34: -1- AC_DEFUN([gl_EARLY], [
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable

  # Pre-early section.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_PROG_AR_RANLIB])

  # Code from module absolute-header:
  # Code from module access:
  # Code from module alignasof:
  # Code from module alloca-opt:
  # Code from module assert-h:
  # Code from module assure:
  # Code from module at-internal:
  # Code from module attribute:
  # Code from module basename-lgpl:
  # Code from module binary-io:
  # Code from module bitrotate:
  # Code from module builtin-expect:
  # Code from module c99:
  # Code from module calloc-gnu:
  # Code from module calloc-posix:
  # Code from module canonicalize:
  # Code from module chdir:
  # Code from module chdir-long:
  # Code from module cloexec:
  # Code from module close:
  # Code from module closedir:
  # Code from module concat-filename:
  # Code from module connect:
  # Code from module d-ino:
  # Code from module dirent:
  # Code from module dirfd:
  # Code from module double-slash-root:
  # Code from module dup:
  # Code from module dup2:
  # Code from module environ:
  # Code from module errno:
  # Code from module error:
  # Code from module error-h:
  # Code from module exitfail:
  # Code from module extensions:
  # This is actually already done in the pre-early phase.
  # AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  # Code from module extensions-aix:
  AC_REQUIRE([gl_USE_AIX_EXTENSIONS])
  # Code from module extern-inline:
  # Code from module fatal-signal:
  # Code from module fchdir:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fd-hook:
  # Code from module fd-safer-flag:
  # Code from module fdopendir:
  # Code from module file-set:
  # Code from module filename:
  # Code from module filenamecat-lgpl:
  # Code from module findprog-in:
  # Code from module free-posix:
  # Code from module fstat:
  # Code from module fstatat:
  # Code from module ftruncate:
  # Code from module full-read:
  # Code from module full-write:
  # Code from module gen-header:
  # Code from module getcwd:
  # Code from module getcwd-lgpl:
  # Code from module getdtablesize:
  # Code from module getprogname:
  # Code from module gettext-h:
  # Code from module glibc-internal/scratch_buffer:
  # Code from module hash:
  # Code from module hash-pjw:
  # Code from module hash-triple-simple:
  # Code from module ialloc:
  # Code from module idx:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes-incomplete:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  # Code from module libc-config:
  # Code from module limits-h:
  # Code from module lock:
  # Code from module lstat:
  # Code from module malloc-gnu:
  # Code from module malloc-posix:
  # Code from module malloca:
  # Code from module memchr:
  # Code from module mempcpy:
  # Code from module memrchr:
  # Code from module minmax:
  # Code from module mkfifo:
  # Code from module msvc-inval:
  # Code from module msvc-nothrow:
  # Code from module multiarch:
  # Code from module nocrash:
  # Code from module once:
  # Code from module open:
  # Code from module openat:
  # Code from module openat-die:
  # Code from module openat-h:
  # Code from module opendir:
  # Code from module passfd:
  # Code from module pathmax:
  # Code from module pipe-filter-ii:
  # Code from module pipe-posix:
  # Code from module pipe2:
  # Code from module pipe2-safer:
  # Code from module posix_spawn:
  # Code from module posix_spawn-internal:
  # Code from module posix_spawn_file_actions_addchdir:
  # Code from module posix_spawn_file_actions_addclose:
  # Code from module posix_spawn_file_actions_adddup2:
  # Code from module posix_spawn_file_actions_addopen:
  # Code from module posix_spawn_file_actions_destroy:
  # Code from module posix_spawn_file_actions_init:
  # Code from module posix_spawnattr_destroy:
  # Code from module posix_spawnattr_init:
  # Code from module posix_spawnattr_setflags:
  # Code from module posix_spawnattr_setpgroup:
  # Code from module posix_spawnattr_setsigmask:
  # Code from module posix_spawnp:
  # Code from module pthread-h:
  gl_ANYTHREADLIB_EARLY
  # Code from module pthread-once:
  # Code from module raise:
  # Code from module rawmemchr:
  # Code from module read:
  # Code from module readdir:
  # Code from module readlink:
  # Code from module realloc-gnu:
  # Code from module realloc-posix:
  # Code from module reallocarray:
  # Code from module rewinddir:
  # Code from module safe-read:
  # Code from module safe-write:
  # Code from module same-inode:
  # Code from module save-cwd:
  # Code from module sched:
  # Code from module sh-filename:
  # Code from module sigaction:
  # Code from module signal-h:
  # Code from module sigprocmask:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module socket:
  # Code from module socketlib:
  # Code from module sockets:
  # Code from module socklen:
  # Code from module spawn:
  # Code from module spawn-pipe:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module std-gnu11:
  # Code from module stdbool:
  # Code from module stdckdint:
  # Code from module stddef:
  # Code from module stdint:
  # Code from module stdio:
  gl_STDIO_H_EARLY
  # Code from module stdlib:
  # Code from module stpcpy:
  # Code from module strchrnul:
  # Code from module strdup-posix:
  # Code from module strerror:
  # Code from module strerror-override:
  # Code from module string:
  # Code from module sys_select:
  # Code from module sys_socket:
  # Code from module sys_stat:
  # Code from module sys_time:
  # Code from module sys_types:
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  # Code from module sys_uio:
  # Code from module sys_wait:
  # Code from module thread-optim:
  # Code from module threadlib:
  gl_THREADLIB_EARLY
  # Code from module time-h:
  # Code from module unistd:
  # Code from module unistd-safer:
  # Code from module vararrays:
  # Code from module verify:
  # Code from module wait-process:
  # Code from module waitpid:
  # Code from module wchar:
  # Code from module windows-mutex:
  # Code from module windows-once:
  # Code from module windows-recmutex:
  # Code from module windows-rwlock:
  # Code from module windows-spawn:
  # Code from module write:
  # Code from module xalloc:
  # Code from module xalloc-die:
  # Code from module xalloc-oversized:
])
m4trace:m4/gnulib-comp.m4:241: -1- AC_DEFUN([gl_INIT], [
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gl])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='lib'
  gl_source_base_prefix=
  gl_FUNC_ACCESS
  gl_CONDITIONAL([GL_COND_OBJ_ACCESS], [test $REPLACE_ACCESS = 1])
  gl_UNISTD_MODULE_INDICATOR([access])
  gl_ALIGNASOF
  gl_FUNC_ALLOCA
  gl_CONDITIONAL_HEADER([alloca.h])
  AC_PROG_MKDIR_P
  gl_ASSERT_H
  gl_CONDITIONAL_HEADER([assert.h])
  AC_PROG_MKDIR_P
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl___BUILTIN_EXPECT
  gl_FUNC_CALLOC_GNU
  if test $REPLACE_CALLOC_FOR_CALLOC_GNU = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
  gl_FUNC_CALLOC_POSIX
  if test $REPLACE_CALLOC_FOR_CALLOC_POSIX = 1; then
    AC_LIBOBJ([calloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([calloc-posix])
  gl_FUNC_CANONICALIZE_FILENAME_MODE
  gl_MODULE_INDICATOR([canonicalize])
  gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
  gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
  gl_UNISTD_MODULE_INDICATOR([chdir])
  gl_FUNC_CHDIR_LONG
  gl_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG],
                 [test $gl_cv_have_unlimited_file_name_length = no])
  AM_COND_IF([GL_COND_OBJ_CHDIR_LONG], [
    gl_PREREQ_CHDIR_LONG
  ])
  gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
  gl_FUNC_CLOSE
  gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
  gl_UNISTD_MODULE_INDICATOR([close])
  gl_MODULE_INDICATOR([close])
  gl_FUNC_CLOSEDIR
  gl_CONDITIONAL([GL_COND_OBJ_CLOSEDIR],
                 [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([closedir])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
  gl_SYS_SOCKET_MODULE_INDICATOR([connect])
  gl_MODULE_INDICATOR([connect])
  gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
  gl_DIRENT_H
  gl_DIRENT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_DIRFD
  gl_CONDITIONAL([GL_COND_OBJ_DIRFD],
                 [test $HAVE_DIRFD = 0 || test $REPLACE_DIRFD = 1])
  AM_COND_IF([GL_COND_OBJ_DIRFD], [
    gl_PREREQ_DIRFD
  ])
  gl_DIRENT_MODULE_INDICATOR([dirfd])
  gl_DOUBLE_SLASH_ROOT
  gl_FUNC_DUP
  gl_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
  AM_COND_IF([GL_COND_OBJ_DUP], [
    gl_PREREQ_DUP
  ])
  gl_UNISTD_MODULE_INDICATOR([dup])
  gl_FUNC_DUP2
  gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
  AM_COND_IF([GL_COND_OBJ_DUP2], [
    gl_PREREQ_DUP2
  ])
  gl_UNISTD_MODULE_INDICATOR([dup2])
  gl_ENVIRON
  gl_UNISTD_MODULE_INDICATOR([environ])
  gl_HEADER_ERRNO_H
  gl_CONDITIONAL_HEADER([errno.h])
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_ERROR_H])
  gl_ERROR
  gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test $COMPILE_ERROR_C = 1])
  AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
  m4_ifdef([AM_XGETTEXT_OPTION],
    [AM_][XGETTEXT_OPTION([--flag=error:3:c-format])
     AM_][XGETTEXT_OPTION([--flag=error_at_line:5:c-format])])
  gl_ERROR_H
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FATAL_SIGNAL
  gl_FUNC_FCHDIR
  gl_CONDITIONAL([GL_COND_OBJ_FCHDIR],
                 [test $HAVE_FCHDIR = 0 || test $REPLACE_FCHDIR = 1])
  AM_COND_IF([GL_COND_OBJ_FCHDIR], [
    gl_PREREQ_FCHDIR
  ])
  gl_UNISTD_MODULE_INDICATOR([fchdir])
  gl_FUNC_FCNTL
  gl_CONDITIONAL([GL_COND_OBJ_FCNTL],
                 [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
  gl_FCNTL_MODULE_INDICATOR([fcntl])
  gl_FCNTL_H
  gl_FCNTL_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_MODULE_INDICATOR([fd-safer-flag])
  gl_FUNC_FDOPENDIR
  gl_CONDITIONAL([GL_COND_OBJ_FDOPENDIR],
                 [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([fdopendir])
  gl_MODULE_INDICATOR([fdopendir])
  gl_FILE_NAME_CONCAT_LGPL
  gl_FINDPROG_IN
  gl_FUNC_FREE
  gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
  AM_COND_IF([GL_COND_OBJ_FREE], [
    gl_PREREQ_FREE
  ])
  gl_STDLIB_MODULE_INDICATOR([free-posix])
  gl_FUNC_FSTAT
  gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
  AM_COND_IF([GL_COND_OBJ_FSTAT], [
    case "$host_os" in
      mingw* | windows*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([fstat])
  gl_MODULE_INDICATOR([fstat])
  gl_FUNC_FSTATAT
  gl_CONDITIONAL([GL_COND_OBJ_FSTATAT],
                 [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
  gl_SYS_STAT_MODULE_INDICATOR([fstatat])
  gl_MODULE_INDICATOR([fstatat])
  gl_FUNC_FTRUNCATE
  gl_CONDITIONAL([GL_COND_OBJ_FTRUNCATE],
                 [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
  AM_COND_IF([GL_COND_OBJ_FTRUNCATE], [
    gl_PREREQ_FTRUNCATE
  ])
  gl_UNISTD_MODULE_INDICATOR([ftruncate])
  gl_FUNC_GETCWD
  gl_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
  AM_COND_IF([GL_COND_OBJ_GETCWD], [
    gl_PREREQ_GETCWD
  ])
  gl_MODULE_INDICATOR([getcwd])
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETCWD_LGPL
  gl_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
  gl_UNISTD_MODULE_INDICATOR([getcwd])
  gl_FUNC_GETDTABLESIZE
  gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE],
                 [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
  AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
    gl_PREREQ_GETDTABLESIZE
  ])
  gl_UNISTD_MODULE_INDICATOR([getdtablesize])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_FUNC_GETPROGNAME
  gl_CONDITIONAL([GL_COND_OBJ_GETPROGNAME],
                 [test $HAVE_GETPROGNAME = 0 || test $REPLACE_GETPROGNAME = 1])
  AM_COND_IF([GL_COND_OBJ_GETPROGNAME], [
    gl_PREREQ_GETPROGNAME
  ])
  gl_STDLIB_MODULE_INDICATOR([getprogname])
  AC_SUBST([LIBINTL])
  AC_SUBST([LTLIBINTL])
  AC_PROG_MKDIR_P
  gl_INTTYPES_INCOMPLETE
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([gl_LARGEFILE])
  gl___INLINE
  gl_LIMITS_H
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_LOCK
  gl_MODULE_INDICATOR([lock])
  gl_FUNC_LSTAT
  gl_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
  AM_COND_IF([GL_COND_OBJ_LSTAT], [
    gl_PREREQ_LSTAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([lstat])
  gl_MODULE_INDICATOR([lstat])
  gl_FUNC_MALLOC_GNU
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
    AC_LIBOBJ([malloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([malloc-posix])
  gl_MALLOCA
  gl_FUNC_MEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
  AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([memchr])
  gl_FUNC_MEMPCPY
  gl_CONDITIONAL([GL_COND_OBJ_MEMPCPY],
                 [test $HAVE_MEMPCPY = 0 || test $REPLACE_MEMPCPY = 1])
  AM_COND_IF([GL_COND_OBJ_MEMPCPY], [
    gl_PREREQ_MEMPCPY
  ])
  gl_STRING_MODULE_INDICATOR([mempcpy])
  gl_FUNC_MEMRCHR
  gl_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
  AM_COND_IF([GL_COND_OBJ_MEMRCHR], [
    gl_PREREQ_MEMRCHR
  ])
  gl_STRING_MODULE_INDICATOR([memrchr])
  gl_MINMAX
  gl_FUNC_MKFIFO
  gl_CONDITIONAL([GL_COND_OBJ_MKFIFO],
                 [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
  gl_UNISTD_MODULE_INDICATOR([mkfifo])
  AC_REQUIRE([gl_MSVC_INVAL])
  gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL],
                 [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
  AC_REQUIRE([gl_MSVC_NOTHROW])
  gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW],
                 [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
  gl_MODULE_INDICATOR([msvc-nothrow])
  gl_MULTIARCH
  gl_ONCE
  gl_FUNC_OPEN
  gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
  AM_COND_IF([GL_COND_OBJ_OPEN], [
    gl_PREREQ_OPEN
  ])
  gl_FCNTL_MODULE_INDICATOR([open])
  gl_FUNC_OPENAT
  gl_CONDITIONAL([GL_COND_OBJ_OPENAT],
                 [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
  AM_COND_IF([GL_COND_OBJ_OPENAT], [
    gl_PREREQ_OPENAT
  ])
  gl_MODULE_INDICATOR([openat]) dnl for lib/getcwd.c
  gl_FCNTL_MODULE_INDICATOR([openat])
  gl_FUNC_OPENDIR
  gl_CONDITIONAL([GL_COND_OBJ_OPENDIR],
                 [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([opendir])
  gl_PASSFD
  gl_PATHMAX
  AC_CHECK_FUNCS_ONCE([select])
  gl_FUNC_PIPE
  gl_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
  gl_UNISTD_MODULE_INDICATOR([pipe])
  gl_FUNC_PIPE2
  gl_UNISTD_MODULE_INDICATOR([pipe2])
  gl_MODULE_INDICATOR([pipe2-safer])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNI],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  AM_COND_IF([GL_COND_OBJ_SPAWNI], [
    gl_PREREQ_POSIX_SPAWN_INTERNAL
  ])
  gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 0 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addchdir])
  gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addclose])
  gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDDUP2],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2 = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_adddup2])
  gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDOPEN],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addopen])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_DESTROY],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_destroy])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_INIT],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_init])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_DESTROY],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_destroy])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_INIT],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_init])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETFLAGS],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setflags])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETPGROUP],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setpgroup])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETSIGMASK],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setsigmask])
  gl_POSIX_SPAWN
  gl_CONDITIONAL([GL_COND_OBJ_SPAWNP],
                 [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
  gl_SPAWN_MODULE_INDICATOR([posix_spawnp])
  gl_PTHREAD_H
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_PTHREAD_ONCE
  gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_ONCE],
                 [test $HAVE_PTHREAD_ONCE = 0 || test $REPLACE_PTHREAD_ONCE = 1])
  gl_PTHREAD_MODULE_INDICATOR([pthread-once])
  gl_FUNC_RAISE
  gl_CONDITIONAL([GL_COND_OBJ_RAISE],
                 [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
  AM_COND_IF([GL_COND_OBJ_RAISE], [
    gl_PREREQ_RAISE
  ])
  gl_SIGNAL_MODULE_INDICATOR([raise])
  gl_FUNC_RAWMEMCHR
  gl_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
  AM_COND_IF([GL_COND_OBJ_RAWMEMCHR], [
    gl_PREREQ_RAWMEMCHR
  ])
  gl_STRING_MODULE_INDICATOR([rawmemchr])
  gl_FUNC_READ
  gl_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
  AM_COND_IF([GL_COND_OBJ_READ], [
    gl_PREREQ_READ
  ])
  gl_UNISTD_MODULE_INDICATOR([read])
  gl_FUNC_READDIR
  gl_CONDITIONAL([GL_COND_OBJ_READDIR],
                 [test $HAVE_READDIR = 0 || test $REPLACE_READDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([readdir])
  gl_FUNC_READLINK
  gl_CONDITIONAL([GL_COND_OBJ_READLINK],
                 [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
  AM_COND_IF([GL_COND_OBJ_READLINK], [
    gl_PREREQ_READLINK
  ])
  gl_UNISTD_MODULE_INDICATOR([readlink])
  gl_FUNC_REALLOC_GNU
  if test $REPLACE_REALLOC_FOR_REALLOC_GNU = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-gnu])
  gl_FUNC_REALLOC_POSIX
  if test $REPLACE_REALLOC_FOR_REALLOC_POSIX = 1; then
    AC_LIBOBJ([realloc])
  fi
  gl_STDLIB_MODULE_INDICATOR([realloc-posix])
  gl_FUNC_REALLOCARRAY
  gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY],
                 [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
  AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
  gl_MODULE_INDICATOR([reallocarray])
  gl_STDLIB_MODULE_INDICATOR([reallocarray])
  gl_FUNC_REWINDDIR
  gl_CONDITIONAL([GL_COND_OBJ_REWINDDIR],
                 [test $HAVE_REWINDDIR = 0 || test $REPLACE_REWINDDIR = 1])
  gl_DIRENT_MODULE_INDICATOR([rewinddir])
  gl_PREREQ_SAFE_READ
  gl_PREREQ_SAFE_WRITE
  gl_SAVE_CWD
  gl_SCHED_H
  gl_SCHED_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SH_FILENAME
  gl_SIGACTION
  gl_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
  AM_COND_IF([GL_COND_OBJ_SIGACTION], [
    gl_PREREQ_SIGACTION
  ])
  gl_SIGNAL_MODULE_INDICATOR([sigaction])
  gl_SIGNAL_H
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SIGNALBLOCKING
  gl_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
  AM_COND_IF([GL_COND_OBJ_SIGPROCMASK], [
    gl_PREREQ_SIGPROCMASK
  ])
  gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
  AC_REQUIRE([gl_SYS_SOCKET_H])
  gl_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
  # When this module is used, sockets may actually occur as file descriptors,
  # hence it is worth warning if the modules 'close' and 'ioctl' are not used.
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [gl_UNISTD_H_REQUIRE_DEFAULTS])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [gl_SYS_IOCTL_H_REQUIRE_DEFAULTS])
  AC_REQUIRE([gl_PREREQ_SYS_H_WINSOCK2])
  if test "$ac_cv_header_winsock2_h" = yes; then
    UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=1
  fi
  gl_SYS_SOCKET_MODULE_INDICATOR([socket])
  gl_MODULE_INDICATOR([socket])
  AC_REQUIRE([gl_SOCKETLIB])
  AC_REQUIRE([gl_SOCKETS])
  gl_TYPE_SOCKLEN_T
  gl_SPAWN_H
  gl_SPAWN_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SPAWN_PIPE
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_OS2_SPAWN],
                 [case "$host_os" in os2*) true;; *) false;; esac])
  gt_TYPE_SSIZE_T
  gl_FUNC_STAT
  gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
  AM_COND_IF([GL_COND_OBJ_STAT], [
    case "$host_os" in
      mingw* | windows*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  ])
  gl_SYS_STAT_MODULE_INDICATOR([stat])
  gl_MODULE_INDICATOR([stat])
  gl_STAT_TIME
  gl_STAT_BIRTHTIME
  gl_C_BOOL
  AC_CHECK_HEADERS_ONCE([stdckdint.h])
  if test $ac_cv_header_stdckdint_h = yes; then
    GL_GENERATE_STDCKDINT_H=false
  else
    GL_GENERATE_STDCKDINT_H=true
  fi
  gl_CONDITIONAL_HEADER([stdckdint.h])
  AC_PROG_MKDIR_P
  gl_STDDEF_H
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_CONDITIONAL_HEADER([stddef.h])
  AC_PROG_MKDIR_P
  gl_STDINT_H
  gl_CONDITIONAL_HEADER([stdint.h])
  dnl Because of gl_REPLACE_LIMITS_H:
  gl_CONDITIONAL_HEADER([limits.h])
  AC_PROG_MKDIR_P
  gl_STDIO_H
  gl_STDIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
  gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fscanf])
  gl_MODULE_INDICATOR([fscanf])
  gl_STDIO_MODULE_INDICATOR([scanf])
  gl_MODULE_INDICATOR([scanf])
  gl_STDIO_MODULE_INDICATOR([fgetc])
  gl_STDIO_MODULE_INDICATOR([getc])
  gl_STDIO_MODULE_INDICATOR([getchar])
  gl_STDIO_MODULE_INDICATOR([fgets])
  gl_STDIO_MODULE_INDICATOR([fread])
  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  gl_STDIO_MODULE_INDICATOR([fprintf])
  gl_STDIO_MODULE_INDICATOR([printf])
  gl_STDIO_MODULE_INDICATOR([vfprintf])
  gl_STDIO_MODULE_INDICATOR([vprintf])
  gl_STDIO_MODULE_INDICATOR([fputc])
  gl_STDIO_MODULE_INDICATOR([putc])
  gl_STDIO_MODULE_INDICATOR([putchar])
  gl_STDIO_MODULE_INDICATOR([fputs])
  gl_STDIO_MODULE_INDICATOR([puts])
  gl_STDIO_MODULE_INDICATOR([fwrite])
  gl_STDLIB_H
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_FUNC_STPCPY
  gl_CONDITIONAL([GL_COND_OBJ_STPCPY],
                 [test $HAVE_STPCPY = 0 || test $REPLACE_STPCPY = 1])
  AM_COND_IF([GL_COND_OBJ_STPCPY], [
    gl_PREREQ_STPCPY
  ])
  gl_STRING_MODULE_INDICATOR([stpcpy])
  gl_FUNC_STRCHRNUL
  gl_CONDITIONAL([GL_COND_OBJ_STRCHRNUL],
                 [test $HAVE_STRCHRNUL = 0 || test $REPLACE_STRCHRNUL = 1])
  AM_COND_IF([GL_COND_OBJ_STRCHRNUL], [
    gl_PREREQ_STRCHRNUL
  ])
  gl_STRING_MODULE_INDICATOR([strchrnul])
  gl_FUNC_STRDUP_POSIX
  gl_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
  AM_COND_IF([GL_COND_OBJ_STRDUP], [
    gl_PREREQ_STRDUP
  ])
  gl_STRING_MODULE_INDICATOR([strdup])
  gl_FUNC_STRERROR
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
  gl_MODULE_INDICATOR([strerror])
  gl_STRING_MODULE_INDICATOR([strerror])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE],
                 [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
  AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
    gl_PREREQ_SYS_H_WINSOCK2
  ])
  gl_STRING_H
  gl_STRING_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SELECT_H
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_SOCKET_H
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_STAT_H
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TIME_H
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_TYPES_H
  gl_SYS_TYPES_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_UIO_H
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_SYS_WAIT_H
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_CHECK_HEADERS([sys/single_threaded.h])
  AC_REQUIRE([gl_THREADLIB])
  gl_TIME_H
  gl_TIME_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_H
  gl_UNISTD_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  gl_UNISTD_SAFER
  AC_C_VARARRAYS
  gl_WAIT_PROCESS
  gl_FUNC_WAITPID
  gl_CONDITIONAL([GL_COND_OBJ_WAITPID], [test $HAVE_WAITPID = 0])
  gl_SYS_WAIT_MODULE_INDICATOR([waitpid])
  gl_WCHAR_H
  gl_WCHAR_H_REQUIRE_DEFAULTS
  AC_PROG_MKDIR_P
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX],
                 [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE],
                 [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX],
                 [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK],
                 [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
  AC_REQUIRE([AC_CANONICAL_HOST])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_PATH],
                 [case "$host_os" in cygwin* | mingw* | windows*) true;; *) false;; esac])
  gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_SPAWN],
                 [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
  gl_FUNC_WRITE
  gl_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
  AM_COND_IF([GL_COND_OBJ_WRITE], [
    gl_PREREQ_WRITE
  ])
  gl_UNISTD_MODULE_INDICATOR([write])
  gl_XALLOC
  gl_MODULE_INDICATOR([xalloc])
  gl_MODULE_INDICATOR([xalloc-die])
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    gl_libobjdeps=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gl_libobjdeps="$gl_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
    AC_SUBST([gl_LIBOBJDEPS], [$gl_libobjdeps])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  m4_pushdef([GL_MACRO_PREFIX], [gltests])
  m4_pushdef([GL_MODULE_INDICATOR_PREFIX], [GL])
  gl_COMMON
  gl_source_base='tests'
  gl_source_base_prefix=
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([GL_MODULE_INDICATOR_PREFIX])
  m4_popdef([GL_MACRO_PREFIX])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    gltests_libobjdeps=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
changequote(,)dnl
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      sed_dirname1='s,//*,/,g'
      sed_dirname2='s,\(.\)/$,\1,'
      sed_dirname3='s,^[^/]*$,.,'
      sed_dirname4='s,\(.\)/[^/]*$,\1,'
      sed_basename1='s,.*/,,'
changequote([, ])dnl
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
        i_dir=`echo "$i" | sed -e "$sed_dirname1" -e "$sed_dirname2" -e "$sed_dirname3" -e "$sed_dirname4"`
        i_base=`echo "$i" | sed -e "$sed_basename1"`
        gltests_libobjdeps="$gltests_libobjdeps $i_dir/\$(DEPDIR)/$i_base.Po"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
    AC_SUBST([gltests_LIBOBJDEPS], [$gltests_libobjdeps])
  ])
  AC_REQUIRE([gl_CC_GNULIB_WARNINGS])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])
m4trace:m4/gnulib-comp.m4:955: -1- AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:962: -1- AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:971: -1- AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:982: -1- AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:989: -1- AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:998: -1- AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:1009: -1- AC_DEFUN([gl_FILE_LIST], [
  lib/_Noreturn.h
  lib/access.c
  lib/alloca.in.h
  lib/arg-nonnull.h
  lib/assert.in.h
  lib/assure.h
  lib/at-func.c
  lib/attribute.h
  lib/basename-lgpl.c
  lib/basename-lgpl.h
  lib/binary-io.c
  lib/binary-io.h
  lib/bitrotate.c
  lib/bitrotate.h
  lib/c++defs.h
  lib/calloc.c
  lib/canonicalize.c
  lib/canonicalize.h
  lib/cdefs.h
  lib/chdir-long.c
  lib/chdir-long.h
  lib/cloexec.c
  lib/cloexec.h
  lib/close.c
  lib/closedir.c
  lib/concat-filename.c
  lib/concat-filename.h
  lib/connect.c
  lib/dirent-private.h
  lib/dirent.in.h
  lib/dirfd.c
  lib/dup-safer-flag.c
  lib/dup-safer.c
  lib/dup.c
  lib/dup2.c
  lib/errno.in.h
  lib/error.c
  lib/error.in.h
  lib/exitfail.c
  lib/exitfail.h
  lib/fatal-signal.c
  lib/fatal-signal.h
  lib/fchdir.c
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fd-hook.c
  lib/fd-hook.h
  lib/fd-safer-flag.c
  lib/fd-safer.c
  lib/fdopendir.c
  lib/file-set.c
  lib/file-set.h
  lib/filename.h
  lib/filenamecat-lgpl.c
  lib/filenamecat.h
  lib/findprog-in.c
  lib/findprog.h
  lib/free.c
  lib/fstat.c
  lib/fstatat.c
  lib/ftruncate.c
  lib/full-read.c
  lib/full-read.h
  lib/full-write.c
  lib/full-write.h
  lib/getcwd-lgpl.c
  lib/getcwd.c
  lib/getdtablesize.c
  lib/getprogname.c
  lib/getprogname.h
  lib/gettext.h
  lib/glthread/lock.c
  lib/glthread/lock.h
  lib/glthread/once.c
  lib/glthread/once.h
  lib/glthread/threadlib.c
  lib/hash-pjw.c
  lib/hash-pjw.h
  lib/hash-triple-simple.c
  lib/hash-triple.h
  lib/hash.c
  lib/hash.h
  lib/ialloc.c
  lib/ialloc.h
  lib/idx.h
  lib/intprops-internal.h
  lib/intprops.h
  lib/inttypes.in.h
  lib/libc-config.h
  lib/limits.in.h
  lib/lstat.c
  lib/malloc.c
  lib/malloc/scratch_buffer.h
  lib/malloc/scratch_buffer_grow.c
  lib/malloc/scratch_buffer_grow_preserve.c
  lib/malloc/scratch_buffer_set_array_size.c
  lib/malloca.c
  lib/malloca.h
  lib/memchr.c
  lib/memchr.valgrind
  lib/mempcpy.c
  lib/memrchr.c
  lib/minmax.h
  lib/mkfifo.c
  lib/msvc-inval.c
  lib/msvc-inval.h
  lib/msvc-nothrow.c
  lib/msvc-nothrow.h
  lib/open.c
  lib/openat-die.c
  lib/openat-priv.h
  lib/openat-proc.c
  lib/openat.c
  lib/openat.h
  lib/opendir.c
  lib/os2-spawn.c
  lib/os2-spawn.h
  lib/passfd.c
  lib/passfd.h
  lib/pathmax.h
  lib/pipe-filter-aux.c
  lib/pipe-filter-aux.h
  lib/pipe-filter-ii.c
  lib/pipe-filter.h
  lib/pipe-safer.c
  lib/pipe.c
  lib/pipe2-safer.c
  lib/pipe2.c
  lib/pthread-once.c
  lib/pthread.in.h
  lib/raise.c
  lib/rawmemchr.c
  lib/rawmemchr.valgrind
  lib/read.c
  lib/readdir.c
  lib/readlink.c
  lib/realloc.c
  lib/reallocarray.c
  lib/rewinddir.c
  lib/safe-read.c
  lib/safe-read.h
  lib/safe-write.c
  lib/safe-write.h
  lib/same-inode.c
  lib/same-inode.h
  lib/save-cwd.c
  lib/save-cwd.h
  lib/sched.in.h
  lib/scratch_buffer.h
  lib/sig-handler.c
  lib/sig-handler.h
  lib/sigaction.c
  lib/signal.in.h
  lib/sigprocmask.c
  lib/socket.c
  lib/sockets.c
  lib/sockets.h
  lib/spawn-pipe.c
  lib/spawn-pipe.h
  lib/spawn.c
  lib/spawn.in.h
  lib/spawn_faction_addchdir.c
  lib/spawn_faction_addclose.c
  lib/spawn_faction_adddup2.c
  lib/spawn_faction_addopen.c
  lib/spawn_faction_destroy.c
  lib/spawn_faction_init.c
  lib/spawn_int.h
  lib/spawnattr_destroy.c
  lib/spawnattr_init.c
  lib/spawnattr_setflags.c
  lib/spawnattr_setpgroup.c
  lib/spawnattr_setsigmask.c
  lib/spawni.c
  lib/spawnp.c
  lib/stat-time.c
  lib/stat-time.h
  lib/stat-w32.c
  lib/stat-w32.h
  lib/stat.c
  lib/stdckdint.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio-read.c
  lib/stdio-write.c
  lib/stdio.in.h
  lib/stdlib.in.h
  lib/stpcpy.c
  lib/strchrnul.c
  lib/strchrnul.valgrind
  lib/strdup.c
  lib/strerror-override.c
  lib/strerror-override.h
  lib/strerror.c
  lib/string.in.h
  lib/sys-limits.h
  lib/sys_select.in.h
  lib/sys_socket.c
  lib/sys_socket.in.h
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/sys_types.in.h
  lib/sys_uio.in.h
  lib/sys_wait.in.h
  lib/thread-optim.h
  lib/time.in.h
  lib/unistd--.h
  lib/unistd-safer.h
  lib/unistd.c
  lib/unistd.in.h
  lib/verify.h
  lib/w32sock.h
  lib/wait-process.c
  lib/wait-process.h
  lib/waitpid.c
  lib/warn-on-use.h
  lib/wchar.in.h
  lib/windows-initguard.h
  lib/windows-mutex.c
  lib/windows-mutex.h
  lib/windows-once.c
  lib/windows-once.h
  lib/windows-path.c
  lib/windows-path.h
  lib/windows-recmutex.c
  lib/windows-recmutex.h
  lib/windows-rwlock.c
  lib/windows-rwlock.h
  lib/windows-spawn.c
  lib/windows-spawn.h
  lib/write.c
  lib/xalloc-die.c
  lib/xalloc-oversized.h
  lib/xalloc.h
  lib/xmalloc.c
  m4/00gnulib.m4
  m4/__inline.m4
  m4/absolute-header.m4
  m4/access.m4
  m4/alloca.m4
  m4/assert_h.m4
  m4/builtin-expect.m4
  m4/c-bool.m4
  m4/calloc.m4
  m4/canonicalize.m4
  m4/chdir-long.m4
  m4/close.m4
  m4/closedir.m4
  m4/codeset.m4
  m4/d-ino.m4
  m4/dirent_h.m4
  m4/dirfd.m4
  m4/double-slash-root.m4
  m4/dup.m4
  m4/dup2.m4
  m4/eaccess.m4
  m4/eealloc.m4
  m4/environ.m4
  m4/errno_h.m4
  m4/error.m4
  m4/error_h.m4
  m4/extensions-aix.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/fatal-signal.m4
  m4/fchdir.m4
  m4/fcntl-o.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/fdopendir.m4
  m4/filenamecat.m4
  m4/findprog-in.m4
  m4/free.m4
  m4/fstat.m4
  m4/fstatat.m4
  m4/ftruncate.m4
  m4/getcwd-abort-bug.m4
  m4/getcwd-path-max.m4
  m4/getcwd.m4
  m4/getdtablesize.m4
  m4/getprogname.m4
  m4/gnulib-common.m4
  m4/include_next.m4
  m4/inttypes.m4
  m4/largefile.m4
  m4/limits-h.m4
  m4/locale-en.m4
  m4/lock.m4
  m4/lstat.m4
  m4/malloc.m4
  m4/malloca.m4
  m4/memchr.m4
  m4/mempcpy.m4
  m4/memrchr.m4
  m4/minmax.m4
  m4/mkfifo.m4
  m4/mmap-anon.m4
  m4/mode_t.m4
  m4/msvc-inval.m4
  m4/msvc-nothrow.m4
  m4/multiarch.m4
  m4/musl.m4
  m4/nocrash.m4
  m4/off64_t.m4
  m4/off_t.m4
  m4/once.m4
  m4/open-cloexec.m4
  m4/open-slash.m4
  m4/open.m4
  m4/openat.m4
  m4/opendir.m4
  m4/passfd.m4
  m4/pathmax.m4
  m4/pid_t.m4
  m4/pipe.m4
  m4/pipe2.m4
  m4/posix_spawn.m4
  m4/posix_spawn_faction_addchdir.m4
  m4/pthread-once.m4
  m4/pthread-spin.m4
  m4/pthread_h.m4
  m4/pthread_rwlock_rdlock.m4
  m4/raise.m4
  m4/rawmemchr.m4
  m4/read.m4
  m4/readdir.m4
  m4/readlink.m4
  m4/realloc.m4
  m4/reallocarray.m4
  m4/rewinddir.m4
  m4/safe-read.m4
  m4/safe-write.m4
  m4/save-cwd.m4
  m4/sched_h.m4
  m4/sh-filename.m4
  m4/sig_atomic_t.m4
  m4/sigaction.m4
  m4/signal_h.m4
  m4/signalblocking.m4
  m4/socketlib.m4
  m4/sockets.m4
  m4/socklen.m4
  m4/sockpfaf.m4
  m4/spawn-pipe.m4
  m4/spawn_h.m4
  m4/ssize_t.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/std-gnu11.m4
  m4/stdalign.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/stpcpy.m4
  m4/strchrnul.m4
  m4/strdup.m4
  m4/strerror.m4
  m4/string_h.m4
  m4/sys_cdefs_h.m4
  m4/sys_select_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/sys_types_h.m4
  m4/sys_uio_h.m4
  m4/sys_wait_h.m4
  m4/threadlib.m4
  m4/time_h.m4
  m4/unistd-safer.m4
  m4/unistd_h.m4
  m4/vararrays.m4
  m4/wait-process.m4
  m4/waitpid.m4
  m4/warn-on-use.m4
  m4/wchar_h.m4
  m4/wint_t.m4
  m4/write.m4
  m4/xalloc.m4
  m4/zzgnulib.m4
])
m4trace:m4/include_next.m4:38: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_saved_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_saved_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_saved_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_saved_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])

  dnl HP NonStop systems, which define __TANDEM, limit the line length
  dnl after including some system header files.
  AC_CACHE_CHECK([whether source code line length is unlimited],
    [gl_cv_source_line_length_unlimited],
    [AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_source_line_length_unlimited=no],
       [gl_cv_source_line_length_unlimited=yes])
    ])
  if test $gl_cv_source_line_length_unlimited = no; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:158: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:168: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:174: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         [gl_next_header],
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET([gl_header_exists]) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
          gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
          AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
          AS_VAR_SET([gl_next_header], ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET([gl_next_header], ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET([gl_next_header])])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET([gl_next_header])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/inttypes.m4:12: -1- AC_DEFUN_ONCE([gl_INTTYPES_H], [
  AC_REQUIRE([gl_INTTYPES_INCOMPLETE])
  gl_INTTYPES_PRI_SCN
])
m4trace:m4/inttypes.m4:18: -1- AC_DEFUN_ONCE([gl_INTTYPES_INCOMPLETE], [
  AC_REQUIRE([gl_STDINT_H])
  AC_CHECK_HEADERS_ONCE([inttypes.h])

  dnl Override <inttypes.h> always, so that the portability warnings work.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([inttypes.h])

  AC_REQUIRE([gl_MULTIARCH])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/inttypes.m4:38: -1- AC_DEFUN([gl_INTTYPES_PRI_SCN], [
  PRIPTR_PREFIX=
  if $GL_GENERATE_STDINT_H; then
    dnl Using the gnulib <stdint.h>. It defines intptr_t to 'long' or
    dnl 'long long', depending on _WIN64.
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM([[
         #ifdef _WIN64
         LLP64
         #endif
         ]])
      ],
      [PRIPTR_PREFIX='"l"'],
      [PRIPTR_PREFIX='"ll"'])
  else
    dnl Using the system's <stdint.h>.
    for glpfx in '' l ll I64; do
      case $glpfx in
        '')  gltype1='int';;
        l)   gltype1='long int';;
        ll)  gltype1='long long int';;
        I64) gltype1='__int64';;
      esac
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdint.h>
           extern intptr_t foo;
           extern $gltype1 foo;]])],
        [PRIPTR_PREFIX='"'$glpfx'"'])
      test -n "$PRIPTR_PREFIX" && break
    done
  fi
  AC_SUBST([PRIPTR_PREFIX])

  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [INT32_MAX_LT_INTMAX_MAX],
    [defined INT32_MAX && defined INTMAX_MAX],
    [INT32_MAX < INTMAX_MAX],
    [sizeof (int) < sizeof (long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [INT64_MAX_EQ_LONG_MAX],
      [defined INT64_MAX],
      [INT64_MAX == LONG_MAX],
      [sizeof (long long int) == sizeof (long int)])
  else
    INT64_MAX_EQ_LONG_MAX=-1
  fi
  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [UINT32_MAX_LT_UINTMAX_MAX],
    [defined UINT32_MAX && defined UINTMAX_MAX],
    [UINT32_MAX < UINTMAX_MAX],
    [sizeof (unsigned int) < sizeof (unsigned long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [UINT64_MAX_EQ_ULONG_MAX],
      [defined UINT64_MAX],
      [UINT64_MAX == ULONG_MAX],
      [sizeof (unsigned long long int) == sizeof (unsigned long int)])
  else
    UINT64_MAX_EQ_ULONG_MAX=-1
  fi
])
m4trace:m4/inttypes.m4:108: -1- AC_DEFUN([gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION], [
  AC_CACHE_CHECK([whether $3],
    [gl_cv_test_$1],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* Work also in C++ mode.  */
            #define __STDC_LIMIT_MACROS 1

            /* Work if build is not clean.  */
            #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H

            #include <limits.h>
            #if HAVE_STDINT_H
             #include <stdint.h>
            #endif

            #if $2
             #define CONDITION ($3)
            #else
             #define CONDITION ($4)
            #endif
            int test[CONDITION ? 1 : -1];]])],
       [gl_cv_test_$1=yes],
       [gl_cv_test_$1=no])])
  if test $gl_cv_test_$1 = yes; then
    $1=1;
  else
    $1=0;
  fi
  AC_SUBST([$1])
])
m4trace:m4/inttypes.m4:145: -1- AC_DEFUN([gl_INTTYPES_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_INTTYPES_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/inttypes.m4:155: -1- AC_DEFUN([gl_INTTYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_INTTYPES_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
])
m4trace:m4/inttypes.m4:167: -1- AC_DEFUN([gl_INTTYPES_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_IMAXABS=1;   AC_SUBST([HAVE_DECL_IMAXABS])
  HAVE_DECL_IMAXDIV=1;   AC_SUBST([HAVE_DECL_IMAXDIV])
  HAVE_DECL_STRTOIMAX=1; AC_SUBST([HAVE_DECL_STRTOIMAX])
  HAVE_DECL_STRTOUMAX=1; AC_SUBST([HAVE_DECL_STRTOUMAX])
  HAVE_IMAXDIV_T=1;      AC_SUBST([HAVE_IMAXDIV_T])
  HAVE_IMAXABS=1;        AC_SUBST([HAVE_IMAXABS])
  HAVE_IMAXDIV=1;        AC_SUBST([HAVE_IMAXDIV])
  REPLACE_IMAXABS=0;     AC_SUBST([REPLACE_IMAXABS])
  REPLACE_IMAXDIV=0;     AC_SUBST([REPLACE_IMAXDIV])
  REPLACE_STRTOIMAX=0;   AC_SUBST([REPLACE_STRTOIMAX])
  REPLACE_STRTOUMAX=0;   AC_SUBST([REPLACE_STRTOUMAX])
  INT32_MAX_LT_INTMAX_MAX=1;  AC_SUBST([INT32_MAX_LT_INTMAX_MAX])
  INT64_MAX_EQ_LONG_MAX='defined _LP64';  AC_SUBST([INT64_MAX_EQ_LONG_MAX])
  PRIPTR_PREFIX=__PRIPTR_PREFIX;  AC_SUBST([PRIPTR_PREFIX])
  UINT32_MAX_LT_UINTMAX_MAX=1;  AC_SUBST([UINT32_MAX_LT_UINTMAX_MAX])
  UINT64_MAX_EQ_ULONG_MAX='defined _LP64';  AC_SUBST([UINT64_MAX_EQ_ULONG_MAX])
])
m4trace:m4/largefile.m4:17: -1- AC_DEFUN([gl_SET_LARGEFILE_SOURCE], [
])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([_AC_SYS_YEAR2038_TEST_CODE], [[
  #include <time.h>
  /* Check that time_t can represent 2**32 - 1 correctly.  */
  #define LARGE_TIME_T \\
    ((time_t) (((time_t) 1 << 30) - 1 + 3 * ((time_t) 1 << 30)))
  int verify_time_t_range[(LARGE_TIME_T / 65537 == 65535
                           && LARGE_TIME_T % 65537 == 0)
                          ? 1 : -1];
]])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([_AC_SYS_YEAR2038_PROBE], [AC_CACHE_CHECK([for $CC option to support timestamps after 2038],
  [ac_cv_sys_year2038_opts],
  [ac_save_CPPFLAGS="$CPPFLAGS"
  ac_opt_found=no
  for ac_opt in _AC_SYS_YEAR2038_OPTIONS; do
    AS_IF([test x"$ac_opt" != x"none needed"],
      [CPPFLAGS="$ac_save_CPPFLAGS $ac_opt"])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([_AC_SYS_YEAR2038_TEST_CODE])],
      [ac_cv_sys_year2038_opts="$ac_opt"
      ac_opt_found=yes])
    test $ac_opt_found = no || break
  done
  CPPFLAGS="$ac_save_CPPFLAGS"
  test $ac_opt_found = yes || ac_cv_sys_year2038_opts="support not detected"])

ac_have_year2038=yes
AS_CASE([$ac_cv_sys_year2038_opts],
  ["none needed"], [],
  ["support not detected"],
    [ac_have_year2038=no],

  ["-D_TIME_BITS=64"],
    [AC_DEFINE([_TIME_BITS], [64],
      [Number of bits in time_t, on hosts where this is settable.])],

  ["-D__MINGW_USE_VC2005_COMPAT"],
    [AC_DEFINE([__MINGW_USE_VC2005_COMPAT], [1],
      [Define to 1 on platforms where this makes time_t a 64-bit type.])],

  ["-U_USE_32_BIT_TIME_T"*],
    [AC_MSG_FAILURE(m4_text_wrap(
      [the 'time_t' type is currently forced to be 32-bit.
       It will stop working after mid-January 2038.
       Remove _USE_32BIT_TIME_T from the compiler flags.],
      [], [], [55]))],

  [AC_MSG_ERROR(
    [internal error: bad value for \$ac_cv_sys_year2038_opts])])
])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([AC_SYS_YEAR2038], [AC_REQUIRE([AC_SYS_LARGEFILE])dnl
AS_IF([test "$enable_year2038,$ac_have_year2038,$cross_compiling" = yes,no,no],
 [# If we're not cross compiling and 'touch' works with a large
  # timestamp, then we can presume the system supports wider time_t
  # *somehow* and we just weren't able to detect it.  One common
  # case that we deliberately *don't* probe for is a system that
  # supports both 32- and 64-bit ABIs but only the 64-bit ABI offers
  # wide time_t.  (It would be inappropriate for us to override an
  # intentional use of -m32.)  Error out, demanding use of
  # --disable-year2038 if this is intentional.
  AS_IF([TZ=UTC0 touch -t 210602070628.15 conftest.time 2>/dev/null],
    [AS_CASE([`TZ=UTC0 LC_ALL=C ls -l conftest.time 2>/dev/null`],
       [*'Feb  7  2106'* | *'Feb  7 17:10'*],
       [AC_MSG_FAILURE(m4_text_wrap(
	  [this system appears to support timestamps after mid-January 2038,
	   but no mechanism for enabling wide 'time_t' was detected.
	   Did you mean to build a 64-bit binary? (E.g., 'CC="${CC} -m64"'.)
	   To proceed with 32-bit time_t, configure with '--disable-year2038'.],
	  [], [], [55]))])])])])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([AC_SYS_YEAR2038_RECOMMENDED], [AC_REQUIRE([AC_SYS_YEAR2038])dnl
AS_IF([test "$enable_year2038,$ac_have_year2038" = yes,no],
   [AC_MSG_FAILURE(m4_text_wrap(
      [could not enable timestamps after mid-January 2038.
       This package recommends support for these later timestamps.
       However, to proceed with signed 32-bit time_t even though it
       will fail then, configure with '--disable-year2038'.],
      [], [], [55]))])])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([_AC_SYS_LARGEFILE_PROBE], [AC_CACHE_CHECK([for $CC option to support large files],
  [ac_cv_sys_largefile_opts],
  [ac_save_CPPFLAGS=$CPPFLAGS
  ac_opt_found=no
  for ac_opt in _AC_SYS_LARGEFILE_OPTIONS; do
    AS_IF([test x"$ac_opt" != x"none needed"],
      [CPPFLAGS="$ac_save_CPPFLAGS $ac_opt"])
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([_AC_SYS_LARGEFILE_TEST_CODE])],
     [AS_IF([test x"$ac_opt" = x"none needed"],
	[# GNU/Linux s390x and alpha need _FILE_OFFSET_BITS=64 for wide ino_t.
	 CPPFLAGS="$CPPFLAGS -DFTYPE=ino_t"
	 AC_COMPILE_IFELSE([], [],
	   [CPPFLAGS="$CPPFLAGS -D_FILE_OFFSET_BITS=64"
	    AC_COMPILE_IFELSE([], [ac_opt='-D_FILE_OFFSET_BITS=64'])])])
      ac_cv_sys_largefile_opts=$ac_opt
      ac_opt_found=yes])
    test $ac_opt_found = no || break
  done
  CPPFLAGS=$ac_save_CPPFLAGS
  dnl Gnulib implements large file support for native Windows, based on the
  dnl variables WINDOWS_64_BIT_OFF_T, WINDOWS_64_BIT_ST_SIZE.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([AC_CANONICAL_HOST])
    if test $ac_opt_found != yes; then
      AS_CASE([$host_os],
        [mingw* | windows*],
          [ac_cv_sys_largefile_opts="supported through gnulib"
           ac_opt_found=yes]
      )
    fi
  ])
  test $ac_opt_found = yes || ac_cv_sys_largefile_opts="support not detected"])

ac_have_largefile=yes
AS_CASE([$ac_cv_sys_largefile_opts],
  ["none needed"], [],
  ["supported through gnulib"], [],
  ["support not detected"],
    [ac_have_largefile=no],

  ["-D_FILE_OFFSET_BITS=64"],
    [AC_DEFINE([_FILE_OFFSET_BITS], [64],
      [Number of bits in a file offset, on hosts where this is settable.])],

  ["-D_LARGE_FILES=1"],
    [AC_DEFINE([_LARGE_FILES], [1],
      [Define to 1 on platforms where this makes off_t a 64-bit type.])],

  [AC_MSG_ERROR(
    [internal error: bad value for \$ac_cv_sys_largefile_opts])])

AS_IF([test "$enable_year2038" != no],
  [_AC_SYS_YEAR2038_PROBE])
AC_CONFIG_COMMANDS_PRE([_AC_SYS_YEAR2038_ENABLE])])
m4trace:m4/largefile.m4:41: -1- AC_DEFUN([AC_SYS_LARGEFILE], [AC_ARG_ENABLE([largefile],
   [AS_HELP_STRING([--disable-largefile],
      [omit support for large files])])dnl
AS_IF([test "$enable_largefile,$enable_year2038" != no,no],
  [_AC_SYS_LARGEFILE_PROBE])])
m4trace:m4/largefile.m4:314: -1- AC_DEFUN([gl_LARGEFILE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | windows*)
      dnl Native Windows.
      dnl mingw64 defines off_t to a 64-bit type already, if
      dnl _FILE_OFFSET_BITS=64, which is ensured by AC_SYS_LARGEFILE.
      AC_CACHE_CHECK([for 64-bit off_t], [gl_cv_type_off_t_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                int verify_off_t_size[sizeof (off_t) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_type_off_t_64=yes], [gl_cv_type_off_t_64=no])
        ])
      if test $gl_cv_type_off_t_64 = no; then
        WINDOWS_64_BIT_OFF_T=1
      else
        WINDOWS_64_BIT_OFF_T=0
      fi
      dnl Some mingw versions define, if _FILE_OFFSET_BITS=64, 'struct stat'
      dnl to 'struct _stat32i64' or 'struct _stat64' (depending on
      dnl _USE_32BIT_TIME_T), which has a 32-bit st_size member.
      AC_CACHE_CHECK([for 64-bit st_size], [gl_cv_member_st_size_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                struct stat buf;
                int verify_st_size_size[sizeof (buf.st_size) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_member_st_size_64=yes], [gl_cv_member_st_size_64=no])
        ])
      if test $gl_cv_member_st_size_64 = no; then
        WINDOWS_64_BIT_ST_SIZE=1
      else
        WINDOWS_64_BIT_ST_SIZE=0
      fi
      ;;
    *)
      dnl Nothing to do on gnulib's side.
      dnl A 64-bit off_t is
      dnl   - already the default on Mac OS X, FreeBSD, NetBSD, OpenBSD, IRIX,
      dnl     OSF/1, Cygwin,
      dnl   - enabled by _FILE_OFFSET_BITS=64 (ensured by AC_SYS_LARGEFILE) on
      dnl     glibc, HP-UX, Solaris,
      dnl   - enabled by _LARGE_FILES=1 (ensured by AC_SYS_LARGEFILE) on AIX,
      dnl   - impossible to achieve on Minix 3.1.8.
      WINDOWS_64_BIT_OFF_T=0
      WINDOWS_64_BIT_ST_SIZE=0
      ;;
  esac
])
m4trace:m4/limits-h.m4:13: -1- AC_DEFUN_ONCE([gl_LIMITS_H], [
  gl_CHECK_NEXT_HEADERS([limits.h])

  AC_CACHE_CHECK([whether limits.h has WORD_BIT, BOOL_WIDTH etc.],
    [gl_cv_header_limits_width],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
             #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
            #endif
            #include <limits.h>
            long long llm = LLONG_MAX;
            int wb = WORD_BIT;
            int ullw = ULLONG_WIDTH;
            int bw = BOOL_WIDTH;
            int bm = BOOL_MAX;
            int mblm = MB_LEN_MAX;
          ]])],
       [gl_cv_header_limits_width=yes],
       [gl_cv_header_limits_width=no])])
  GL_GENERATE_LIMITS_H=true
  AS_IF([test "$gl_cv_header_limits_width" = yes],
    [AC_CACHE_CHECK([whether limits.h has SSIZE_MAX],
       [gl_cv_header_limits_ssize_max],
       [AC_COMPILE_IFELSE(
          [AC_LANG_SOURCE(
             [[#include <limits.h>
               #ifndef SSIZE_MAX
                 #error "SSIZE_MAX is not defined"
               #endif
             ]])],
          [gl_cv_header_limits_ssize_max=yes],
          [gl_cv_header_limits_ssize_max=no])])
     if test "$gl_cv_header_limits_ssize_max" = yes; then
       GL_GENERATE_LIMITS_H=false
     fi])
])
m4trace:m4/limits-h.m4:53: -1- AC_DEFUN([gl_REPLACE_LIMITS_H], [
  AC_REQUIRE([gl_LIMITS_H])
  GL_GENERATE_LIMITS_H=true
])
m4trace:m4/locale-en.m4:13: -1- AC_DEFUN_ONCE([gt_LOCALE_EN_UTF8], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([AM_LANGINFO_CODESET])
  AC_CACHE_CHECK([for an english Unicode locale], [gt_cv_locale_en_utf8], [
    case "$host_os" in
      *-musl* | midipix*)
        dnl On musl libc, all kinds of ll_CC.UTF-8 locales exist, even without
        dnl any locale file on disk. But they are effectively equivalent to the
        dnl C.UTF-8 locale, except for locale categories (such as LC_MESSSAGES)
        dnl for which localizations (.mo files) have been installed.
        gt_cv_locale_en_utf8=en_US.UTF-8
        ;;
      *)
        AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <locale.h>
#include <time.h>
#if HAVE_LANGINFO_CODESET
# include <langinfo.h>
#endif
#include <stdlib.h>
#include <string.h>
struct tm t;
char buf[16];
int main () {
  /* On BeOS and Haiku, locales are not implemented in libc.  Rather, libintl
     imitates locale dependent behaviour by looking at the environment
     variables, and all locales use the UTF-8 encoding.  */
#if !(defined __BEOS__ || defined __HAIKU__)
  /* Check whether the given locale name is recognized by the system.  */
# if defined _WIN32 && !defined __CYGWIN__
  /* On native Windows, setlocale(category, "") looks at the system settings,
     not at the environment variables.  Also, when an encoding suffix such
     as ".65001" or ".54936" is specified, it succeeds but sets the LC_CTYPE
     category of the locale to "C".  */
  if (setlocale (LC_ALL, getenv ("LC_ALL")) == NULL
      || strcmp (setlocale (LC_CTYPE, NULL), "C") == 0)
    return 1;
# else
  if (setlocale (LC_ALL, "") == NULL) return 1;
# endif
  /* Check whether nl_langinfo(CODESET) is "UTF-8" or equivalent.  */
# if HAVE_LANGINFO_CODESET
  {
    const char *cs = nl_langinfo (CODESET);
    if (!(strcmp (cs, "UTF-8") == 0 || strcmp (cs, "UTF8") == 0
          || strcmp (cs, "utf-8") == 0 || strcmp (cs, "utf8") == 0))
      return 1;
  }
# endif
# ifdef __CYGWIN__
  /* On Cygwin, avoid locale names without encoding suffix, because the
     locale_charset() function relies on the encoding suffix.  Note that
     LC_ALL is set on the command line.  */
  if (strchr (getenv ("LC_ALL"), '.') == NULL) return 1;
# endif
  /* Check the third month name.  */
  t.tm_year = 1975 - 1900; t.tm_mon = 3 - 1; t.tm_mday = 24;
  if (strftime (buf, sizeof (buf), "%B", &t) < 5 || strcmp (buf, "March") != 0)
    return 1;
#endif
#if !defined __BIONIC__ /* Bionic libc's 'struct lconv' is just a dummy.  */
  /* Check whether the decimal separator is a dot.  */
  if (localeconv () ->decimal_point[0] != '.') return 1;
#endif
  return 0;
}
          ]])])
        if AC_TRY_EVAL([ac_link]) && test -s conftest$ac_exeext; then
          case "$host_os" in
            # Handle native Windows specially, because there setlocale() interprets
            # "ar" or "ara" as "Arabic" or "Arabic_Saudi Arabia.1256",
            # "en" or "eng" as "English" or "English_United States.1252",
            # "fr" or "fra" as "French" or "French_France.1252",
            # "ge"(!) or "deu"(!) as "German" or "German_Germany.1252",
            # "ja" or "jpn" as "Japanese" or "Japanese_Japan.932",
            # and similar.
            mingw* | windows*)
              # Test for the hypothetical native Windows locale name.
              if (LC_ALL='English_United States.65001' LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_en_utf8='English_United States.65001'
              else
                # None found.
                gt_cv_locale_en_utf8=none
              fi
              ;;
            *)
              # Setting LC_ALL is not enough. Need to set LC_TIME to empty, because
              # otherwise on Mac OS X 10.3.5 the LC_TIME=C from the beginning of the
              # configure script would override the LC_ALL setting. Likewise for
              # LC_CTYPE, which is also set at the beginning of the configure script.
              # Test for the locale name with explicit encoding suffix first
              # (this is necessary on Haiku).
              if (LC_ALL=en_US.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                gt_cv_locale_en_utf8=en_US.UTF-8
              else
                # Test for the locale name without encoding suffix.
                if (LC_ALL=en_US LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                  gt_cv_locale_en_utf8=en_US
                else
                  # Test for the Solaris 10 locale name.
                  if (LC_ALL=en.UTF-8 LC_TIME= LC_CTYPE= ./conftest; exit) 2>/dev/null; then
                    gt_cv_locale_en_utf8=en.UTF-8
                  else
                    # None found.
                    gt_cv_locale_en_utf8=none
                  fi
                fi
              fi
              ;;
          esac
        fi
        rm -fr conftest*
        ;;
    esac
  ])
  LOCALE_EN_UTF8="$gt_cv_locale_en_utf8"
  case "$LOCALE_EN_UTF8" in #(
    '' | *[[\"\$\'*@<:@]]*)
      dnl The empty value occurs when the conftest.c program above could not
      dnl be compiled.  The other values might cause trouble with sh or make.
      AC_MSG_WARN([invalid locale "$LOCALE_EN_UTF8"; assuming "none"])
      LOCALE_EN_UTF8=none;;
  esac
  AC_SUBST([LOCALE_EN_UTF8])
])
m4trace:m4/lock.m4:11: -1- AC_DEFUN([gl_LOCK], [
  AC_REQUIRE([gl_THREADLIB])
  if test "$gl_threads_api" = posix; then
    # OSF/1 4.0 and Mac OS X 10.1 lack the pthread_rwlock_t type and the
    # pthread_rwlock_* functions.
    has_rwlock=false
    AC_CHECK_TYPE([pthread_rwlock_t],
      [has_rwlock=true
       AC_DEFINE([HAVE_PTHREAD_RWLOCK], [1],
         [Define if the POSIX multithreading library has read/write locks.])],
      [],
      [#include <pthread.h>])
    if $has_rwlock; then
      gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
    fi
    # glibc defines PTHREAD_MUTEX_RECURSIVE as enum, not as a macro.
    AC_COMPILE_IFELSE([
      AC_LANG_PROGRAM(
        [[#include <pthread.h>]],
        [[
#if __FreeBSD__ == 4
error "No, in FreeBSD 4.0 recursive mutexes actually don't work."
#elif (defined __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ \
       && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ < 1070)
error "No, in Mac OS X < 10.7 recursive mutexes actually don't work."
#else
int x = (int)PTHREAD_MUTEX_RECURSIVE;
return !x;
#endif
        ]])],
      [AC_DEFINE([HAVE_PTHREAD_MUTEX_RECURSIVE], [1],
         [Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE.])])
  fi
  gl_PREREQ_LOCK
])
m4trace:m4/lock.m4:49: -1- AC_DEFUN([gl_PREREQ_LOCK], [:])
m4trace:m4/lstat.m4:11: -1- AC_DEFUN([gl_FUNC_LSTAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  dnl If lstat does not exist, the replacement <sys/stat.h> does
  dnl "#define lstat stat", and lstat.c is a no-op.
  AC_CHECK_FUNCS_ONCE([lstat])
  if test $ac_cv_func_lstat = yes; then
    AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
    case $host_os,$gl_cv_func_lstat_dereferences_slashed_symlink in
      darwin* | solaris* | *no)
        REPLACE_LSTAT=1
        ;;
    esac
  else
    HAVE_LSTAT=0
  fi
])
m4trace:m4/lstat.m4:31: -1- AC_DEFUN([gl_PREREQ_LSTAT], [:])
m4trace:m4/lstat.m4:33: -1- AC_DEFUN([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK], [
  dnl We don't use AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK any more, because it
  dnl is no longer maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether lstat correctly handles trailing slash],
    [gl_cv_func_lstat_dereferences_slashed_symlink],
    [rm -f conftest.sym conftest.file
     echo >conftest.file
     AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [AC_INCLUDES_DEFAULT],
          [[struct stat sbuf;
            if (symlink ("conftest.file", "conftest.sym") != 0)
              return 1;
            /* Linux will dereference the symlink and fail, as required by
               POSIX.  That is better in the sense that it means we will not
               have to compile and use the lstat wrapper.  */
            return lstat ("conftest.sym/", &sbuf) == 0;
          ]])],
       [gl_cv_func_lstat_dereferences_slashed_symlink=yes],
       [gl_cv_func_lstat_dereferences_slashed_symlink=no],
       [case "$host_os" in
          linux-* | linux)
            # Guess yes on Linux systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          midipix*)
            # Guess yes on systems that emulate the Linux system calls.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          *-gnu* | gnu*)
            # Guess yes on glibc systems.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
          mingw* | windows*)
            # Guess no on native Windows.
            gl_cv_func_lstat_dereferences_slashed_symlink="guessing no" ;;
          *)
            # If we don't know, obey --enable-cross-guesses.
            gl_cv_func_lstat_dereferences_slashed_symlink="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.sym conftest.file
    ])
  case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
    *yes)
      AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
        [Define to 1 if 'lstat' dereferences a symlink specified
         with a trailing slash.])
      ;;
  esac
])
m4trace:m4/malloc.m4:11: -1- AC_DEFUN([_AC_FUNC_MALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether malloc (0) returns nonnull],
    [ac_cv_func_malloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = malloc (0);
            void * volatile vp = p;
            int result = !vp;
            free (p);
            return result;]])
       ],
       [ac_cv_func_malloc_0_nonnull=yes],
       [ac_cv_func_malloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midipix* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | windows* | msys* )
            ac_cv_func_malloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_malloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_malloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/malloc.m4:45: -1- AC_DEFUN([gl_FUNC_MALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])

  dnl Through the dependency on module extensions-aix, _LINUX_SOURCE_COMPAT
  dnl gets defined already before this macro gets invoked.  This helps
  dnl if !(__VEC__ || __AIXVEC), and doesn't hurt otherwise.

  REPLACE_MALLOC_FOR_MALLOC_GNU="$REPLACE_MALLOC_FOR_MALLOC_POSIX"
  if test $REPLACE_MALLOC_FOR_MALLOC_GNU = 0; then
    _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC_FOR_MALLOC_GNU=1])
  fi
])
m4trace:m4/malloc.m4:64: -1- AC_DEFUN([gl_FUNC_MALLOC_PTRDIFF], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  test "$gl_cv_malloc_ptrdiff" = yes || REPLACE_MALLOC_FOR_MALLOC_POSIX=1
])
m4trace:m4/malloc.m4:74: -1- AC_DEFUN([gl_CHECK_MALLOC_PTRDIFF], [
  AC_CACHE_CHECK([whether malloc is ptrdiff_t safe],
    [gl_cv_malloc_ptrdiff],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
          ]],
          [[/* 64-bit ptrdiff_t is so wide that no practical platform
               can exceed it.  */
            #define WIDE_PTRDIFF (PTRDIFF_MAX >> 31 >> 31 != 0)

            /* On rare machines where size_t fits in ptrdiff_t there
               is no problem.  */
            #define NARROW_SIZE (SIZE_MAX <= PTRDIFF_MAX)

            /* glibc 2.30 and later malloc refuses to exceed ptrdiff_t
               bounds even on 32-bit platforms.  We don't know which
               non-glibc systems are safe.  */
            #define KNOWN_SAFE (2 < __GLIBC__ + (30 <= __GLIBC_MINOR__))

            #if WIDE_PTRDIFF || NARROW_SIZE || KNOWN_SAFE
              return 0;
            #else
              #error "malloc might not be ptrdiff_t safe"
              syntax error
            #endif
          ]])],
       [gl_cv_malloc_ptrdiff=yes],
       [gl_cv_malloc_ptrdiff=no])
    ])
])
m4trace:m4/malloc.m4:112: -1- AC_DEFUN([gl_FUNC_MALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_PTRDIFF])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test "$gl_cv_func_malloc_posix" = yes; then
    AC_DEFINE([HAVE_MALLOC_POSIX], [1],
      [Define if malloc, realloc, and calloc set errno on allocation failure.])
  else
    REPLACE_MALLOC_FOR_MALLOC_POSIX=1
  fi
])
m4trace:m4/malloc.m4:127: -1- AC_DEFUN([gl_CHECK_MALLOC_POSIX], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether malloc, realloc, calloc set errno on failure],
    [gl_cv_func_malloc_posix],
    [
      dnl It is too dangerous to try to allocate a large amount of memory:
      dnl some systems go to their knees when you do that. So assume that
      dnl all Unix implementations of the function set errno on failure,
      dnl except on those platforms where we have seen 'test-malloc-gnu',
      dnl 'test-realloc-gnu', 'test-calloc-gnu' fail.
      case "$host_os" in
        mingw* | windows*)
          gl_cv_func_malloc_posix=no ;;
        irix* | solaris*)
          dnl On IRIX 6.5, the three functions return NULL with errno unset
          dnl when the argument is larger than PTRDIFF_MAX.
          dnl On Solaris 11.3, the three functions return NULL with errno set
          dnl to EAGAIN, not ENOMEM, when the argument is larger than
          dnl PTRDIFF_MAX.
          dnl Here is a test program:
m4_divert_push([KILL])
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#define ptrdiff_t long
#ifndef PTRDIFF_MAX
# define PTRDIFF_MAX ((ptrdiff_t) ((1UL << (8 * sizeof (ptrdiff_t) - 1)) - 1))
#endif

int main ()
{
  void *p;

  fprintf (stderr, "PTRDIFF_MAX = %lu\n", (unsigned long) PTRDIFF_MAX);

  errno = 0;
  p = malloc ((unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = calloc (PTRDIFF_MAX / 2 + 1, 2);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  errno = 0;
  p = realloc (NULL, (unsigned long) PTRDIFF_MAX + 1);
  fprintf (stderr, "p=%p errno=%d\n", p, errno);

  return 0;
}
m4_divert_pop([KILL])
          gl_cv_func_malloc_posix=no ;;
        *)
          gl_cv_func_malloc_posix=yes ;;
      esac
    ])
])
m4trace:m4/malloca.m4:10: -1- AC_DEFUN([gl_MALLOCA], [
  dnl Use the autoconf tests for alloca(), but not the AC_SUBSTed variables
  dnl @ALLOCA@ and @LTALLOCA@.
  dnl gl_FUNC_ALLOCA   dnl Already brought in by the module dependencies.
  AC_REQUIRE([gl_EEMALLOC])
])
m4trace:m4/memchr.m4:9: -1- AC_DEFUN_ONCE([gl_FUNC_MEMCHR], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl Check for prerequisites for memory fence checks.
  gl_FUNC_MMAP_ANON
  AC_CHECK_HEADERS_ONCE([sys/mman.h])
  AC_CHECK_FUNCS_ONCE([mprotect])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  # Detect platform-specific bugs in some versions of glibc:
  # memchr should not dereference anything with length 0
  #   https://bugzilla.redhat.com/show_bug.cgi?id=499689
  # memchr should not dereference overestimated length after a match
  #   https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=521737
  #   https://sourceware.org/bugzilla/show_bug.cgi?id=10162
  # memchr should cast the second argument to 'unsigned char'.
  #   This bug exists in Android 4.3.
  # Assume that memchr works on platforms that lack mprotect.
  AC_CACHE_CHECK([whether memchr works], [gl_cv_func_memchr_works],
    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h>
#if HAVE_SYS_MMAN_H
# include <fcntl.h>
# include <unistd.h>
# include <sys/types.h>
# include <sys/mman.h>
# ifndef MAP_FILE
#  define MAP_FILE 0
# endif
#endif
]], [[
  int result = 0;
  char *fence = NULL;
#if HAVE_SYS_MMAN_H && HAVE_MPROTECT
# if HAVE_MAP_ANONYMOUS
  const int flags = MAP_ANONYMOUS | MAP_PRIVATE;
  const int fd = -1;
# else /* !HAVE_MAP_ANONYMOUS */
  const int flags = MAP_FILE | MAP_PRIVATE;
  int fd = open ("/dev/zero", O_RDONLY, 0666);
  if (fd >= 0)
# endif
    {
      long int pagesize = sysconf (_SC_PAGESIZE);
      char *two_pages =
        (char *) mmap (NULL, 2 * pagesize, PROT_READ | PROT_WRITE,
                       flags, fd, 0);
      if (two_pages != (char *)(-1)
          && mprotect (two_pages + pagesize, pagesize, PROT_NONE) == 0)
        fence = two_pages + pagesize;
    }
#endif
  if (fence)
    {
      /* Test against bugs on glibc systems.  */
      if (memchr (fence, 0, 0))
        result |= 1;
      strcpy (fence - 9, "12345678");
      if (memchr (fence - 9, 0, 79) != fence - 1)
        result |= 2;
      if (memchr (fence - 1, 0, 3) != fence - 1)
        result |= 4;
      /* Test against bug on AIX 7.2.  */
      if (memchr (fence - 4, '6', 16) != fence - 4)
        result |= 8;
    }
  /* Test against bug on Android 4.3.  */
  {
    char input[3];
    input[0] = 'a';
    input[1] = 'b';
    input[2] = 'c';
    if (memchr (input, 0x789abc00 | 'b', 3) != input + 1)
      result |= 16;
  }
  return result;
]])],
       [gl_cv_func_memchr_works=yes],
       [gl_cv_func_memchr_works=no],
       [case "$host_os" in
                             # Guess no on Android.
          linux*-android*)   gl_cv_func_memchr_works="guessing no" ;;
                             # Guess yes on native Windows.
          mingw* | windows*) gl_cv_func_memchr_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
          *)                 gl_cv_func_memchr_works="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  case "$gl_cv_func_memchr_works" in
    *yes) ;;
    *) REPLACE_MEMCHR=1 ;;
  esac
])
m4trace:m4/memchr.m4:106: -1- AC_DEFUN([gl_PREREQ_MEMCHR], [
  AC_CHECK_HEADERS([bp-sym.h])
])
m4trace:m4/mempcpy.m4:10: -1- AC_DEFUN([gl_FUNC_MEMPCPY], [
  dnl Persuade glibc <string.h> to declare mempcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The mempcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_CHECK_FUNCS_ANDROID([mempcpy], [[#include <string.h>]])
  if test $ac_cv_func_mempcpy = no; then
    HAVE_MEMPCPY=0
    case "$gl_cv_onwards_func_mempcpy" in
      future*) REPLACE_MEMPCPY=1 ;;
    esac
  fi
])
m4trace:m4/mempcpy.m4:29: -1- AC_DEFUN([gl_PREREQ_MEMPCPY], [
  :
])
m4trace:m4/memrchr.m4:10: -1- AC_DEFUN([gl_FUNC_MEMRCHR], [
  dnl Persuade glibc <string.h> to declare memrchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([memrchr])
  if test $ac_cv_have_decl_memrchr = no; then
    HAVE_DECL_MEMRCHR=0
  fi

  AC_CHECK_FUNCS([memrchr])
])
m4trace:m4/memrchr.m4:25: -1- AC_DEFUN([gl_PREREQ_MEMRCHR], [:])
m4trace:m4/minmax.m4:11: -1- AC_DEFUN([gl_MINMAX], [
  AC_REQUIRE([gl_PREREQ_MINMAX])
])
m4trace:m4/minmax.m4:17: -1- AC_DEFUN([gl_PREREQ_MINMAX], [
  gl_MINMAX_IN_HEADER([limits.h])
  gl_MINMAX_IN_HEADER([sys/param.h])
])
m4trace:m4/minmax.m4:27: -1- AC_DEFUN([gl_MINMAX_IN_HEADER], [
  m4_pushdef([header], AS_TR_SH([$1]))
  m4_pushdef([HEADER], AS_TR_CPP([$1]))
  AC_CACHE_CHECK([whether <$1> defines MIN and MAX],
    [gl_cv_minmax_in_]header,
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <$1>
            int x = MIN (42, 17);]],
          [[]])],
       [gl_cv_minmax_in_]header[=yes],
       [gl_cv_minmax_in_]header[=no])])
  if test $gl_cv_minmax_in_[]header = yes; then
    AC_DEFINE([HAVE_MINMAX_IN_]HEADER, 1,
      [Define to 1 if <$1> defines the MIN and MAX macros.])
  fi
  m4_popdef([HEADER])
  m4_popdef([header])
])
m4trace:m4/mkfifo.m4:13: -1- AC_DEFUN([gl_FUNC_MKFIFO], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  dnl We can't use AC_CHECK_FUNC here, because mkfifo() is defined as a
  dnl static inline function when compiling for Android 4.4 or older.
  AC_CACHE_CHECK([for mkfifo], [gl_cv_func_mkfifo],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/stat.h>]],
          [[return mkfifo("/",0);]])
       ],
       [gl_cv_func_mkfifo=yes],
       [gl_cv_func_mkfifo=no])
    ])
  if test $gl_cv_func_mkfifo = no; then
    HAVE_MKFIFO=0
  else
    AC_DEFINE([HAVE_MKFIFO], [1],
      [Define to 1 if you have a 'mkfifo' function.])
    dnl Check for Solaris 9 and FreeBSD bug with trailing slash.
    AC_CHECK_FUNCS_ONCE([lstat])
    AC_CACHE_CHECK([whether mkfifo rejects trailing slashes],
      [gl_cv_func_mkfifo_works],
      [# Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.tmp conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
           ]],
           [[int result = 0;
             if (!mkfifo ("conftest.tmp/", 0600))
               result |= 1;
#if HAVE_LSTAT
             if (!mkfifo ("conftest.lnk/", 0600))
               result |= 2;
#endif
             return result;
           ]])],
         [gl_cv_func_mkfifo_works=yes], [gl_cv_func_mkfifo_works=no],
         [case "$host_os" in
                             # Guess yes on Linux systems.
            linux-* | linux) gl_cv_func_mkfifo_works="guessing yes" ;;
                             # Guess yes on glibc systems.
            *-gnu* | gnu*)   gl_cv_func_mkfifo_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
            *)               gl_cv_func_mkfifo_works="$gl_cross_guess_normal" ;;
          esac
         ])
       rm -f conftest.tmp conftest.lnk])
    case "$gl_cv_func_mkfifo_works" in
      *yes) ;;
      *)
        AC_DEFINE([MKFIFO_TRAILING_SLASH_BUG], [1], [Define to 1 if mkfifo
          does not reject trailing slash])
        REPLACE_MKFIFO=1
        ;;
    esac
  fi
])
m4trace:m4/mmap-anon.m4:18: -1- AC_DEFUN_ONCE([gl_FUNC_MMAP_ANON], [
  dnl Persuade glibc <sys/mman.h> to define MAP_ANONYMOUS.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Check for mmap(). Don't use AC_FUNC_MMAP, because it checks too much: it
  # fails on HP-UX 11, because MAP_FIXED mappings do not work. But this is
  # irrelevant for anonymous mappings.
  AC_CHECK_FUNC([mmap], [gl_have_mmap=yes], [gl_have_mmap=no])

  # Try to allow MAP_ANONYMOUS.
  gl_have_mmap_anonymous=no
  if test $gl_have_mmap = yes; then
    AC_MSG_CHECKING([for MAP_ANONYMOUS])
    AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANONYMOUS
    I cannot identify this map
#endif
],
      [gl_have_mmap_anonymous=yes])
    if test $gl_have_mmap_anonymous != yes; then
      AC_EGREP_CPP([I cannot identify this map], [
#include <sys/mman.h>
#ifdef MAP_ANON
    I cannot identify this map
#endif
],
        [AC_DEFINE([MAP_ANONYMOUS], [MAP_ANON],
          [Define to a substitute value for mmap()'s MAP_ANONYMOUS flag.])
         gl_have_mmap_anonymous=yes])
    fi
    AC_MSG_RESULT([$gl_have_mmap_anonymous])
    if test $gl_have_mmap_anonymous = yes; then
      AC_DEFINE([HAVE_MAP_ANONYMOUS], [1],
        [Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including
         config.h and <sys/mman.h>.])
    fi
  fi
])
m4trace:m4/mode_t.m4:14: -1- AC_DEFUN([gl_PROMOTED_TYPE_MODE_T], [
  AC_REQUIRE([AC_TYPE_MODE_T])
  AC_CACHE_CHECK([for promoted mode_t type], [gl_cv_promoted_mode_t], [
    dnl Assume mode_t promotes to 'int' if and only if it is smaller than 'int',
    dnl and to itself otherwise. This assumption is not guaranteed by the ISO C
    dnl standard, but we don't know of any real-world counterexamples.
    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>]],
      [[typedef int array[2 * (sizeof (mode_t) < sizeof (int)) - 1];]])],
      [gl_cv_promoted_mode_t='int'],
      [gl_cv_promoted_mode_t='mode_t'])
  ])
  AC_DEFINE_UNQUOTED([PROMOTED_MODE_T], [$gl_cv_promoted_mode_t],
    [Define to the type that is the result of default argument promotions of type mode_t.])
])
m4trace:m4/msvc-inval.m4:9: -1- AC_DEFUN([gl_MSVC_INVAL], [
  AC_CHECK_FUNCS_ONCE([_set_invalid_parameter_handler])
  if test $ac_cv_func__set_invalid_parameter_handler = yes; then
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=1
    AC_DEFINE([HAVE_MSVC_INVALID_PARAMETER_HANDLER], [1],
      [Define to 1 on MSVC platforms that have the "invalid parameter handler"
       concept.])
  else
    HAVE_MSVC_INVALID_PARAMETER_HANDLER=0
  fi
  AC_SUBST([HAVE_MSVC_INVALID_PARAMETER_HANDLER])
])
m4trace:m4/msvc-nothrow.m4:9: -1- AC_DEFUN([gl_MSVC_NOTHROW], [
  AC_REQUIRE([gl_MSVC_INVAL])
])
m4trace:m4/multiarch.m4:23: -1- AC_DEFUN_ONCE([gl_MULTIARCH], [
  dnl Code similar to autoconf-2.63 AC_C_BIGENDIAN.
  AC_CACHE_CHECK([whether the compiler produces multi-arch binaries],
    [gl_cv_c_multiarch],
    [gl_cv_c_multiarch=no
     AC_COMPILE_IFELSE(
       [AC_LANG_SOURCE(
         [[#ifndef __APPLE_CC__
            not a universal capable compiler
           #endif
           typedef int dummy;
         ]])],
       [
        dnl Check for potential -arch flags.  It is not universal unless
        dnl there are at least two -arch flags with different values.
        arch=
        prev=
        for word in ${CC} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}; do
          if test -n "$prev"; then
            case $word in
              i?86 | x86_64 | ppc | ppc64 | arm | arm64)
                if test -z "$arch" || test "$arch" = "$word"; then
                  arch="$word"
                else
                  gl_cv_c_multiarch=yes
                fi
                ;;
            esac
            prev=
          else
            if test "x$word" = "x-arch"; then
              prev=arch
            fi
          fi
        done
       ])
    ])
  if test $gl_cv_c_multiarch = yes; then
    APPLE_UNIVERSAL_BUILD=1
  else
    APPLE_UNIVERSAL_BUILD=0
  fi
  AC_SUBST([APPLE_UNIVERSAL_BUILD])
])
m4trace:m4/musl.m4:14: -1- AC_DEFUN_ONCE([gl_MUSL_LIBC], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    *-musl* | midipix*)
      AC_DEFINE([MUSL_LIBC], [1], [Define to 1 on musl libc.])
      ;;
  esac
])
m4trace:m4/nocrash.m4:20: -1- AC_DEFUN([GL_NOCRASH], [[
#include <stdlib.h>
#if defined __MACH__ && defined __APPLE__
/* Avoid a crash on Mac OS X.  */
#include <mach/mach.h>
#include <mach/mach_error.h>
#include <mach/thread_status.h>
#include <mach/exception.h>
#include <mach/task.h>
#include <pthread.h>
/* The exception port on which our thread listens.  */
static mach_port_t our_exception_port;
/* The main function of the thread listening for exceptions of type
   EXC_BAD_ACCESS.  */
static void *
mach_exception_thread (void *arg)
{
  /* Buffer for a message to be received.  */
  struct {
    mach_msg_header_t head;
    mach_msg_body_t msgh_body;
    char data[1024];
  } msg;
  mach_msg_return_t retval;
  /* Wait for a message on the exception port.  */
  retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
                     our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
  if (retval != MACH_MSG_SUCCESS)
    abort ();
  exit (1);
}
static void
nocrash_init (void)
{
  mach_port_t self = mach_task_self ();
  /* Allocate a port on which the thread shall listen for exceptions.  */
  if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
      == KERN_SUCCESS) {
    /* See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
    if (mach_port_insert_right (self, our_exception_port, our_exception_port,
                                MACH_MSG_TYPE_MAKE_SEND)
        == KERN_SUCCESS) {
      /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
         for us.  */
      exception_mask_t mask = EXC_MASK_BAD_ACCESS;
      /* Create the thread listening on the exception port.  */
      pthread_attr_t attr;
      pthread_t thread;
      if (pthread_attr_init (&attr) == 0
          && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
          && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
        pthread_attr_destroy (&attr);
        /* Replace the exception port info for these exceptions with our own.
           Note that we replace the exception port for the entire task, not only
           for a particular thread.  This has the effect that when our exception
           port gets the message, the thread specific exception port has already
           been asked, and we don't need to bother about it.
           See https://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
        task_set_exception_ports (self, mask, our_exception_port,
                                  EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
      }
    }
  }
}
#elif defined _WIN32 && ! defined __CYGWIN__
/* Avoid a crash on native Windows.  */
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <winerror.h>
static LONG WINAPI
exception_filter (EXCEPTION_POINTERS *ExceptionInfo)
{
  switch (ExceptionInfo->ExceptionRecord->ExceptionCode)
    {
    case EXCEPTION_ACCESS_VIOLATION:
    case EXCEPTION_IN_PAGE_ERROR:
    case EXCEPTION_STACK_OVERFLOW:
    case EXCEPTION_GUARD_PAGE:
    case EXCEPTION_PRIV_INSTRUCTION:
    case EXCEPTION_ILLEGAL_INSTRUCTION:
    case EXCEPTION_DATATYPE_MISALIGNMENT:
    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:
    case EXCEPTION_NONCONTINUABLE_EXCEPTION:
      exit (1);
    }
  return EXCEPTION_CONTINUE_SEARCH;
}
static void
nocrash_init (void)
{
  SetUnhandledExceptionFilter ((LPTOP_LEVEL_EXCEPTION_FILTER) exception_filter);
}
#else
/* Avoid a crash on POSIX systems.  */
#include <signal.h>
#include <unistd.h>
/* A POSIX signal handler.  */
static void
exception_handler (int sig)
{
  _exit (1);
}
static void
nocrash_init (void)
{
#ifdef SIGSEGV
  signal (SIGSEGV, exception_handler);
#endif
#ifdef SIGBUS
  signal (SIGBUS, exception_handler);
#endif
}
#endif
]])
m4trace:m4/off64_t.m4:12: -1- AC_DEFUN([gl_TYPE_OFF64_T], [
  dnl Persuade glibc <sys/types.h>, <stdio.h>, <fcntl.h>, <unistd.h>, <aio.h>
  dnl to define off64_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CACHE_CHECK([for off64_t], [gl_cv_off64_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (off64_t *) + sizeof (off64_t);
            return !x;]])],
       [gl_cv_off64_t=yes], [gl_cv_off64_t=no])])

  if test $gl_cv_off64_t != no; then
    HAVE_OFF64_T=1
  else
    HAVE_OFF64_T=0
  fi
  AC_SUBST([HAVE_OFF64_T])
])
m4trace:m4/off_t.m4:12: -1- AC_DEFUN([gl_TYPE_OFF_T], [
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_OFF_T=0
  ])
  AC_SUBST([WINDOWS_64_BIT_OFF_T])
])
m4trace:m4/once.m4:11: -1- AC_DEFUN([gl_ONCE], [
  AC_REQUIRE([gl_THREADLIB])
])
m4trace:m4/open-cloexec.m4:11: -1- AC_DEFUN([gl_PREPROC_O_CLOEXEC], [
  AC_CACHE_CHECK([for O_CLOEXEC],
    [gl_cv_macro_O_CLOEXEC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <fcntl.h>
                          #ifndef O_CLOEXEC
                            choke me;
                          #endif
                        ]],
                        [[return O_CLOEXEC;]])],
       [gl_cv_macro_O_CLOEXEC=yes],
       [gl_cv_macro_O_CLOEXEC=no])])
])
m4trace:m4/open-slash.m4:11: -1- AC_DEFUN([gl_OPEN_TRAILING_SLASH_BUG], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl open("foo/") should not create a file when the file name has a
  dnl trailing slash.  FreeBSD only has the problem on symlinks.
  AC_CHECK_FUNCS_ONCE([lstat])
  AC_CACHE_CHECK([whether open recognizes a trailing slash],
    [gl_cv_func_open_slash],
    [# Assume that if we have lstat, we can also check symlinks.
     if test $ac_cv_func_lstat = yes; then
       touch conftest.tmp
       ln -s conftest.tmp conftest.lnk
     fi
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <fcntl.h>
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
]GL_MDA_DEFINES[
int main ()
{
  int result = 0;
#if HAVE_LSTAT
  if (open ("conftest.lnk/", O_RDONLY) != -1)
    result |= 1;
#endif
  if (open ("conftest.sl/", O_CREAT, 0600) >= 0)
    result |= 2;
  return result;
}]])],
       [gl_cv_func_open_slash=yes],
       [gl_cv_func_open_slash=no],
       [
changequote(,)dnl
        case "$host_os" in
          freebsd* | aix* | hpux* | solaris2.[0-9] | solaris2.[0-9].*)
            gl_cv_func_open_slash="guessing no" ;;
          *)
            gl_cv_func_open_slash="guessing yes" ;;
        esac
changequote([,])dnl
       ])
     rm -f conftest.sl conftest.tmp conftest.lnk
    ])
  case "$gl_cv_func_open_slash" in
    *no)
      AC_DEFINE([OPEN_TRAILING_SLASH_BUG], [1],
        [Define to 1 if open() fails to recognize a trailing slash.])
      ;;
  esac
])
m4trace:m4/open.m4:9: -1- AC_DEFUN([gl_FUNC_OPEN], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case "$host_os" in
    mingw* | windows* | pw*)
      REPLACE_OPEN=1
      ;;
    *)
      dnl open("foo/") should not create a file when the file name has a
      dnl trailing slash.  FreeBSD only has the problem on symlinks.
      AC_CHECK_FUNCS_ONCE([lstat])
      if test "$gl_cv_macro_O_CLOEXEC" != yes; then
        REPLACE_OPEN=1
      fi
      gl_OPEN_TRAILING_SLASH_BUG
      case "$gl_cv_func_open_slash" in
        *no)
          REPLACE_OPEN=1
          ;;
      esac
      ;;
  esac
  dnl Replace open() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    if test $REPLACE_OPEN = 0; then
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_OPEN=1
      fi
    fi
  ])
  dnl Replace open() for supporting the gnulib-defined O_NONBLOCK flag.
  m4_ifdef([gl_NONBLOCKING_IO], [
    if test $REPLACE_OPEN = 0; then
      gl_NONBLOCKING_IO
      if test $gl_cv_have_open_O_NONBLOCK != yes; then
        REPLACE_OPEN=1
      fi
    fi
  ])
])
m4trace:m4/open.m4:54: -1- AC_DEFUN([gl_PREREQ_OPEN], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/openat.m4:13: -1- AC_DEFUN([gl_FUNC_OPENAT], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([openat])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([gl_PREPROC_O_CLOEXEC])
  case $ac_cv_func_openat+$gl_cv_func_lstat_dereferences_slashed_symlink+$gl_cv_macro_O_CLOEXEC in
  yes+*yes+yes)
    ;;
  yes+*)
    # Solaris 10 lacks O_CLOEXEC.
    # Solaris 9 has *at functions, but uniformly mishandles trailing
    # slash in all of them.
    REPLACE_OPENAT=1
    ;;
  *)
    HAVE_OPENAT=0
    ;;
  esac
])
m4trace:m4/openat.m4:36: -1- AC_DEFUN([gl_PREREQ_OPENAT], [
  AC_REQUIRE([gl_PROMOTED_TYPE_MODE_T])
  :
])
m4trace:m4/opendir.m4:9: -1- AC_DEFUN([gl_FUNC_OPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_CHECK_FUNCS([opendir])
  if test $ac_cv_func_opendir = no; then
    HAVE_OPENDIR=0
  else
    dnl Replace opendir() on native Windows and OS/2 kLIBC,
    dnl to support fdopendir().
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      REPLACE_OPENDIR=1
    fi
    dnl Replace opendir() for supporting the gnulib-defined fchdir() function,
    dnl to keep fchdir's bookkeeping up-to-date.
    m4_ifdef([gl_FUNC_FCHDIR], [
      gl_TEST_FCHDIR
      if test $HAVE_FCHDIR = 0; then
        REPLACE_OPENDIR=1
      fi
    ])
  fi
])
m4trace:m4/passfd.m4:9: -1- AC_DEFUN([gl_PASSFD], [
  AC_REQUIRE([gl_SYS_SOCKET_H])
  AC_CHECK_FUNCS_ONCE([recvmsg sendmsg])

  dnl Persuade AIX 5.2 <sys/socket.h> to declare CMSG_SPACE, CMSG_LEN.
  dnl CMSG_FIRSTHDR is POSIX 2008, but CMSG_SPACE is only in RFC 3542.
  AC_DEFINE([_LINUX_SOURCE_COMPAT], [1],
    [Define so that AIX headers are more compatible with GNU/Linux.])

  dnl Passfd prefers the POSIX use of msg.msg_control if the CMSG_* macros
  dnl are present, but can fall back to BSD 4.3 style of msg.msg_accrights.
  AC_CHECK_MEMBERS([struct msghdr.msg_accrights], [], [], [[
    #include <sys/types.h>
    #include <sys/socket.h>
  ]])
])
m4trace:m4/pathmax.m4:10: -1- AC_DEFUN([gl_PATHMAX], [
  dnl Prerequisites of lib/pathmax.h.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/pathmax.m4:18: -1- AC_DEFUN([gl_PATHMAX_SNIPPET], [[
/* Arrange to define PATH_MAX, like "pathmax.h" does. */
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <limits.h>
#if defined HAVE_SYS_PARAM_H && !defined PATH_MAX && !defined MAXPATHLEN
# include <sys/param.h>
#endif
#if !defined PATH_MAX && defined MAXPATHLEN
# define PATH_MAX MAXPATHLEN
#endif
#ifdef __hpux
# undef PATH_MAX
# define PATH_MAX 1024
#endif
#if defined _WIN32 && ! defined __CYGWIN__
# undef PATH_MAX
# define PATH_MAX 260
#endif
]])
m4trace:m4/pathmax.m4:41: -1- AC_DEFUN([gl_PATHMAX_SNIPPET_PREREQ], [
  AC_CHECK_HEADERS_ONCE([unistd.h sys/param.h])
])
m4trace:m4/pipe.m4:9: -1- AC_DEFUN([gl_FUNC_PIPE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([pipe])
  if test $ac_cv_func_pipe != yes; then
    HAVE_PIPE=0
  fi
])
m4trace:m4/pipe2.m4:9: -1- AC_DEFUN([gl_FUNC_PIPE2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare pipe2().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  gl_CHECK_FUNCS_ANDROID([pipe2], [[#include <unistd.h>]])
  if test $ac_cv_func_pipe2 != yes; then
    HAVE_PIPE2=0
    case "$gl_cv_onwards_func_pipe2" in
      future*) REPLACE_PIPE2=1 ;;
    esac
  else
    REPLACE_PIPE2=1
  fi
])
m4trace:m4/posix_spawn.m4:10: -1- AC_DEFUN([gl_POSIX_SPAWN], [
  AC_REQUIRE([gl_POSIX_SPAWN_BODY])
])
m4trace:m4/posix_spawn.m4:15: -1- AC_DEFUN([gl_POSIX_SPAWN_BODY], [
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
  AC_REQUIRE([gl_HAVE_POSIX_SPAWN])
  dnl Assume that when the main function exists, all the others,
  dnl except posix_spawnattr_{get,set}sched*, are available as well.
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnp])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_init])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_addclose])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_adddup2])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_addopen])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_destroy])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_init])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getflags])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setflags])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getpgroup])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setpgroup])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getsigdefault])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setsigdefault])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getsigmask])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setsigmask])
  dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_destroy])
  AC_CHECK_DECLS([posix_spawn], , , [[#include <spawn.h>]])
  if test $ac_cv_func_posix_spawn = yes; then
    m4_ifdef([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR],
      [dnl Module 'posix_spawn_file_actions_addchdir' is present.
       gl_CHECK_FUNCS_ANDROID([posix_spawn_file_actions_addchdir_np],
         [[#include <spawn.h>]])
       if test $ac_cv_func_posix_spawn_file_actions_addchdir_np = no; then
         dnl In order to implement the posix_spawn_file_actions_addchdir
         dnl function, we need to replace the entire posix_spawn facility.
         REPLACE_POSIX_SPAWN=1
       fi
      ])
    m4_ifdef([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR],
      [dnl Module 'posix_spawn_file_actions_addfchdir' is present.
       gl_CHECK_FUNCS_ANDROID([posix_spawn_file_actions_addfchdir_np],
         [[#include <spawn.h>]])
       if test $ac_cv_func_posix_spawn_file_actions_addfchdir_np = no; then
         dnl In order to implement the posix_spawn_file_actions_addfchdir
         dnl function, we need to replace the entire posix_spawn facility.
         REPLACE_POSIX_SPAWN=1
       fi
      ])
    if test $REPLACE_POSIX_SPAWN = 0; then
      gl_POSIX_SPAWN_WORKS
      case "$gl_cv_func_posix_spawn_works" in
        *yes) ;;
        *) REPLACE_POSIX_SPAWN=1 ;;
      esac
    fi
    if test $REPLACE_POSIX_SPAWN = 0; then
      gl_POSIX_SPAWN_SECURE
      case "$gl_cv_func_posix_spawn_secure_exec" in
        *yes) ;;
        *) REPLACE_POSIX_SPAWN=1 ;;
      esac
      case "$gl_cv_func_posix_spawnp_secure_exec" in
        *yes) ;;
        *) REPLACE_POSIX_SPAWN=1 ;;
      esac
    fi
    if test $REPLACE_POSIX_SPAWN = 0; then
      dnl Assume that these functions are available if POSIX_SPAWN_SETSCHEDULER
      dnl evaluates to nonzero.
      dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getschedpolicy])
      dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setschedpolicy])
      AC_CACHE_CHECK([whether posix_spawnattr_setschedpolicy is supported],
        [gl_cv_func_spawnattr_setschedpolicy],
        [AC_EGREP_CPP([POSIX scheduling supported], [
#include <spawn.h>
#if POSIX_SPAWN_SETSCHEDULER
 POSIX scheduling supported
#endif
],
           [gl_cv_func_spawnattr_setschedpolicy=yes],
           [gl_cv_func_spawnattr_setschedpolicy=no])
        ])
      dnl Assume that these functions are available if POSIX_SPAWN_SETSCHEDPARAM
      dnl evaluates to nonzero.
      dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_getschedparam])
      dnl AC_CHECK_FUNCS_ONCE([posix_spawnattr_setschedparam])
      AC_CACHE_CHECK([whether posix_spawnattr_setschedparam is supported],
        [gl_cv_func_spawnattr_setschedparam],
        [AC_EGREP_CPP([POSIX scheduling supported], [
#include <spawn.h>
#if POSIX_SPAWN_SETSCHEDPARAM
 POSIX scheduling supported
#endif
],
           [gl_cv_func_spawnattr_setschedparam=yes],
           [gl_cv_func_spawnattr_setschedparam=no])
        ])
    fi
  else
    dnl The system does not have the main function. Therefore we have to
    dnl provide our own implementation. This implies to define our own
    dnl posix_spawn_file_actions_t and posix_spawnattr_t types.
    if test $ac_cv_have_decl_posix_spawn = yes; then
      dnl The system declares posix_spawn() already. This declaration uses
      dnl the original posix_spawn_file_actions_t and posix_spawnattr_t types.
      dnl But we need a declaration with our own posix_spawn_file_actions_t and
      dnl posix_spawnattr_t types.
      REPLACE_POSIX_SPAWN=1
    fi
  fi
  if test $ac_cv_func_posix_spawn != yes || test $REPLACE_POSIX_SPAWN = 1; then
    AC_DEFINE([REPLACE_POSIX_SPAWN], [1],
      [Define if gnulib uses its own posix_spawn and posix_spawnp functions.])
  fi
])
m4trace:m4/posix_spawn.m4:136: -1- AC_DEFUN([gl_POSIX_SPAWN_WORKS], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether posix_spawn works], [gl_cv_func_posix_spawn_works],
    [if test $cross_compiling = no; then
       AC_LINK_IFELSE([AC_LANG_SOURCE([[
#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <spawn.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
]GL_MDA_DEFINES[

extern char **environ;

#ifndef STDIN_FILENO
# define STDIN_FILENO 0
#endif
#ifndef STDOUT_FILENO
# define STDOUT_FILENO 1
#endif
#ifndef STDERR_FILENO
# define STDERR_FILENO 2
#endif

#ifndef WTERMSIG
# define WTERMSIG(x) ((x) & 0x7f)
#endif
#ifndef WIFEXITED
# define WIFEXITED(x) (WTERMSIG (x) == 0)
#endif
#ifndef WEXITSTATUS
# define WEXITSTATUS(x) (((x) >> 8) & 0xff)
#endif

#define CHILD_PROGRAM_FILENAME "/non/exist/ent"

static int
fd_safer (int fd)
{
  if (0 <= fd && fd <= 2)
    {
      int f = fd_safer (dup (fd));
      int e = errno;
      close (fd);
      errno = e;
      fd = f;
    }

  return fd;
}

int
main ()
{
  char *argv[2] = { CHILD_PROGRAM_FILENAME, NULL };
  int ofd[2];
  sigset_t blocked_signals;
  sigset_t fatal_signal_set;
  posix_spawn_file_actions_t actions;
  bool actions_allocated;
  posix_spawnattr_t attrs;
  bool attrs_allocated;
  int err;
  pid_t child;
  int status;
  int exitstatus;

  setvbuf (stdout, NULL, _IOFBF, 0);
  puts ("This should be seen only once.");
  if (pipe (ofd) < 0 || (ofd[1] = fd_safer (ofd[1])) < 0)
    {
      perror ("cannot create pipe");
      exit (1);
    }
  sigprocmask (SIG_SETMASK, NULL, &blocked_signals);
  sigemptyset (&fatal_signal_set);
  sigaddset (&fatal_signal_set, SIGINT);
  sigaddset (&fatal_signal_set, SIGTERM);
  sigaddset (&fatal_signal_set, SIGHUP);
  sigaddset (&fatal_signal_set, SIGPIPE);
  sigprocmask (SIG_BLOCK, &fatal_signal_set, NULL);
  actions_allocated = false;
  attrs_allocated = false;
  if ((err = posix_spawn_file_actions_init (&actions)) != 0
      || (actions_allocated = true,
          (err = posix_spawn_file_actions_adddup2 (&actions, ofd[0], STDIN_FILENO)) != 0
          || (err = posix_spawn_file_actions_addclose (&actions, ofd[0])) != 0
          || (err = posix_spawn_file_actions_addclose (&actions, ofd[1])) != 0
          || (err = posix_spawnattr_init (&attrs)) != 0
          || (attrs_allocated = true,
              (err = posix_spawnattr_setsigmask (&attrs, &blocked_signals)) != 0
              || (err = posix_spawnattr_setflags (&attrs, POSIX_SPAWN_SETSIGMASK)) != 0)
          || (err = posix_spawnp (&child, CHILD_PROGRAM_FILENAME, &actions, &attrs, argv, environ)) != 0))
    {
      if (actions_allocated)
        posix_spawn_file_actions_destroy (&actions);
      if (attrs_allocated)
        posix_spawnattr_destroy (&attrs);
      sigprocmask (SIG_UNBLOCK, &fatal_signal_set, NULL);
      if (err == ENOENT)
        return 0;
      else
        {
          errno = err;
          perror ("subprocess failed");
          exit (1);
        }
    }
  posix_spawn_file_actions_destroy (&actions);
  posix_spawnattr_destroy (&attrs);
  sigprocmask (SIG_UNBLOCK, &fatal_signal_set, NULL);
  close (ofd[0]);
  close (ofd[1]);
  status = 0;
  while (waitpid (child, &status, 0) != child)
    ;
  if (!WIFEXITED (status))
    {
      fprintf (stderr, "subprocess terminated with unexpected wait status %d\n", status);
      exit (1);
    }
  exitstatus = WEXITSTATUS (status);
  if (exitstatus != 127)
    {
      fprintf (stderr, "subprocess terminated with unexpected exit status %d\n", exitstatus);
      exit (1);
    }
  return 0;
}
]])],
         [if test -s conftest$ac_exeext \
             && ./conftest$ac_exeext > conftest.out \
             && echo 'This should be seen only once.' > conftest.ok \
             && cmp conftest.out conftest.ok >/dev/null 2>&1; then
            gl_cv_func_posix_spawn_works=yes
          else
            gl_cv_func_posix_spawn_works=no
          fi],
         [gl_cv_func_posix_spawn_works=no])
       if test $gl_cv_func_posix_spawn_works = yes; then
         AC_RUN_IFELSE([AC_LANG_SOURCE([[
/* Test whether posix_spawn_file_actions_addopen supports filename arguments
   that contain special characters such as '*'.  */

#include <errno.h>
#include <fcntl.h>
#include <signal.h>
#include <spawn.h>
#include <stdbool.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
]GL_MDA_DEFINES[

extern char **environ;

#ifndef STDIN_FILENO
# define STDIN_FILENO 0
#endif
#ifndef STDOUT_FILENO
# define STDOUT_FILENO 1
#endif
#ifndef STDERR_FILENO
# define STDERR_FILENO 2
#endif

#ifndef WTERMSIG
# define WTERMSIG(x) ((x) & 0x7f)
#endif
#ifndef WIFEXITED
# define WIFEXITED(x) (WTERMSIG (x) == 0)
#endif
#ifndef WEXITSTATUS
# define WEXITSTATUS(x) (((x) >> 8) & 0xff)
#endif

#define CHILD_PROGRAM_FILENAME "conftest"
#define DATA_FILENAME "conftest%=*#?"

static int
parent_main (void)
{
  FILE *fp;
  char *argv[3] = { CHILD_PROGRAM_FILENAME, "-child", NULL };
  posix_spawn_file_actions_t actions;
  bool actions_allocated;
  int err;
  pid_t child;
  int status;
  int exitstatus;

  /* Create a data file with specific contents.  */
  fp = fopen (DATA_FILENAME, "wb");
  if (fp == NULL)
    {
      perror ("cannot create data file");
      return 1;
    }
  fwrite ("Halle Potta", 1, 11, fp);
  if (fflush (fp) || fclose (fp))
    {
      perror ("cannot prepare data file");
      return 2;
    }

  /* Avoid reading from our stdin, as it could block.  */
  freopen ("/dev/null", "rb", stdin);

  /* Test whether posix_spawn_file_actions_addopen with this file name
     actually works, but spawning a child that reads from this file.  */
  actions_allocated = false;
  if ((err = posix_spawn_file_actions_init (&actions)) != 0
      || (actions_allocated = true,
          (err = posix_spawn_file_actions_addopen (&actions, STDIN_FILENO, DATA_FILENAME, O_RDONLY, 0600)) != 0
          || (err = posix_spawn (&child, CHILD_PROGRAM_FILENAME, &actions, NULL, argv, environ)) != 0))
    {
      if (actions_allocated)
        posix_spawn_file_actions_destroy (&actions);
      errno = err;
      perror ("subprocess failed");
      return 3;
    }
  posix_spawn_file_actions_destroy (&actions);
  status = 0;
  while (waitpid (child, &status, 0) != child)
    ;
  if (!WIFEXITED (status))
    {
      fprintf (stderr, "subprocess terminated with unexpected wait status %d\n", status);
      return 4;
    }
  exitstatus = WEXITSTATUS (status);
  if (exitstatus != 0)
    {
      fprintf (stderr, "subprocess terminated with unexpected exit status %d\n", exitstatus);
      return 5;
    }
  return 0;
}

static int
child_main (void)
{
  char buf[1024];

  /* See if reading from STDIN_FILENO yields the expected contents.  */
  if (fread (buf, 1, sizeof (buf), stdin) == 11
      && memcmp (buf, "Halle Potta", 11) == 0)
    return 0;
  else
    return 8;
}

static void
cleanup_then_die (int sig)
{
  /* Clean up data file.  */
  unlink (DATA_FILENAME);

  /* Re-raise the signal and die from it.  */
  signal (sig, SIG_DFL);
  raise (sig);
}

int
main (int argc, char *argv[])
{
  int exitstatus;

  if (!(argc > 1 && strcmp (argv[1], "-child") == 0))
    {
      /* This is the parent process.  */
      signal (SIGINT, cleanup_then_die);
      signal (SIGTERM, cleanup_then_die);
      #ifdef SIGHUP
      signal (SIGHUP, cleanup_then_die);
      #endif

      exitstatus = parent_main ();
    }
  else
    {
      /* This is the child process.  */

      exitstatus = child_main ();
    }
  unlink (DATA_FILENAME);
  return exitstatus;
}
]])],
           [],
           [gl_cv_func_posix_spawn_works=no])
       fi
     else
       case "$host_os" in
         aix*) gl_cv_func_posix_spawn_works="guessing no";;
         *)    gl_cv_func_posix_spawn_works="guessing yes";;
       esac
     fi
    ])
])
m4trace:m4/posix_spawn.m4:449: -1- AC_DEFUN([gl_POSIX_SPAWN_SECURE], [
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  dnl On many platforms, posix_spawn or posix_spawnp allow executing a
  dnl script without a '#!' marker as a shell script. This is unsecure.
  AC_CACHE_CHECK([whether posix_spawn rejects scripts without shebang],
    [gl_cv_func_posix_spawn_secure_exec],
    [echo ':' > conftest.scr
     chmod a+x conftest.scr
     AC_RUN_IFELSE([AC_LANG_SOURCE([[
       #include <errno.h>
       #include <spawn.h>
       #include <stddef.h>
       #include <sys/types.h>
       #include <sys/wait.h>
       int
       main ()
       {
         const char *prog_path = "./conftest.scr";
         const char *prog_argv[2] = { prog_path, NULL };
         const char *environment[2] = { "PATH=.", NULL };
         pid_t child;
         int status;
         int err = posix_spawn (&child, prog_path, NULL, NULL,
                                (char **) prog_argv, (char **) environment);
         if (err == ENOEXEC)
           return 0;
         if (err != 0)
           return 1;
         status = 0;
         while (waitpid (child, &status, 0) != child)
           ;
         if (!WIFEXITED (status))
           return 2;
         if (WEXITSTATUS (status) != 127)
           return 3;
         return 0;
       }
       ]])],
       [gl_cv_func_posix_spawn_secure_exec=yes],
       [gl_cv_func_posix_spawn_secure_exec=no],
       [case "$host_os" in
          # Guess no on GNU/Hurd.
          gnu*)
            gl_cv_func_posix_spawn_secure_exec="guessing no" ;;
          # Guess yes on all other platforms.
          *)
            gl_cv_func_posix_spawn_secure_exec="guessing yes" ;;
        esac
       ])
     rm -f conftest.scr
    ])
  AC_CACHE_CHECK([whether posix_spawnp rejects scripts without shebang],
    [gl_cv_func_posix_spawnp_secure_exec],
    [echo ':' > conftest.scr
     chmod a+x conftest.scr
     AC_RUN_IFELSE([AC_LANG_SOURCE([[
       #include <errno.h>
       #include <spawn.h>
       #include <stddef.h>
       #include <sys/types.h>
       #include <sys/wait.h>
       int
       main ()
       {
         const char *prog_path = "./conftest.scr";
         const char *prog_argv[2] = { prog_path, NULL };
         const char *environment[2] = { "PATH=.", NULL };
         pid_t child;
         int status;
         int err = posix_spawnp (&child, prog_path, NULL, NULL,
                                 (char **) prog_argv, (char **) environment);
         if (err == ENOEXEC)
           return 0;
         if (err != 0)
           return 1;
         status = 0;
         while (waitpid (child, &status, 0) != child)
           ;
         if (!WIFEXITED (status))
           return 2;
         if (WEXITSTATUS (status) != 127)
           return 3;
         return 0;
       }
       ]])],
       [gl_cv_func_posix_spawnp_secure_exec=yes],
       [gl_cv_func_posix_spawnp_secure_exec=no],
       [case "$host_os" in
          # Guess yes on glibc systems (glibc >= 2.15 actually) except GNU/Hurd,
          # musl libc, NetBSD.
          *-gnu* | *-musl* | midipix* | netbsd*)
            gl_cv_func_posix_spawnp_secure_exec="guessing yes" ;;
          # Guess no on GNU/Hurd, macOS, FreeBSD, OpenBSD, AIX, Solaris, Cygwin.
          gnu* | darwin* | freebsd* | dragonfly* | midnightbsd* | openbsd* | \
          aix* | solaris* | cygwin*)
            gl_cv_func_posix_spawnp_secure_exec="guessing no" ;;
          # If we don't know, obey --enable-cross-guesses.
          *)
            gl_cv_func_posix_spawnp_secure_exec="$gl_cross_guess_normal" ;;
        esac
       ])
     rm -f conftest.scr
    ])
])
m4trace:m4/posix_spawn.m4:557: -1- AC_DEFUN([gl_PREREQ_POSIX_SPAWN_INTERNAL], [
  AC_CHECK_HEADERS([paths.h])
  AC_CHECK_FUNCS([confstr sched_setparam sched_setscheduler setegid seteuid vfork])
])
m4trace:m4/posix_spawn.m4:563: -1- AC_DEFUN([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE], [
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  gl_POSIX_SPAWN
  if test $REPLACE_POSIX_SPAWN = 1; then
    REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE=1
  else
    dnl On musl libc, posix_spawn_file_actions_addclose succeeds even if the fd
    dnl argument is negative.
    AC_CACHE_CHECK([whether posix_spawn_file_actions_addclose works],
      [gl_cv_func_posix_spawn_file_actions_addclose_works],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <spawn.h>
int main ()
{
  posix_spawn_file_actions_t actions;
  if (posix_spawn_file_actions_init (&actions) != 0)
    return 1;
  if (posix_spawn_file_actions_addclose (&actions, -5) == 0)
    return 2;
  return 0;
}]])],
         [gl_cv_func_posix_spawn_file_actions_addclose_works=yes],
         [gl_cv_func_posix_spawn_file_actions_addclose_works=no],
         [# Guess no on musl libc and Solaris, yes otherwise.
          case "$host_os" in
            *-musl* | midipix*) gl_cv_func_posix_spawn_file_actions_addclose_works="guessing no" ;;
            solaris*)           gl_cv_func_posix_spawn_file_actions_addclose_works="guessing no" ;;
                                # Guess no on native Windows.
            mingw* | windows*)  gl_cv_func_posix_spawn_file_actions_addclose_works="guessing no" ;;
            *)                  gl_cv_func_posix_spawn_file_actions_addclose_works="guessing yes" ;;
          esac
         ])
      ])
    case "$gl_cv_func_posix_spawn_file_actions_addclose_works" in
      *yes) ;;
      *) REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE=1 ;;
    esac
  fi
])
m4trace:m4/posix_spawn.m4:607: -1- AC_DEFUN([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2], [
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  gl_POSIX_SPAWN
  if test $REPLACE_POSIX_SPAWN = 1; then
    REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2=1
  else
    dnl On musl libc and Solaris 11.0, posix_spawn_file_actions_adddup2
    dnl succeeds even if the fd argument is out of range.
    AC_CACHE_CHECK([whether posix_spawn_file_actions_adddup2 works],
      [gl_cv_func_posix_spawn_file_actions_adddup2_works],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <spawn.h>
int main ()
{
  posix_spawn_file_actions_t actions;
  if (posix_spawn_file_actions_init (&actions) != 0)
    return 1;
  if (posix_spawn_file_actions_adddup2 (&actions, 10000000, 2) == 0)
    return 2;
  return 0;
}]])],
         [gl_cv_func_posix_spawn_file_actions_adddup2_works=yes],
         [gl_cv_func_posix_spawn_file_actions_adddup2_works=no],
         [# Guess no on musl libc and Solaris, yes otherwise.
          case "$host_os" in
            *-musl* | midipix*) gl_cv_func_posix_spawn_file_actions_adddup2_works="guessing no";;
            solaris*)           gl_cv_func_posix_spawn_file_actions_adddup2_works="guessing no";;
                                # Guess no on native Windows.
            mingw* | windows*)  gl_cv_func_posix_spawn_file_actions_adddup2_works="guessing no" ;;
            *)                  gl_cv_func_posix_spawn_file_actions_adddup2_works="guessing yes";;
          esac
         ])
      ])
    case "$gl_cv_func_posix_spawn_file_actions_adddup2_works" in
      *yes) ;;
      *) REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2=1 ;;
    esac
  fi
])
m4trace:m4/posix_spawn.m4:651: -1- AC_DEFUN([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN], [
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  gl_POSIX_SPAWN
  if test $REPLACE_POSIX_SPAWN = 1; then
    REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN=1
  else
    dnl On musl libc and Solaris 11.0, posix_spawn_file_actions_addopen
    dnl succeeds even if the fd argument is out of range.
    AC_CACHE_CHECK([whether posix_spawn_file_actions_addopen works],
      [gl_cv_func_posix_spawn_file_actions_addopen_works],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <spawn.h>
#include <fcntl.h>
int main ()
{
  posix_spawn_file_actions_t actions;
  if (posix_spawn_file_actions_init (&actions) != 0)
    return 1;
  if (posix_spawn_file_actions_addopen (&actions, 10000000, "foo", 0, O_RDONLY)
      == 0)
    return 2;
  return 0;
}]])],
         [gl_cv_func_posix_spawn_file_actions_addopen_works=yes],
         [gl_cv_func_posix_spawn_file_actions_addopen_works=no],
         [# Guess no on musl libc and Solaris, yes otherwise.
          case "$host_os" in
            *-musl* | midipix*) gl_cv_func_posix_spawn_file_actions_addopen_works="guessing no";;
            solaris*)           gl_cv_func_posix_spawn_file_actions_addopen_works="guessing no";;
                                # Guess no on native Windows.
            mingw* | windows*)  gl_cv_func_posix_spawn_file_actions_addopen_works="guessing no" ;;
            *)                  gl_cv_func_posix_spawn_file_actions_addopen_works="guessing yes";;
          esac
         ])
      ])
    case "$gl_cv_func_posix_spawn_file_actions_addopen_works" in
      *yes) ;;
      *) REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN=1 ;;
    esac
  fi
])
m4trace:m4/posix_spawn_faction_addchdir.m4:9: -1- AC_DEFUN([gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR], [
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
  AC_REQUIRE([AC_PROG_CC])
  gl_POSIX_SPAWN
  AC_CHECK_FUNCS_ONCE([posix_spawn_file_actions_addchdir])
  gl_CHECK_FUNCS_ANDROID([posix_spawn_file_actions_addchdir_np],
    [[#include <spawn.h>]])
  if test $ac_cv_func_posix_spawn_file_actions_addchdir = yes; then
    dnl This function is not yet standardized. Therefore override the
    dnl system's implementation always.
    REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR=1
  else
    HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR=0
  fi
])
m4trace:m4/pthread-once.m4:9: -1- AC_DEFUN([gl_PTHREAD_ONCE], [
  AC_REQUIRE([gl_PTHREAD_H])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw* | windows*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_ONCE=1
  else
    if test $HAVE_PTHREAD_H = 0; then
      HAVE_PTHREAD_ONCE=0
    else
      dnl Work around Cygwin 3.5.3 bug.
      AC_CACHE_CHECK([whether pthread_once works],
        [gl_cv_func_pthread_once_works],
        [case "$host_os" in
           cygwin*) gl_cv_func_pthread_once_works="guessing no" ;;
           *)       gl_cv_func_pthread_once_works="yes" ;;
         esac
        ])
      case "$gl_cv_func_pthread_once_works" in
        *yes) ;;
        *) REPLACE_PTHREAD_ONCE=1 ;;
      esac
    fi
  fi
])
m4trace:m4/pthread-spin.m4:9: -1- AC_DEFUN_ONCE([gl_PTHREAD_SPIN], [
  AC_REQUIRE([gl_PTHREAD_H_PART1])
  AC_REQUIRE([AC_CANONICAL_HOST])

  if { case "$host_os" in mingw* | windows*) true;; *) false;; esac; } \
     && test $gl_threads_api = windows; then
    dnl Choose function names that don't conflict with the mingw-w64 winpthreads
    dnl library.
    REPLACE_PTHREAD_SPIN_INIT=1
    REPLACE_PTHREAD_SPIN_LOCK=1
    REPLACE_PTHREAD_SPIN_TRYLOCK=1
    REPLACE_PTHREAD_SPIN_UNLOCK=1
    REPLACE_PTHREAD_SPIN_DESTROY=1
  else
    if test $HAVE_PTHREAD_H = 0 || test $HAVE_PTHREAD_SPINLOCK_T = 0; then
      HAVE_PTHREAD_SPIN_INIT=0
      HAVE_PTHREAD_SPIN_LOCK=0
      HAVE_PTHREAD_SPIN_TRYLOCK=0
      HAVE_PTHREAD_SPIN_UNLOCK=0
      HAVE_PTHREAD_SPIN_DESTROY=0
    else
      dnl Test whether the gnulib module 'threadlib' is in use.
      dnl Some packages like Emacs use --avoid=threadlib.
      dnl Write the symbol in such a way that it does not cause 'aclocal' to pick
      dnl the threadlib.m4 file that is installed in $PREFIX/share/aclocal/.
      m4_ifdef([gl_][THREADLIB], [
        AC_REQUIRE([gl_][THREADLIB])
        dnl Test whether the functions actually exist.
        dnl FreeBSD 5.2.1 declares them but does not define them.
        AC_CACHE_CHECK([for pthread_spin_init],
          [gl_cv_func_pthread_spin_init_in_LIBMULTITHREAD],
          [gl_saved_LIBS="$LIBS"
           LIBS="$LIBS $LIBMULTITHREAD"
           AC_LINK_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <pthread.h>
                ]],
                [[pthread_spinlock_t lock;
                  return pthread_spin_init (&lock, 0);
                ]])
             ],
             [gl_cv_func_pthread_spin_init_in_LIBMULTITHREAD=yes],
             [gl_cv_func_pthread_spin_init_in_LIBMULTITHREAD=no])
           LIBS="$gl_saved_LIBS"
          ])
        if test $gl_cv_func_pthread_spin_init_in_LIBMULTITHREAD != yes; then
          HAVE_PTHREAD_SPIN_INIT=0
          REPLACE_PTHREAD_SPIN_INIT=1
          HAVE_PTHREAD_SPIN_LOCK=0
          REPLACE_PTHREAD_SPIN_LOCK=1
          HAVE_PTHREAD_SPIN_TRYLOCK=0
          REPLACE_PTHREAD_SPIN_TRYLOCK=1
          HAVE_PTHREAD_SPIN_UNLOCK=0
          REPLACE_PTHREAD_SPIN_UNLOCK=1
          HAVE_PTHREAD_SPIN_DESTROY=0
          REPLACE_PTHREAD_SPIN_DESTROY=1
        fi
      ], [
        :
      ])
    fi
  fi
])
m4trace:m4/pthread_h.m4:9: -1- AC_DEFUN_ONCE([gl_PTHREAD_H_PART1], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_PTHREADLIB])

  gl_CHECK_NEXT_HEADERS([pthread.h])
  if test $ac_cv_header_pthread_h = yes; then
    HAVE_PTHREAD_H=1
    dnl On mingw, if --enable-threads=windows or gl_AVOID_WINPTHREAD is used,
    dnl ignore the <pthread.h> from the mingw-w64 winpthreads library.
    m4_ifdef([gl_][THREADLIB], [
      AC_REQUIRE([gl_][THREADLIB])
      if { case "$host_os" in mingw* | windows*) true;; *) false;; esac; } \
         && test $gl_threads_api = windows; then
        HAVE_PTHREAD_H=0
      fi
    ])
  else
    HAVE_PTHREAD_H=0
  fi
  AC_SUBST([HAVE_PTHREAD_H])

  AC_CHECK_TYPES([pthread_t, pthread_spinlock_t], [], [],
    [AC_INCLUDES_DEFAULT[
     #if HAVE_PTHREAD_H
      #include <pthread.h>
     #endif]])
  if test $ac_cv_type_pthread_t != yes; then
    HAVE_PTHREAD_T=0
  fi
  if test $ac_cv_type_pthread_spinlock_t != yes; then
    HAVE_PTHREAD_SPINLOCK_T=0
  fi
])
m4trace:m4/pthread_h.m4:48: -1- AC_DEFUN([gl_PTHREAD_H], [
  AC_REQUIRE([gl_PTHREAD_H_PART1])

  dnl Set HAVE_PTHREAD_SPIN_INIT, REPLACE_PTHREAD_SPIN_INIT.
  gl_PTHREAD_SPIN

  dnl Constants may be defined as C preprocessor macros or as enum items.

  AC_CACHE_CHECK([for PTHREAD_CREATE_DETACHED],
    [gl_cv_const_PTHREAD_CREATE_DETACHED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_CREATE_DETACHED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=yes],
       [gl_cv_const_PTHREAD_CREATE_DETACHED=no])
    ])
  if test $gl_cv_const_PTHREAD_CREATE_DETACHED != yes; then
    HAVE_PTHREAD_CREATE_DETACHED=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_RECURSIVE],
    [gl_cv_const_PTHREAD_MUTEX_RECURSIVE],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_RECURSIVE;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=yes],
       [gl_cv_const_PTHREAD_MUTEX_RECURSIVE=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_RECURSIVE != yes; then
    HAVE_PTHREAD_MUTEX_RECURSIVE=0
  fi

  AC_CACHE_CHECK([for PTHREAD_MUTEX_ROBUST],
    [gl_cv_const_PTHREAD_MUTEX_ROBUST],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_MUTEX_ROBUST;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=yes],
       [gl_cv_const_PTHREAD_MUTEX_ROBUST=no])
    ])
  if test $gl_cv_const_PTHREAD_MUTEX_ROBUST != yes; then
    HAVE_PTHREAD_MUTEX_ROBUST=0
  fi

  AC_CACHE_CHECK([for PTHREAD_PROCESS_SHARED],
    [gl_cv_const_PTHREAD_PROCESS_SHARED],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <pthread.h>
            int x = PTHREAD_PROCESS_SHARED;
          ]],
          [[]])],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=yes],
       [gl_cv_const_PTHREAD_PROCESS_SHARED=no])
    ])
  if test $gl_cv_const_PTHREAD_PROCESS_SHARED != yes; then
    HAVE_PTHREAD_PROCESS_SHARED=0
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <pthread.h>
    ]], [
    pthread_create pthread_attr_init pthread_attr_getdetachstate
    pthread_attr_setdetachstate pthread_attr_destroy pthread_self pthread_equal
    pthread_detach pthread_join pthread_exit
    pthread_once
    pthread_mutex_init pthread_mutexattr_init pthread_mutexattr_gettype
    pthread_mutexattr_settype pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust pthread_mutexattr_destroy pthread_mutex_lock
    pthread_mutex_trylock pthread_mutex_timedlock pthread_mutex_unlock
    pthread_mutex_destroy
    pthread_rwlock_init pthread_rwlockattr_init pthread_rwlockattr_destroy
    pthread_rwlock_rdlock pthread_rwlock_wrlock pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock pthread_rwlock_unlock pthread_rwlock_destroy
    pthread_cond_init pthread_condattr_init pthread_condattr_destroy
    pthread_cond_wait pthread_cond_timedwait pthread_cond_signal
    pthread_cond_broadcast pthread_cond_destroy
    pthread_key_create pthread_setspecific pthread_getspecific
    pthread_key_delete
    pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock
    pthread_spin_destroy])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl For backward compatibility with gnulib versions <= 2019-07.
  LIB_PTHREAD="$LIBPMULTITHREAD"
  AC_SUBST([LIB_PTHREAD])
])
m4trace:m4/pthread_h.m4:154: -1- AC_DEFUN([gl_PTHREAD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_PTHREAD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/pthread_h.m4:166: -1- AC_DEFUN([gl_PTHREAD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_PTHREAD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_PTHREAD_H_DEFAULTS])
])
m4trace:m4/pthread_h.m4:182: -1- AC_DEFUN([gl_PTHREAD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PTHREAD_T=1;                      AC_SUBST([HAVE_PTHREAD_T])
  HAVE_PTHREAD_SPINLOCK_T=1;             AC_SUBST([HAVE_PTHREAD_SPINLOCK_T])
  HAVE_PTHREAD_CREATE_DETACHED=1;        AC_SUBST([HAVE_PTHREAD_CREATE_DETACHED])
  HAVE_PTHREAD_MUTEX_RECURSIVE=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_RECURSIVE])
  HAVE_PTHREAD_MUTEX_ROBUST=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_ROBUST])
  HAVE_PTHREAD_PROCESS_SHARED=1;         AC_SUBST([HAVE_PTHREAD_PROCESS_SHARED])
  HAVE_PTHREAD_CREATE=1;                 AC_SUBST([HAVE_PTHREAD_CREATE])
  HAVE_PTHREAD_ATTR_INIT=1;              AC_SUBST([HAVE_PTHREAD_ATTR_INIT])
  HAVE_PTHREAD_ATTR_GETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_GETDETACHSTATE])
  HAVE_PTHREAD_ATTR_SETDETACHSTATE=1;    AC_SUBST([HAVE_PTHREAD_ATTR_SETDETACHSTATE])
  HAVE_PTHREAD_ATTR_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_ATTR_DESTROY])
  HAVE_PTHREAD_SELF=1;                   AC_SUBST([HAVE_PTHREAD_SELF])
  HAVE_PTHREAD_EQUAL=1;                  AC_SUBST([HAVE_PTHREAD_EQUAL])
  HAVE_PTHREAD_DETACH=1;                 AC_SUBST([HAVE_PTHREAD_DETACH])
  HAVE_PTHREAD_JOIN=1;                   AC_SUBST([HAVE_PTHREAD_JOIN])
  HAVE_PTHREAD_EXIT=1;                   AC_SUBST([HAVE_PTHREAD_EXIT])
  HAVE_PTHREAD_ONCE=1;                   AC_SUBST([HAVE_PTHREAD_ONCE])
  HAVE_PTHREAD_MUTEX_INIT=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_INIT])
  HAVE_PTHREAD_MUTEXATTR_INIT=1;         AC_SUBST([HAVE_PTHREAD_MUTEXATTR_INIT])
  HAVE_PTHREAD_MUTEXATTR_GETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETTYPE])
  HAVE_PTHREAD_MUTEXATTR_SETTYPE=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETTYPE])
  HAVE_PTHREAD_MUTEXATTR_GETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_GETROBUST])
  HAVE_PTHREAD_MUTEXATTR_SETROBUST=1;    AC_SUBST([HAVE_PTHREAD_MUTEXATTR_SETROBUST])
  HAVE_PTHREAD_MUTEXATTR_DESTROY=1;      AC_SUBST([HAVE_PTHREAD_MUTEXATTR_DESTROY])
  HAVE_PTHREAD_MUTEX_LOCK=1;             AC_SUBST([HAVE_PTHREAD_MUTEX_LOCK])
  HAVE_PTHREAD_MUTEX_TRYLOCK=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_TRYLOCK])
  HAVE_PTHREAD_MUTEX_TIMEDLOCK=1;        AC_SUBST([HAVE_PTHREAD_MUTEX_TIMEDLOCK])
  HAVE_PTHREAD_MUTEX_UNLOCK=1;           AC_SUBST([HAVE_PTHREAD_MUTEX_UNLOCK])
  HAVE_PTHREAD_MUTEX_DESTROY=1;          AC_SUBST([HAVE_PTHREAD_MUTEX_DESTROY])
  HAVE_PTHREAD_RWLOCK_INIT=1;            AC_SUBST([HAVE_PTHREAD_RWLOCK_INIT])
  HAVE_PTHREAD_RWLOCKATTR_INIT=1;        AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_INIT])
  HAVE_PTHREAD_RWLOCKATTR_DESTROY=1;     AC_SUBST([HAVE_PTHREAD_RWLOCKATTR_DESTROY])
  HAVE_PTHREAD_RWLOCK_RDLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_RDLOCK])
  HAVE_PTHREAD_RWLOCK_WRLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_WRLOCK])
  HAVE_PTHREAD_RWLOCK_TRYRDLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYRDLOCK])
  HAVE_PTHREAD_RWLOCK_TRYWRLOCK=1;       AC_SUBST([HAVE_PTHREAD_RWLOCK_TRYWRLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK=1;     AC_SUBST([HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  HAVE_PTHREAD_RWLOCK_UNLOCK=1;          AC_SUBST([HAVE_PTHREAD_RWLOCK_UNLOCK])
  HAVE_PTHREAD_RWLOCK_DESTROY=1;         AC_SUBST([HAVE_PTHREAD_RWLOCK_DESTROY])
  HAVE_PTHREAD_COND_INIT=1;              AC_SUBST([HAVE_PTHREAD_COND_INIT])
  HAVE_PTHREAD_CONDATTR_INIT=1;          AC_SUBST([HAVE_PTHREAD_CONDATTR_INIT])
  HAVE_PTHREAD_CONDATTR_DESTROY=1;       AC_SUBST([HAVE_PTHREAD_CONDATTR_DESTROY])
  HAVE_PTHREAD_COND_WAIT=1;              AC_SUBST([HAVE_PTHREAD_COND_WAIT])
  HAVE_PTHREAD_COND_TIMEDWAIT=1;         AC_SUBST([HAVE_PTHREAD_COND_TIMEDWAIT])
  HAVE_PTHREAD_COND_SIGNAL=1;            AC_SUBST([HAVE_PTHREAD_COND_SIGNAL])
  HAVE_PTHREAD_COND_BROADCAST=1;         AC_SUBST([HAVE_PTHREAD_COND_BROADCAST])
  HAVE_PTHREAD_COND_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_COND_DESTROY])
  HAVE_PTHREAD_KEY_CREATE=1;             AC_SUBST([HAVE_PTHREAD_KEY_CREATE])
  HAVE_PTHREAD_SETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_SETSPECIFIC])
  HAVE_PTHREAD_GETSPECIFIC=1;            AC_SUBST([HAVE_PTHREAD_GETSPECIFIC])
  HAVE_PTHREAD_KEY_DELETE=1;             AC_SUBST([HAVE_PTHREAD_KEY_DELETE])
  HAVE_PTHREAD_SPIN_INIT=1;              AC_SUBST([HAVE_PTHREAD_SPIN_INIT])
  HAVE_PTHREAD_SPIN_LOCK=1;              AC_SUBST([HAVE_PTHREAD_SPIN_LOCK])
  HAVE_PTHREAD_SPIN_TRYLOCK=1;           AC_SUBST([HAVE_PTHREAD_SPIN_TRYLOCK])
  HAVE_PTHREAD_SPIN_UNLOCK=1;            AC_SUBST([HAVE_PTHREAD_SPIN_UNLOCK])
  HAVE_PTHREAD_SPIN_DESTROY=1;           AC_SUBST([HAVE_PTHREAD_SPIN_DESTROY])
  REPLACE_PTHREAD_CREATE=0;              AC_SUBST([REPLACE_PTHREAD_CREATE])
  REPLACE_PTHREAD_ATTR_INIT=0;           AC_SUBST([REPLACE_PTHREAD_ATTR_INIT])
  REPLACE_PTHREAD_ATTR_GETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_GETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_SETDETACHSTATE=0; AC_SUBST([REPLACE_PTHREAD_ATTR_SETDETACHSTATE])
  REPLACE_PTHREAD_ATTR_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_ATTR_DESTROY])
  REPLACE_PTHREAD_SELF=0;                AC_SUBST([REPLACE_PTHREAD_SELF])
  REPLACE_PTHREAD_EQUAL=0;               AC_SUBST([REPLACE_PTHREAD_EQUAL])
  REPLACE_PTHREAD_DETACH=0;              AC_SUBST([REPLACE_PTHREAD_DETACH])
  REPLACE_PTHREAD_JOIN=0;                AC_SUBST([REPLACE_PTHREAD_JOIN])
  REPLACE_PTHREAD_EXIT=0;                AC_SUBST([REPLACE_PTHREAD_EXIT])
  REPLACE_PTHREAD_ONCE=0;                AC_SUBST([REPLACE_PTHREAD_ONCE])
  REPLACE_PTHREAD_MUTEX_INIT=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_INIT])
  REPLACE_PTHREAD_MUTEXATTR_INIT=0;      AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_INIT])
  REPLACE_PTHREAD_MUTEXATTR_GETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_SETTYPE=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETTYPE])
  REPLACE_PTHREAD_MUTEXATTR_GETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_GETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_SETROBUST=0; AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_SETROBUST])
  REPLACE_PTHREAD_MUTEXATTR_DESTROY=0;   AC_SUBST([REPLACE_PTHREAD_MUTEXATTR_DESTROY])
  REPLACE_PTHREAD_MUTEX_LOCK=0;          AC_SUBST([REPLACE_PTHREAD_MUTEX_LOCK])
  REPLACE_PTHREAD_MUTEX_TRYLOCK=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_TRYLOCK])
  REPLACE_PTHREAD_MUTEX_TIMEDLOCK=0;     AC_SUBST([REPLACE_PTHREAD_MUTEX_TIMEDLOCK])
  REPLACE_PTHREAD_MUTEX_UNLOCK=0;        AC_SUBST([REPLACE_PTHREAD_MUTEX_UNLOCK])
  REPLACE_PTHREAD_MUTEX_DESTROY=0;       AC_SUBST([REPLACE_PTHREAD_MUTEX_DESTROY])
  REPLACE_PTHREAD_RWLOCK_INIT=0;         AC_SUBST([REPLACE_PTHREAD_RWLOCK_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_INIT=0;     AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_INIT])
  REPLACE_PTHREAD_RWLOCKATTR_DESTROY=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCKATTR_DESTROY])
  REPLACE_PTHREAD_RWLOCK_RDLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_RDLOCK])
  REPLACE_PTHREAD_RWLOCK_WRLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_WRLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYRDLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TRYWRLOCK=0;    AC_SUBST([REPLACE_PTHREAD_RWLOCK_TRYWRLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK])
  REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK=0;  AC_SUBST([REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK])
  REPLACE_PTHREAD_RWLOCK_UNLOCK=0;       AC_SUBST([REPLACE_PTHREAD_RWLOCK_UNLOCK])
  REPLACE_PTHREAD_RWLOCK_DESTROY=0;      AC_SUBST([REPLACE_PTHREAD_RWLOCK_DESTROY])
  REPLACE_PTHREAD_COND_INIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_INIT])
  REPLACE_PTHREAD_CONDATTR_INIT=0;       AC_SUBST([REPLACE_PTHREAD_CONDATTR_INIT])
  REPLACE_PTHREAD_CONDATTR_DESTROY=0;    AC_SUBST([REPLACE_PTHREAD_CONDATTR_DESTROY])
  REPLACE_PTHREAD_COND_WAIT=0;           AC_SUBST([REPLACE_PTHREAD_COND_WAIT])
  REPLACE_PTHREAD_COND_TIMEDWAIT=0;      AC_SUBST([REPLACE_PTHREAD_COND_TIMEDWAIT])
  REPLACE_PTHREAD_COND_SIGNAL=0;         AC_SUBST([REPLACE_PTHREAD_COND_SIGNAL])
  REPLACE_PTHREAD_COND_BROADCAST=0;      AC_SUBST([REPLACE_PTHREAD_COND_BROADCAST])
  REPLACE_PTHREAD_COND_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_COND_DESTROY])
  REPLACE_PTHREAD_KEY_CREATE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_CREATE])
  REPLACE_PTHREAD_SETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_SETSPECIFIC])
  REPLACE_PTHREAD_GETSPECIFIC=0;         AC_SUBST([REPLACE_PTHREAD_GETSPECIFIC])
  REPLACE_PTHREAD_KEY_DELETE=0;          AC_SUBST([REPLACE_PTHREAD_KEY_DELETE])
  REPLACE_PTHREAD_SPIN_INIT=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_INIT])
  REPLACE_PTHREAD_SPIN_LOCK=0;           AC_SUBST([REPLACE_PTHREAD_SPIN_LOCK])
  REPLACE_PTHREAD_SPIN_TRYLOCK=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_TRYLOCK])
  REPLACE_PTHREAD_SPIN_UNLOCK=0;         AC_SUBST([REPLACE_PTHREAD_SPIN_UNLOCK])
  REPLACE_PTHREAD_SPIN_DESTROY=0;        AC_SUBST([REPLACE_PTHREAD_SPIN_DESTROY])
])
m4trace:m4/pthread_rwlock_rdlock.m4:37: -1- AC_DEFUN([gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [
  AC_REQUIRE([gl_THREADLIB])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([whether pthread_rwlock_rdlock prefers a writer to a reader],
    [gl_cv_pthread_rwlock_rdlock_prefer_writer],
    [saved_LIBS="$LIBS"
     LIBS="$LIBS $LIBMULTITHREAD"
     AC_RUN_IFELSE(
       [AC_LANG_SOURCE([[
#include <errno.h>
#include <pthread.h>
#include <stdlib.h>
#include <unistd.h>

#define SUCCEED() exit (0)
#define FAILURE() exit (1)
#define UNEXPECTED(n) (exit (10 + (n)))

/* The main thread creates the waiting writer and the requesting reader threads
   in the default way; this guarantees that they have the same priority.
   We can reuse the main thread as first reader thread.  */

static pthread_rwlock_t lock;
static pthread_t reader1;
static pthread_t writer;
static pthread_t reader2;
static pthread_t timer;
/* Used to pass control from writer to reader2 and from reader2 to timer,
   as in a relay race.
   Passing control from one running thread to another running thread
   is most likely faster than to create the second thread.  */
static pthread_mutex_t baton;

static void *
timer_func (void *ignored)
{
  /* Step 13 (can be before or after step 12):
     The timer thread takes the baton, then waits a moment to make sure
     it can tell whether the second reader thread is blocked at step 12.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (13);
  usleep (100000);
  /* By the time we get here, it's clear that the second reader thread is
     blocked at step 12.  This is the desired behaviour.  */
  SUCCEED ();
}

static void *
reader2_func (void *ignored)
{
  int err;

  /* Step 8 (can be before or after step 7):
     The second reader thread takes the baton, then waits a moment to make sure
     the writer thread has reached step 7.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (8);
  usleep (100000);
  /* Step 9: The second reader thread requests the lock.  */
  err = pthread_rwlock_tryrdlock (&lock);
  if (err == 0)
    FAILURE ();
  else if (err != EBUSY)
    UNEXPECTED (9);
  /* Step 10: Launch a timer, to test whether the next call blocks.  */
  if (pthread_create (&timer, NULL, timer_func, NULL))
    UNEXPECTED (10);
  /* Step 11: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (11);
  /* Step 12: The second reader thread requests the lock.  */
  err = pthread_rwlock_rdlock (&lock);
  if (err == 0)
    FAILURE ();
  else
    UNEXPECTED (12);
}

static void *
writer_func (void *ignored)
{
  /* Step 4: Take the baton, so that the second reader thread does not go ahead
     too early.  */
  if (pthread_mutex_lock (&baton))
    UNEXPECTED (4);
  /* Step 5: Create the second reader thread.  */
  if (pthread_create (&reader2, NULL, reader2_func, NULL))
    UNEXPECTED (5);
  /* Step 6: Release the baton.  */
  if (pthread_mutex_unlock (&baton))
    UNEXPECTED (6);
  /* Step 7: The writer thread requests the lock.  */
  if (pthread_rwlock_wrlock (&lock))
    UNEXPECTED (7);
  return NULL;
}

int
main ()
{
  reader1 = pthread_self ();

  /* Step 1: The main thread initializes the lock and the baton.  */
  if (pthread_rwlock_init (&lock, NULL))
    UNEXPECTED (1);
  if (pthread_mutex_init (&baton, NULL))
    UNEXPECTED (1);
  /* Step 2: The main thread acquires the lock as a reader.  */
  if (pthread_rwlock_rdlock (&lock))
    UNEXPECTED (2);
  /* Step 3: Create the writer thread.  */
  if (pthread_create (&writer, NULL, writer_func, NULL))
    UNEXPECTED (3);
  /* Job done.  Go to sleep.  */
  for (;;)
    {
      sleep (1);
    }
}
]])],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=yes],
       [gl_cv_pthread_rwlock_rdlock_prefer_writer=no],
       [case "$host_os" in
                              # Guess no on glibc systems.
          *-gnu* | gnu*)      gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                              # Guess no on musl systems.
          *-musl* | midipix*) gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                              # Guess no on bionic systems.
          *-android*)         gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no" ;;
                              # Guess yes on native Windows with the mingw-w64 winpthreads library.
                              # Guess no on native Windows with the gnulib windows-rwlock module.
          mingw* | windows*)  if test "$gl_use_threads" = yes || test "$gl_use_threads" = posix; then
                                gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing yes"
                              else
                                gl_cv_pthread_rwlock_rdlock_prefer_writer="guessing no"
                              fi
                              ;;
                              # If we don't know, obey --enable-cross-guesses.
          *)                  gl_cv_pthread_rwlock_rdlock_prefer_writer="$gl_cross_guess_normal" ;;
         esac
       ])
     LIBS="$saved_LIBS"
    ])
  case "$gl_cv_pthread_rwlock_rdlock_prefer_writer" in
    *yes)
      AC_DEFINE([HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER], [1],
        [Define if the 'pthread_rwlock_rdlock' function prefers a writer to a reader.])
      ;;
  esac
])
m4trace:m4/raise.m4:9: -1- AC_DEFUN([gl_FUNC_RAISE], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS([raise])
  if test $ac_cv_func_raise = no; then
    HAVE_RAISE=0
  else
    m4_ifdef([gl_MSVC_INVAL], [
      AC_REQUIRE([gl_MSVC_INVAL])
      if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
        REPLACE_RAISE=1
      fi
    ])
    m4_ifdef([gl_SIGNALBLOCKING], [
      gl_SIGNALBLOCKING
      if test $HAVE_POSIX_SIGNALBLOCKING = 0; then
        m4_ifdef([gl_SIGNAL_SIGPIPE], [
          gl_SIGNAL_SIGPIPE
          if test $gl_cv_header_signal_h_SIGPIPE != yes; then
            REPLACE_RAISE=1
          fi
        ], [:])
      fi
    ])
  fi
])
m4trace:m4/raise.m4:38: -1- AC_DEFUN([gl_PREREQ_RAISE], [:])
m4trace:m4/rawmemchr.m4:9: -1- AC_DEFUN([gl_FUNC_RAWMEMCHR], [
  dnl Persuade glibc <string.h> to declare rawmemchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_FUNCS([rawmemchr])
  if test $ac_cv_func_rawmemchr = no; then
    HAVE_RAWMEMCHR=0
  fi
])
m4trace:m4/rawmemchr.m4:22: -1- AC_DEFUN([gl_PREREQ_RAWMEMCHR], [:])
m4trace:m4/read.m4:9: -1- AC_DEFUN([gl_FUNC_READ], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_READ=1
    fi
  ])
  dnl This ifdef is just an optimization, to avoid performing a configure
  dnl check whose result is not used. It does not make the test of
  dnl GNULIB_UNISTD_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_READ=1
    fi
  ])
])
m4trace:m4/read.m4:30: -1- AC_DEFUN([gl_PREREQ_READ], [:])
m4trace:m4/readdir.m4:9: -1- AC_DEFUN([gl_FUNC_READDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([readdir])
  if test $ac_cv_func_readdir = no; then
    HAVE_READDIR=0
  else
    dnl Replace readdir() on native Windows and OS/2 kLIBC,
    dnl to support fdopendir().
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      REPLACE_READDIR=1
    fi
  fi
])
m4trace:m4/readlink.m4:9: -1- AC_DEFUN([gl_FUNC_READLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([readlink])
  if test $ac_cv_func_readlink = no; then
    HAVE_READLINK=0
  else
    AC_CACHE_CHECK([whether readlink signature is correct],
      [gl_cv_decl_readlink_works],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
             /* Cause compilation failure if original declaration has
                wrong type.  */
             ssize_t readlink (const char *, char *, size_t);
           ]])
         ],
         [gl_cv_decl_readlink_works=yes], [gl_cv_decl_readlink_works=no])])

    dnl Solaris 9 ignores trailing slash.
    dnl FreeBSD 7.2 dereferences only one level of links with trailing slash.
    AC_CACHE_CHECK([whether readlink handles trailing slash correctly],
      [gl_cv_func_readlink_trailing_slash],
      [# We have readlink, so assume ln -s works.
       ln -s conftest.no-such conftest.link
       ln -s conftest.link conftest.lnk2
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
           ]],
           [[char buf[20];
             return readlink ("conftest.lnk2/", buf, sizeof buf) != -1;
           ]])
         ],
         [gl_cv_func_readlink_trailing_slash=yes],
         [gl_cv_func_readlink_trailing_slash=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_trailing_slash="guessing yes" ;;
            # Guess yes on systems that emulate the Linux system calls.
            midipix*)
              gl_cv_func_readlink_trailing_slash="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_trailing_slash="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_trailing_slash="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case "$gl_cv_func_readlink_trailing_slash" in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRAILING_SLASH_BUG], [1], [Define to 1 if readlink
          fails to recognize a trailing slash.])
        REPLACE_READLINK=1
        ;;
    esac

    AC_CACHE_CHECK([whether readlink truncates results correctly],
      [gl_cv_func_readlink_truncate],
      [# We have readlink, so assume ln -s works.
       ln -s ab conftest.link
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
           ]],
           [[char c;
             return readlink ("conftest.link", &c, 1) != 1;
           ]])
         ],
         [gl_cv_func_readlink_truncate=yes],
         [gl_cv_func_readlink_truncate=no],
         [case "$host_os" in
            # Guess yes on Linux or glibc systems.
            linux-* | linux | *-gnu* | gnu*)
              gl_cv_func_readlink_truncate="guessing yes" ;;
            # Guess yes on systems that emulate the Linux system calls.
            midipix*)
              gl_cv_func_readlink_truncate="guessing yes" ;;
            # Guess no on AIX or HP-UX.
            aix* | hpux*)
              gl_cv_func_readlink_truncate="guessing no" ;;
            # If we don't know, obey --enable-cross-guesses.
            *)
              gl_cv_func_readlink_truncate="$gl_cross_guess_normal" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case $gl_cv_func_readlink_truncate in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRUNCATE_BUG], [1], [Define to 1 if readlink
          sets errno instead of truncating a too-long link.])
        REPLACE_READLINK=1
        ;;
    esac

    dnl On Cygwin 3.3.6, readlink("/dev/null") returns "\\Device\\Null", which
    dnl is unusable.
    case "$host_os" in
      cygwin*)
        REPLACE_READLINK=1
        ;;
    esac
  fi
])
m4trace:m4/readlink.m4:130: -1- AC_DEFUN([gl_FUNC_READLINK_SEPARATE], [
  AC_CHECK_FUNCS_ONCE([readlink])
  gl_PREREQ_READLINK
])
m4trace:m4/readlink.m4:137: -1- AC_DEFUN([gl_PREREQ_READLINK], [
  :
])
m4trace:m4/realloc.m4:14: -1- AC_DEFUN([gl_FUNC_REALLOC_SANITIZED], [
  AC_CACHE_CHECK([whether realloc should abort upon undefined behaviour],
    [gl_cv_func_realloc_sanitize],
    [test -n "$gl_cv_func_realloc_sanitize" || gl_cv_func_realloc_sanitize=no])
])
m4trace:m4/realloc.m4:23: -1- AC_DEFUN([_AC_FUNC_REALLOC_IF], [
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CACHE_CHECK([whether realloc (0, 0) returns nonnull],
    [ac_cv_func_realloc_0_nonnull],
    [AC_RUN_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdlib.h>
          ]],
          [[void *p = realloc (0, 0);
            void * volatile vp = p;
            int result = !vp;
            free (p);
            return result;]])
       ],
       [ac_cv_func_realloc_0_nonnull=yes],
       [ac_cv_func_realloc_0_nonnull=no],
       [case "$host_os" in
          # Guess yes on platforms where we know the result.
          *-gnu* | freebsd* | netbsd* | openbsd* | bitrig* \
          | gnu* | *-musl* | midipix* | midnightbsd* \
          | hpux* | solaris* | cygwin* | mingw* | windows* | msys* )
            ac_cv_func_realloc_0_nonnull="guessing yes" ;;
          # If we don't know, obey --enable-cross-guesses.
          *) ac_cv_func_realloc_0_nonnull="$gl_cross_guess_normal" ;;
        esac
       ])
    ])
  AS_CASE([$ac_cv_func_realloc_0_nonnull], [*yes], [$1], [$2])
])
m4trace:m4/realloc.m4:57: -1- AC_DEFUN([gl_FUNC_REALLOC_GNU], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_REALLOC_POSIX])

  dnl Through the dependency on module extensions-aix, _LINUX_SOURCE_COMPAT
  dnl gets defined already before this macro gets invoked.  This helps
  dnl if !(__VEC__ || __AIXVEC), and doesn't hurt otherwise.

  AC_REQUIRE([gl_FUNC_REALLOC_SANITIZED])
  if test "$gl_cv_func_realloc_sanitize" = no \
     && test $REPLACE_REALLOC_FOR_REALLOC_GNU = 0; then
    _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC_FOR_REALLOC_GNU=1])
  fi
])
m4trace:m4/realloc.m4:78: -1- AC_DEFUN([gl_FUNC_REALLOC_POSIX], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_FUNC_MALLOC_POSIX])
  AC_REQUIRE([gl_FUNC_REALLOC_SANITIZED])
  if test "$gl_cv_func_realloc_sanitize" != no; then
    REPLACE_REALLOC_FOR_REALLOC_POSIX=1
    AC_DEFINE([NEED_SANITIZED_REALLOC], [1],
      [Define to 1 if realloc should abort upon undefined behaviour.])
  else
    if test $REPLACE_MALLOC_FOR_MALLOC_POSIX = 1; then
      REPLACE_REALLOC_FOR_REALLOC_POSIX=1
    fi
  fi
])
m4trace:m4/reallocarray.m4:9: -1- AC_DEFUN([gl_FUNC_REALLOCARRAY], [
  dnl Persuade glibc <stdlib.h> to declare reallocarray.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_PTRDIFF])
  gl_CHECK_FUNCS_ANDROID([reallocarray], [[#include <stdlib.h>]])
  if test "$ac_cv_func_reallocarray" = no; then
    HAVE_REALLOCARRAY=0
    case "$gl_cv_onwards_func_reallocarray" in
      future*) REPLACE_REALLOCARRAY=1 ;;
    esac
  elif test "$gl_cv_malloc_ptrdiff" = no; then
    REPLACE_REALLOCARRAY=1
  fi
])
m4trace:m4/reallocarray.m4:28: -1- AC_DEFUN([gl_PREREQ_REALLOCARRAY], [:])
m4trace:m4/rewinddir.m4:9: -1- AC_DEFUN([gl_FUNC_REWINDDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  AC_CHECK_FUNCS([rewinddir])
  if test $ac_cv_func_rewinddir = no; then
    HAVE_REWINDDIR=0
  else
    dnl Replace rewinddir() on native Windows and OS/2 kLIBC,
    dnl to support fdopendir().
    AC_REQUIRE([gl_DIRENT_DIR])
    if test $DIR_HAS_FD_MEMBER = 0; then
      REPLACE_REWINDDIR=1
    fi
  fi
])
m4trace:m4/safe-read.m4:11: -1- AC_DEFUN([gl_PREREQ_SAFE_READ], [
  AC_REQUIRE([gt_TYPE_SSIZE_T])
])
m4trace:m4/safe-write.m4:10: -1- AC_DEFUN([gl_PREREQ_SAFE_WRITE], [
  gl_PREREQ_SAFE_READ
])
m4trace:m4/save-cwd.m4:10: -1- AC_DEFUN([gl_SAVE_CWD], [
  AC_CHECK_FUNCS_ONCE([fchdir])
])
m4trace:m4/sched_h.m4:11: -1- AC_DEFUN_ONCE([gl_SCHED_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])

  AC_REQUIRE([AC_CANONICAL_HOST])

  AC_REQUIRE([gl_CHECK_HEADER_SYS_CDEFS_H])

  AC_CHECK_HEADERS([sched.h], [], [],
    [[#if HAVE_SYS_CDEFS_H
       #include <sys/cdefs.h>
      #endif
    ]])
  gl_NEXT_HEADERS([sched.h])

  if test "$ac_cv_header_sched_h" = yes; then
    HAVE_SCHED_H=1
  else
    HAVE_SCHED_H=0
  fi
  AC_SUBST([HAVE_SCHED_H])

  if test "$HAVE_SCHED_H" = 1; then
    AC_CHECK_TYPE([struct sched_param],
      [HAVE_STRUCT_SCHED_PARAM=1], [HAVE_STRUCT_SCHED_PARAM=0],
      [[#if HAVE_SYS_CDEFS_H
         #include <sys/cdefs.h>
        #endif
        #include <sched.h>
      ]])
  else
    HAVE_STRUCT_SCHED_PARAM=0
    case "$host_os" in
      os2*)
        dnl On OS/2 kLIBC, struct sched_param is in spawn.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <spawn.h>])
        ;;
      vms)
        dnl On OpenVMS 7.2 or newer, struct sched_param is in pthread.h.
        AC_CHECK_TYPE([struct sched_param],
          [HAVE_STRUCT_SCHED_PARAM=1], [],
          [#include <pthread.h>])
        ;;
    esac
  fi
  AC_SUBST([HAVE_STRUCT_SCHED_PARAM])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <sched.h>
    ]], [sched_yield])
])
m4trace:m4/sched_h.m4:76: -1- AC_DEFUN([gl_SCHED_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SCHED_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sched_h.m4:88: -1- AC_DEFUN([gl_SCHED_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SCHED_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SCHED_H_DEFAULTS])
])
m4trace:m4/sched_h.m4:97: -1- AC_DEFUN([gl_SCHED_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_SCHED_YIELD=1;    AC_SUBST([HAVE_SCHED_YIELD])
  REPLACE_SCHED_YIELD=0; AC_SUBST([REPLACE_SCHED_YIELD])
])
m4trace:m4/sh-filename.m4:11: -1- AC_DEFUN([gl_SH_FILENAME], [
  AH_VERBATIM([SH_FILENAME],
[/* File name of the Bourne shell.  */
#if (defined _WIN32 && !defined __CYGWIN__) || defined __CYGWIN__ || defined __ANDROID__
/* Omit the directory part because
   - For native Windows programs in a Cygwin environment, the Cygwin mounts
     are not visible.
   - For 32-bit Cygwin programs in a 64-bit Cygwin environment, the Cygwin
     mounts are not visible.
   - On Android, /bin/sh does not exist. It's /system/bin/sh instead.  */
# define BOURNE_SHELL "sh"
#else
# define BOURNE_SHELL "/bin/sh"
#endif])
])
m4trace:m4/sig_atomic_t.m4:9: -1- AC_DEFUN([gt_TYPE_SIG_ATOMIC_T], [
  AC_CHECK_TYPES([sig_atomic_t], ,
    [AC_DEFINE([sig_atomic_t], [int],
       [Define as an integer type suitable for memory locations that can be
        accessed atomically even in the presence of asynchronous signals.])],
    [#include <signal.h>])
])
m4trace:m4/sigaction.m4:10: -1- AC_DEFUN([gl_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([sigaction])
  if test $ac_cv_func_sigaction = yes; then
    AC_CHECK_MEMBERS([struct sigaction.sa_sigaction], , ,
                     [[#include <signal.h>]])
    if test $ac_cv_member_struct_sigaction_sa_sigaction = no; then
      HAVE_STRUCT_SIGACTION_SA_SIGACTION=0
    fi
  else
    HAVE_SIGACTION=0
  fi
])
m4trace:m4/sigaction.m4:26: -1- AC_DEFUN([gl_PREREQ_SIGACTION], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([AC_TYPE_UID_T])
  AC_REQUIRE([gl_PREREQ_SIG_HANDLER_H])
  AC_CHECK_FUNCS_ONCE([sigaltstack siginterrupt])
  AC_CHECK_TYPES([siginfo_t], [], [], [[
#include <signal.h>
  ]])
  if test $ac_cv_type_siginfo_t = no; then
    HAVE_SIGINFO_T=0
  fi
])
m4trace:m4/sigaction.m4:42: -1- AC_DEFUN([gl_PREREQ_SIG_HANDLER_H], [:])
m4trace:m4/signal_h.m4:9: -1- AC_DEFUN_ONCE([gl_SIGNAL_H], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  gl_NEXT_HEADERS([signal.h])

# AIX declares sig_atomic_t to already include volatile, and C89 compilers
# then choke on 'volatile sig_atomic_t'.  C99 requires that it compile.
  AC_CHECK_TYPE([volatile sig_atomic_t], [],
    [HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=0], [[
#include <signal.h>
    ]])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  AC_REQUIRE([AC_TYPE_UID_T])

  dnl Persuade glibc <signal.h> to define sighandler_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_TYPE([sighandler_t], [], [HAVE_SIGHANDLER_T=0], [[
#include <signal.h>
    ]])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [sig2str str2sig
    pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/signal_h.m4:44: -1- AC_DEFUN([gl_CHECK_TYPE_SIGSET_T], [
  AC_CHECK_TYPES([sigset_t],
    [gl_cv_type_sigset_t=yes], [gl_cv_type_sigset_t=no],
    [[
      #include <signal.h>
      /* Mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.  */
      #include <sys/types.h>
    ]])
  if test $gl_cv_type_sigset_t != yes; then
    HAVE_SIGSET_T=0
  fi
])
m4trace:m4/signal_h.m4:62: -1- AC_DEFUN([gl_SIGNAL_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SIGNAL_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/signal_h.m4:74: -1- AC_DEFUN([gl_SIGNAL_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIG2STR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SIGNAL_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
])
m4trace:m4/signal_h.m4:88: -1- AC_DEFUN([gl_SIGNAL_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SIGNALBLOCKING=1; AC_SUBST([HAVE_POSIX_SIGNALBLOCKING])
  HAVE_PTHREAD_SIGMASK=1;      AC_SUBST([HAVE_PTHREAD_SIGMASK])
  HAVE_RAISE=1;                AC_SUBST([HAVE_RAISE])
  HAVE_SIG2STR=1;              AC_SUBST([HAVE_SIG2STR])
  HAVE_SIGSET_T=1;             AC_SUBST([HAVE_SIGSET_T])
  HAVE_SIGINFO_T=1;            AC_SUBST([HAVE_SIGINFO_T])
  HAVE_SIGACTION=1;            AC_SUBST([HAVE_SIGACTION])
  HAVE_STR2SIG=1;              AC_SUBST([HAVE_STR2SIG])
  HAVE_STRUCT_SIGACTION_SA_SIGACTION=1;
                               AC_SUBST([HAVE_STRUCT_SIGACTION_SA_SIGACTION])
  HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=1;
                               AC_SUBST([HAVE_TYPE_VOLATILE_SIG_ATOMIC_T])
  HAVE_SIGHANDLER_T=1;         AC_SUBST([HAVE_SIGHANDLER_T])
  REPLACE_PTHREAD_SIGMASK=0;   AC_SUBST([REPLACE_PTHREAD_SIGMASK])
  REPLACE_RAISE=0;             AC_SUBST([REPLACE_RAISE])
])
m4trace:m4/signalblocking.m4:14: -1- AC_DEFUN([gl_SIGNALBLOCKING], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  HAVE_POSIX_SIGNALBLOCKING=0
  if test "$gl_cv_type_sigset_t" = yes; then
    AC_CHECK_FUNC([sigprocmask], [HAVE_POSIX_SIGNALBLOCKING=1])
  fi
])
m4trace:m4/signalblocking.m4:25: -1- AC_DEFUN([gl_PREREQ_SIGPROCMASK], [:])
m4trace:m4/socketlib.m4:13: -1- AC_DEFUN([gl_SOCKETLIB], [
  gl_PREREQ_SYS_H_WINSOCK2 dnl for HAVE_WINSOCK2_H
  LIBSOCKET=
  if test $HAVE_WINSOCK2_H = 1; then
    dnl Native Windows API (not Cygwin).
    dnl If the function WSAStartup exists (declared in <winsock2.h> and
    dnl defined through -lws2_32), we need to call it.
    AC_CACHE_CHECK([for WSAStartup],
      [gl_cv_func_wsastartup], [
       gl_saved_LIBS="$LIBS"
       LIBS="$LIBS -lws2_32"
       AC_LINK_IFELSE(
         [AC_LANG_PROGRAM([[
#ifdef HAVE_WINSOCK2_H
# include <winsock2.h>
#endif]], [[
            WORD wVersionRequested = MAKEWORD(1, 1);
            WSADATA wsaData;
            int err = WSAStartup(wVersionRequested, &wsaData);
            WSACleanup ();
            ]])
         ],
         [gl_cv_func_wsastartup=yes],
         [gl_cv_func_wsastartup=no])
       LIBS="$gl_saved_LIBS"
      ])
    if test "$gl_cv_func_wsastartup" = "yes"; then
      AC_DEFINE([WINDOWS_SOCKETS], [1], [Define if WSAStartup is needed.])
      LIBSOCKET='-lws2_32'
    fi
  else
    dnl Unix API.
    dnl Solaris has most socket functions in libsocket.
    dnl Haiku has most socket functions in libnetwork.
    dnl BeOS has most socket functions in libnet.
    dnl On HP-UX, do NOT link with libxnet, because in 64-bit mode this would
    dnl break code (e.g. in libraries) that invokes accept(), getpeername(),
    dnl getsockname(), getsockopt(), or recvfrom() with a 32-bit addrlen. See
    dnl "man xopen_networking" for details.
    AC_CACHE_CHECK([for library containing setsockopt], [gl_cv_lib_socket], [
      gl_cv_lib_socket=
      AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
        [],
        [gl_saved_LIBS="$LIBS"
         LIBS="$gl_saved_LIBS -lsocket"
         AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
           [gl_cv_lib_socket="-lsocket"])
         if test -z "$gl_cv_lib_socket"; then
           LIBS="$gl_saved_LIBS -lnetwork"
           AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
             [gl_cv_lib_socket="-lnetwork"])
           if test -z "$gl_cv_lib_socket"; then
             LIBS="$gl_saved_LIBS -lnet"
             AC_LINK_IFELSE([AC_LANG_PROGRAM([[extern
#ifdef __cplusplus
"C"
#endif
char setsockopt();]], [[setsockopt();]])],
               [gl_cv_lib_socket="-lnet"])
           fi
         fi
         LIBS="$gl_saved_LIBS"
        ])
      if test -z "$gl_cv_lib_socket"; then
        gl_cv_lib_socket="none needed"
      fi
    ])
    if test "$gl_cv_lib_socket" != "none needed"; then
      LIBSOCKET="$gl_cv_lib_socket"
    fi
  fi
  AC_SUBST([LIBSOCKET])
])
m4trace:m4/sockets.m4:9: -1- AC_DEFUN([gl_SOCKETS], [
  AC_REQUIRE([AC_C_INLINE])
  AC_REQUIRE([gl_SOCKETLIB])
  gl_PREREQ_SOCKETS
])
m4trace:m4/sockets.m4:17: -1- AC_DEFUN([gl_PREREQ_SOCKETS], [
  :
])
m4trace:m4/socklen.m4:17: -1- AC_DEFUN([gl_TYPE_SOCKLEN_T], [AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])dnl
   AC_CHECK_TYPE([socklen_t], ,
     [AC_CACHE_CHECK([for socklen_t equivalent],
        [gl_cv_socklen_t_equiv],
        [# Systems have either "struct sockaddr *" or
         # "void *" as the second argument to getpeername
         gl_cv_socklen_t_equiv=
         for arg2 in "struct sockaddr" void; do
           for t in int size_t "unsigned int" "long int" "unsigned long int"; do
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
                 [[#include <sys/types.h>
                   #include <sys/socket.h>

                   int getpeername (int, $arg2 *, $t *);]],
                 [[$t len;
                  getpeername (0, 0, &len);]])],
               [gl_cv_socklen_t_equiv="$t"])
             test "$gl_cv_socklen_t_equiv" != "" && break
           done
           test "$gl_cv_socklen_t_equiv" != "" && break
         done
         if test "$gl_cv_socklen_t_equiv" = ""; then
           AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
         fi
        ])
      AC_DEFINE_UNQUOTED([socklen_t], [$gl_cv_socklen_t_equiv],
        [type to use in place of socklen_t if not defined])],
     [gl_SOCKET_HEADERS])])
m4trace:m4/socklen.m4:53: -1- AC_DEFUN([gl_SOCKET_HEADERS], [
/* <sys/types.h> is not needed according to POSIX, but the
   <sys/socket.h> in i386-unknown-freebsd4.10 and
   powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#elif HAVE_WS2TCPIP_H
# include <ws2tcpip.h>
#endif
])
m4trace:m4/socklen.m4:69: -1- AC_DEFUN([gl_CHECK_SOCKET_HEADERS], [AC_CHECK_HEADERS_ONCE([sys/socket.h])
   if test $ac_cv_header_sys_socket_h = no; then
     dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
     dnl the check for those headers unconditional; yet cygwin reports
     dnl that the headers are present but cannot be compiled (since on
     dnl cygwin, all socket information should come from sys/socket.h).
     AC_CHECK_HEADERS([ws2tcpip.h])
   fi
  ])
m4trace:m4/spawn-pipe.m4:9: -1- AC_DEFUN([gl_SPAWN_PIPE], [
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl Prerequisites of lib/spawn-pipe.c.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Prerequisites of lib/os2-spawn.c.
  case "$host_os" in
    os2*) AC_CHECK_HEADERS_ONCE([libcx/spawn2.h]) ;;
  esac
])
m4trace:m4/spawn_h.m4:11: -1- AC_DEFUN_ONCE([gl_SPAWN_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])

  dnl <spawn.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([spawn.h])

  if test $ac_cv_header_spawn_h = yes; then
    HAVE_SPAWN_H=1
    AC_CHECK_TYPES([posix_spawnattr_t], [], [HAVE_POSIX_SPAWNATTR_T=0], [[
#include <spawn.h>
      ]])
    AC_CHECK_TYPES([posix_spawn_file_actions_t], [],
      [HAVE_POSIX_SPAWN_FILE_ACTIONS_T=0], [[
#include <spawn.h>
      ]])
  else
    HAVE_SPAWN_H=0
    HAVE_POSIX_SPAWNATTR_T=0
    HAVE_POSIX_SPAWN_FILE_ACTIONS_T=0
  fi
  AC_SUBST([HAVE_SPAWN_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  AC_REQUIRE([gl_HAVE_POSIX_SPAWN])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <spawn.h>
    ]], [posix_spawn posix_spawnp posix_spawnattr_init posix_spawnattr_destroy
    posix_spawnattr_getsigdefault posix_spawnattr_setsigdefault
    posix_spawnattr_getsigmask posix_spawnattr_setsigmask
    posix_spawnattr_getflags posix_spawnattr_setflags
    posix_spawnattr_getpgroup posix_spawnattr_setpgroup
    posix_spawnattr_getschedpolicy posix_spawnattr_setschedpolicy
    posix_spawnattr_getschedparam posix_spawnattr_setschedparam
    posix_spawn_file_actions_init posix_spawn_file_actions_destroy
    posix_spawn_file_actions_addopen posix_spawn_file_actions_addclose
    posix_spawn_file_actions_adddup2 posix_spawn_file_actions_addchdir
    posix_spawn_file_actions_addfchdir])
])
m4trace:m4/spawn_h.m4:64: -1- AC_DEFUN([gl_HAVE_POSIX_SPAWN], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])

  POSIX_SPAWN_LIB=
  AC_SUBST([POSIX_SPAWN_LIB])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([posix_spawn], [rt],
                   [test "$ac_cv_search_posix_spawn" = "none required" ||
                    POSIX_SPAWN_LIB=$ac_cv_search_posix_spawn])
    gl_CHECK_FUNCS_ANDROID([posix_spawn], [[#include <spawn.h>]])
  LIBS=$gl_saved_libs
  dnl For backward compatibility.
  LIB_POSIX_SPAWN="$POSIX_SPAWN_LIB"
  AC_SUBST([LIB_POSIX_SPAWN])

  if test $ac_cv_func_posix_spawn != yes; then
    HAVE_POSIX_SPAWN=0
    case "$gl_cv_onwards_func_posix_spawn" in
      future*) REPLACE_POSIX_SPAWN=1 ;;
    esac
  fi
])
m4trace:m4/spawn_h.m4:94: -1- AC_DEFUN([gl_SPAWN_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SPAWN_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/spawn_h.m4:106: -1- AC_DEFUN([gl_SPAWN_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SPAWN_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_INIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_DESTROY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_INIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETFLAGS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETFLAGS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETPGROUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETPGROUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSCHEDPARAM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSCHEDPARAM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSCHEDPOLICY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSCHEDPOLICY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSIGDEFAULT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSIGDEFAULT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSIGMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_DESTROY])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SPAWN_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SPAWN_H_DEFAULTS])
])
m4trace:m4/spawn_h.m4:137: -1- AC_DEFUN([gl_SPAWN_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SPAWN=1;        AC_SUBST([HAVE_POSIX_SPAWN])
  HAVE_POSIX_SPAWNATTR_T=1;  AC_SUBST([HAVE_POSIX_SPAWNATTR_T])
  HAVE_POSIX_SPAWN_FILE_ACTIONS_T=1;
                             AC_SUBST([HAVE_POSIX_SPAWN_FILE_ACTIONS_T])
  HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR=1;
                             AC_SUBST([HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR])
  HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR=1;
                             AC_SUBST([HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR])
  REPLACE_POSIX_SPAWN=0;     AC_SUBST([REPLACE_POSIX_SPAWN])
  REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR=0;
                             AC_SUBST([REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR])
  REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE=0;
                             AC_SUBST([REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE])
  REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2=0;
                             AC_SUBST([REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2])
  REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR=0;
                             AC_SUBST([REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR])
  REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN=0;
                             AC_SUBST([REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN])
])
m4trace:m4/ssize_t.m4:12: -1- AC_DEFUN([gt_TYPE_SSIZE_T], [
  AC_CACHE_CHECK([for ssize_t], [gl_cv_ssize_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (ssize_t *) + sizeof (ssize_t);
            return !x;]])],
       [gl_cv_ssize_t=yes], [gl_cv_ssize_t=no])])
  if test $gl_cv_ssize_t = no; then
    dnl On 64-bit native Windows, ssize_t needs to be defined as 'long long',
    dnl for consistency with the 64-bit size_t.
    AC_CACHE_CHECK([whether size_t is wider than 'long'], [gl_cv_size_t_large],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/types.h>
              typedef int array [2 * (sizeof (size_t) > sizeof (long)) - 1];
            ]])],
         [gl_cv_size_t_large=yes], [gl_cv_size_t_large=no])])
    if test $gl_cv_size_t_large = yes; then
      gl_def_ssize_t='long long'
    else
      gl_def_ssize_t='long'
    fi
    AC_DEFINE_UNQUOTED([ssize_t], [$gl_def_ssize_t],
                       [Define as a signed type of the same size as size_t.])
  fi
])
m4trace:m4/stat-time.m4:21: -1- AC_DEFUN([gl_STAT_TIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])

  AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],
    [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],
       [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],
       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
          [[
            #include <sys/types.h>
            #include <sys/stat.h>
            #if HAVE_SYS_TIME_H
            # include <sys/time.h>
            #endif
            #include <time.h>
            struct timespec ts;
            struct stat st;
          ]],
          [[
            st.st_atim = ts;
          ]])],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])
     if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then
       AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],
         [Define to 1 if the type of the st_atim member of a struct stat is
          struct timespec.])
     fi],
    [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],
       [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],
          [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],
             [#include <sys/types.h>
              #include <sys/stat.h>])],
          [#include <sys/types.h>
           #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat-time.m4:71: -1- AC_DEFUN([gl_STAT_BIRTHTIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CHECK_MEMBERS([struct stat.st_birthtimespec.tv_nsec], [],
    [AC_CHECK_MEMBERS([struct stat.st_birthtimensec], [],
      [AC_CHECK_MEMBERS([struct stat.st_birthtim.tv_nsec], [], [],
         [#include <sys/types.h>
          #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat.m4:9: -1- AC_DEFUN([gl_FUNC_STAT], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])
  case "$host_os" in
    mingw* | windows*)
      dnl On this platform, the original stat() returns st_atime, st_mtime,
      dnl st_ctime values that are affected by the time zone.
      REPLACE_STAT=1
      ;;
    *)
      dnl AIX 7.1, Solaris 9, mingw64 mistakenly succeed on stat("file/").
      dnl (For mingw, this is due to a broken stat() override in libmingwex.a.)
      dnl FreeBSD 7.2 mistakenly succeeds on stat("link-to-file/").
      AC_CACHE_CHECK([whether stat handles trailing slashes on files],
        [gl_cv_func_stat_file_slash],
        [touch conftest.tmp
         # Assume that if we have lstat, we can also check symlinks.
         if test $ac_cv_func_lstat = yes; then
           ln -s conftest.tmp conftest.lnk
         fi
         AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
             [[#include <sys/stat.h>
]], [[int result = 0;
               struct stat st;
               if (!stat ("conftest.tmp/", &st))
                 result |= 1;
#if HAVE_LSTAT
               if (!stat ("conftest.lnk/", &st))
                 result |= 2;
#endif
               return result;
             ]])],
           [gl_cv_func_stat_file_slash=yes], [gl_cv_func_stat_file_slash=no],
           [case "$host_os" in
                               # Guess yes on Linux systems.
              linux-* | linux) gl_cv_func_stat_file_slash="guessing yes" ;;
                               # Guess yes on systems that emulate the Linux system calls.
              midipix*)        gl_cv_func_stat_file_slash="guessing yes" ;;
                               # Guess yes on glibc systems.
              *-gnu* | gnu*)   gl_cv_func_stat_file_slash="guessing yes" ;;
                               # If we don't know, obey --enable-cross-guesses.
              *)               gl_cv_func_stat_file_slash="$gl_cross_guess_normal" ;;
            esac
           ])
         rm -f conftest.tmp conftest.lnk])
      case $gl_cv_func_stat_file_slash in
        *no)
          REPLACE_STAT=1
          AC_DEFINE([REPLACE_FUNC_STAT_FILE], [1], [Define to 1 if stat needs
            help when passed a file name with a trailing slash]);;
      esac
      case $host_os in
        dnl macOS and Solaris stat can return a negative tv_nsec.
        darwin* | solaris*)
          REPLACE_FSTAT=1 ;;
      esac
      ;;
  esac
])
m4trace:m4/stat.m4:73: -1- AC_DEFUN([gl_PREREQ_STAT], [
  AC_REQUIRE([gl_SYS_STAT_H])
  AC_REQUIRE([gl_PREREQ_STAT_W32])
  :
])
m4trace:m4/stat.m4:80: -1- AC_DEFUN([gl_PREREQ_STAT_W32], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw* | windows*)
      AC_CHECK_HEADERS([sdkddkver.h])
      ;;
  esac
])
m4trace:m4/stdalign.m4:15: -1- AC_DEFUN([gl_ALIGNASOF], [
  AC_CACHE_CHECK([for alignas and alignof],
    [gl_cv_header_working_stdalign_h],
    [gl_saved_CFLAGS=$CFLAGS
     for gl_working in "yes, keywords" "yes, <stdalign.h> macros"; do
      AS_CASE([$gl_working],
        [*stdalign.h*], [CFLAGS="$gl_saved_CFLAGS -DINCLUDE_STDALIGN_H"])
      AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdint.h>
            #ifdef INCLUDE_STDALIGN_H
             #include <stdalign.h>
            #endif
            #include <stddef.h>

            /* Test that alignof yields a result consistent with offsetof.
               This catches GCC bug 52023
               <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.  */
            #ifdef __cplusplus
               template <class t> struct alignof_helper { char a; t b; };
            # define ao(type) offsetof (alignof_helper<type>, b)
            #else
            # define ao(type) offsetof (struct { char a; type b; }, b)
            #endif
            char test_double[ao (double) % _Alignof (double) == 0 ? 1 : -1];
            char test_long[ao (long int) % _Alignof (long int) == 0 ? 1 : -1];
            char test_alignof[alignof (double) == _Alignof (double) ? 1 : -1];

            /* Test alignas only on platforms where gnulib can help.  */
            #if \
                ((defined __cplusplus && 201103 <= __cplusplus) \
                 || (__TINYC__ && defined __attribute__) \
                 || (defined __APPLE__ && defined __MACH__ \
                     ? 4 < __GNUC__ + (1 <= __GNUC_MINOR__) \
                     : __GNUC__) \
                 || (__ia64 && (61200 <= __HP_cc || 61200 <= __HP_aCC)) \
                 || __ICC || 0x590 <= __SUNPRO_C || 0x0600 <= __xlC__ \
                 || 1300 <= _MSC_VER)
              struct alignas_test { char c; char alignas (8) alignas_8; };
              char test_alignas[offsetof (struct alignas_test, alignas_8) == 8
                                ? 1 : -1];
            #endif
          ]])],
       [gl_cv_header_working_stdalign_h=$gl_working],
       [gl_cv_header_working_stdalign_h=no])

      CFLAGS=$gl_saved_CFLAGS
      test "$gl_cv_header_working_stdalign_h" != no && break
     done])

  AS_CASE([$gl_cv_header_working_stdalign_h],
    [yes*keyword*],
      [AC_DEFINE([HAVE_C_ALIGNASOF], [1],
         [Define to 1 if the alignas and alignof keywords work.])])

  dnl The "zz" puts this toward config.h's end, to avoid potential
  dnl collisions with other definitions.
  AH_VERBATIM([zzalignas],
[#if !defined HAVE_C_ALIGNASOF \
    && !(defined __cplusplus && 201103 <= __cplusplus) \
    && !defined alignof
# if defined HAVE_STDALIGN_H
#  include <stdalign.h>
# endif

/* ISO C23 alignas and alignof for platforms that lack it.

   References:
   ISO C23 (latest free draft
   <http://www.open-std.org/jtc1/sc22/wg14/www/docs/n3096.pdf>)
   sections 6.5.3.4, 6.7.5, 7.15.
   C++11 (latest free draft
   <http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3242.pdf>)
   section 18.10. */

/* alignof (TYPE), also known as _Alignof (TYPE), yields the alignment
   requirement of a structure member (i.e., slot or field) that is of
   type TYPE, as an integer constant expression.

   This differs from GCC's and clang's __alignof__ operator, which can
   yield a better-performing alignment for an object of that type.  For
   example, on x86 with GCC and on Linux/x86 with clang,
   __alignof__ (double) and __alignof__ (long long) are 8, whereas
   alignof (double) and alignof (long long) are 4 unless the option
   '-malign-double' is used.

   The result cannot be used as a value for an 'enum' constant, if you
   want to be portable to HP-UX 10.20 cc and AIX 3.2.5 xlc.  */

/* GCC releases before GCC 4.9 had a bug in _Alignof.  See GCC bug 52023
   <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.
   clang versions < 8.0.0 have the same bug.  */
#  if (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112 \
       || (defined __GNUC__ && __GNUC__ < 4 + (__GNUC_MINOR__ < 9) \
           && !defined __clang__) \
       || (defined __clang__ && __clang_major__ < 8))
#   undef/**/_Alignof
#   ifdef __cplusplus
#    if (201103 <= __cplusplus || defined _MSC_VER)
#     define _Alignof(type) alignof (type)
#    else
      template <class __t> struct __alignof_helper { char __a; __t __b; };
#     if (defined __GNUC__ && 4 <= __GNUC__) || defined __clang__
#      define _Alignof(type) __builtin_offsetof (__alignof_helper<type>, __b)
#     else
#      define _Alignof(type) offsetof (__alignof_helper<type>, __b)
#     endif
#     define _GL_STDALIGN_NEEDS_STDDEF 1
#    endif
#   else
#    if (defined __GNUC__ && 4 <= __GNUC__) || defined __clang__
#     define _Alignof(type) __builtin_offsetof (struct { char __a; type __b; }, __b)
#    else
#     define _Alignof(type) offsetof (struct { char __a; type __b; }, __b)
#     define _GL_STDALIGN_NEEDS_STDDEF 1
#    endif
#   endif
#  endif
#  if ! (defined __cplusplus && (201103 <= __cplusplus || defined _MSC_VER))
#   undef/**/alignof
#   define alignof _Alignof
#  endif

/* alignas (A), also known as _Alignas (A), aligns a variable or type
   to the alignment A, where A is an integer constant expression.  For
   example:

      int alignas (8) foo;
      struct s { int a; int alignas (8) bar; };

   aligns the address of FOO and the offset of BAR to be multiples of 8.

   A should be a power of two that is at least the type's alignment
   and at most the implementation's alignment limit.  This limit is
   2**28 on typical GNUish hosts, and 2**13 on MSVC.  To be portable
   to MSVC through at least version 10.0, A should be an integer
   constant, as MSVC does not support expressions such as 1 << 3.
   To be portable to Sun C 5.11, do not align auto variables to
   anything stricter than their default alignment.

   The following C23 requirements are not supported here:

     - If A is zero, alignas has no effect.
     - alignas can be used multiple times; the strictest one wins.
     - alignas (TYPE) is equivalent to alignas (alignof (TYPE)).

   */
# if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112
#  if defined __cplusplus && (201103 <= __cplusplus || defined _MSC_VER)
#   define _Alignas(a) alignas (a)
#  elif (!defined __attribute__ \
         && ((defined __APPLE__ && defined __MACH__ \
              ? 4 < __GNUC__ + (1 <= __GNUC_MINOR__) \
              : __GNUC__ && !defined __ibmxl__) \
             || (4 <= __clang_major__) \
             || (__ia64 && (61200 <= __HP_cc || 61200 <= __HP_aCC)) \
             || __ICC || 0x590 <= __SUNPRO_C || 0x0600 <= __xlC__))
#   define _Alignas(a) __attribute__ ((__aligned__ (a)))
#  elif 1300 <= _MSC_VER
#   define _Alignas(a) __declspec (align (a))
#  endif
# endif
# if !defined HAVE_STDALIGN_H
#  if ((defined _Alignas \
        && !(defined __cplusplus \
             && (201103 <= __cplusplus || defined _MSC_VER))) \
       || (defined __STDC_VERSION__ && 201112 <= __STDC_VERSION__))
#   define alignas _Alignas
#  endif
# endif

# if defined _GL_STDALIGN_NEEDS_STDDEF
#  include <stddef.h>
# endif
#endif])
])
m4trace:m4/stdalign.m4:193: -1- AC_DEFUN([gl_STDALIGN_H], [
  AC_REQUIRE([gl_ALIGNASOF])
  if test "$gl_cv_header_working_stdalign_h" = no; then
    GL_GENERATE_STDALIGN_H=true
  else
    GL_GENERATE_STDALIGN_H=false
  fi

  gl_CHECK_NEXT_HEADERS([stdalign.h])
  if test $ac_cv_header_stdalign_h = yes; then
    HAVE_STDALIGN_H=1
  else
    HAVE_STDALIGN_H=0
  fi
  AC_SUBST([HAVE_STDALIGN_H])
])
m4trace:m4/stddef_h.m4:11: -1- AC_DEFUN_ONCE([gl_STDDEF_H], [
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])

  dnl Persuade OpenBSD <stddef.h> to declare max_align_t.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  GL_GENERATE_STDDEF_H=false

  dnl Test whether the type max_align_t exists and whether its alignment
  dnl "is as great as is supported by the implementation in all contexts".
  AC_CACHE_CHECK([for good max_align_t],
    [gl_cv_type_max_align_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* On FreeBSD 12.0/x86, max_align_t defined by <stddef.h> has
               the correct alignment with the default (wrong) definition of
               _Alignof, but a wrong alignment as soon as we activate an
               ISO C compliant _Alignof definition.  */
            #if ((defined __GNUC__ && 4 <= __GNUC__) || defined __clang__) && !defined __cplusplus
             #define _Alignof(type) __builtin_offsetof (struct { char __a; type __b; }, __b)
            #endif
            #include <stddef.h>
            unsigned int s = sizeof (max_align_t);
            #if defined __GNUC__ || defined __clang__ || defined __IBM__ALIGNOF__
            int check1[2 * (__alignof__ (double) <= __alignof__ (max_align_t)) - 1];
            int check2[2 * (__alignof__ (long double) <= __alignof__ (max_align_t)) - 1];
            #endif
            typedef struct { char a; max_align_t b; } max_helper;
            typedef struct { char a; long b; } long_helper;
            typedef struct { char a; double b; } double_helper;
            typedef struct { char a; long double b; } long_double_helper;
            int check3[2 * (offsetof (long_helper, b) <= offsetof (max_helper, b)) - 1];
            int check4[2 * (offsetof (double_helper, b) <= offsetof (max_helper, b)) - 1];
            int check5[2 * (offsetof (long_double_helper, b) <= offsetof (max_helper, b)) - 1];
          ]])],
       [gl_cv_type_max_align_t=yes],
       [gl_cv_type_max_align_t=no])
    ])
  if test $gl_cv_type_max_align_t = no; then
    HAVE_MAX_ALIGN_T=0
    GL_GENERATE_STDDEF_H=true
  fi

  AC_CACHE_CHECK([whether NULL can be used in arbitrary expressions],
    [gl_cv_decl_null_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stddef.h>
      int test[2 * (sizeof NULL == sizeof (void *)) -1];
]])],
      [gl_cv_decl_null_works=yes],
      [gl_cv_decl_null_works=no])])
  if test $gl_cv_decl_null_works = no; then
    REPLACE_NULL=1
    GL_GENERATE_STDDEF_H=true
  fi

  AC_CACHE_CHECK([for unreachable],
    [gl_cv_func_unreachable],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
          ]],
          [[unreachable ();
          ]])],
       [gl_cv_func_unreachable=yes],
       [gl_cv_func_unreachable=no])
    ])
  if test $gl_cv_func_unreachable = no; then
    GL_GENERATE_STDDEF_H=true
  fi

  dnl https://gcc.gnu.org/bugzilla/show_bug.cgi?id=114869
  AC_CACHE_CHECK([whether nullptr_t needs <stddef.h>],
    [gl_cv_nullptr_t_needs_stddef],
    [AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[nullptr_t x;]],
       [gl_cv_nullptr_t_needs_stddef=no],
       [gl_cv_nullptr_t_needs_stddef=yes])])
  if test "$gl_cv_nullptr_t_needs_stddef" = no; then
    NULLPTR_T_NEEDS_STDDEF=0
    GL_GENERATE_STDDEF_H=true
  fi

  AC_CACHE_CHECK([for clean definition of __STDC_VERSION_STDDEF_H__],
    [gl_cv_clean_version_stddef],
    [AC_PREPROC_IFELSE(
       [AC_LANG_SOURCE(
          [[/* https://gcc.gnu.org/bugzilla/show_bug.cgi?id=114870 */
            #include <stddef.h>
            #undef __STDC_VERSION_STDDEF_H__
            #include <time.h>
            #ifdef __STDC_VERSION_STDDEF_H__
            # error "<time.h> defines __STDC_VERSION_STDDEF_H__"
            #endif
          ]])],
        [gl_cv_clean_version_stddef=yes],
        [gl_cv_clean_version_stddef=no])])
  if test "$gl_cv_clean_version_stddef" = no; then
    STDDEF_NOT_IDEMPOTENT=1
    GL_GENERATE_STDDEF_H=true
  fi

  if $GL_GENERATE_STDDEF_H; then
    gl_NEXT_HEADERS([stddef.h])
  fi
])
m4trace:m4/stddef_h.m4:121: -1- AC_DEFUN([gl_STDDEF_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDDEF_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/stddef_h.m4:131: -1- AC_DEFUN([gl_STDDEF_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDDEF_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
])
m4trace:m4/stddef_h.m4:139: -1- AC_DEFUN([gl_STDDEF_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  NULLPTR_T_NEEDS_STDDEF=1;      AC_SUBST([NULLPTR_T_NEEDS_STDDEF])
  STDDEF_NOT_IDEMPOTENT=0;       AC_SUBST([STDDEF_NOT_IDEMPOTENT])
  REPLACE_NULL=0;                AC_SUBST([REPLACE_NULL])
  HAVE_MAX_ALIGN_T=1;            AC_SUBST([HAVE_MAX_ALIGN_T])
])
m4trace:m4/stdint.m4:14: -1- AC_DEFUN_ONCE([gl_STDINT_H], [
  AC_PREREQ([2.59])dnl
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_LIMITS_H])
  AC_REQUIRE([gt_TYPE_WINT_T])

  dnl For backward compatibility. Some packages may still be testing these
  dnl macros.
  AC_DEFINE([HAVE_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'long long int'.])
  AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
    [Define to 1 if the system has the type 'unsigned long long int'.])

  dnl Check for <wchar.h>, in the same way as gl_WCHAR_H does.
  AC_CHECK_HEADERS_ONCE([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  dnl Check for <inttypes.h>.
  AC_CHECK_HEADERS_ONCE([inttypes.h])
  if test $ac_cv_header_inttypes_h = yes; then
    HAVE_INTTYPES_H=1
  else
    HAVE_INTTYPES_H=0
  fi
  AC_SUBST([HAVE_INTTYPES_H])

  dnl Check for <sys/types.h>.
  AC_CHECK_HEADERS_ONCE([sys/types.h])
  if test $ac_cv_header_sys_types_h = yes; then
    HAVE_SYS_TYPES_H=1
  else
    HAVE_SYS_TYPES_H=0
  fi
  AC_SUBST([HAVE_SYS_TYPES_H])

  gl_CHECK_NEXT_HEADERS([stdint.h])
  if test $ac_cv_header_stdint_h = yes; then
    HAVE_STDINT_H=1
  else
    HAVE_STDINT_H=0
  fi
  AC_SUBST([HAVE_STDINT_H])

  dnl Now see whether we need a substitute <stdint.h>.
  if test $ac_cv_header_stdint_h = yes; then
    AC_CACHE_CHECK([whether stdint.h conforms to C99],
      [gl_cv_header_working_stdint_h],
      [gl_cv_header_working_stdint_h=no
       AC_COMPILE_IFELSE([
         AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
/* Dragonfly defines WCHAR_MIN, WCHAR_MAX only in <wchar.h>.  */
#if !(defined WCHAR_MIN && defined WCHAR_MAX)
#error "WCHAR_MIN, WCHAR_MAX not defined in <stdint.h>"
#endif
]
gl_STDINT_INCLUDES
[
#ifdef INT8_MAX
int8_t a1 = INT8_MAX;
int8_t a1min = INT8_MIN;
#endif
#ifdef INT16_MAX
int16_t a2 = INT16_MAX;
int16_t a2min = INT16_MIN;
#endif
#ifdef INT32_MAX
int32_t a3 = INT32_MAX;
int32_t a3min = INT32_MIN;
#endif
#ifdef INT64_MAX
int64_t a4 = INT64_MAX;
int64_t a4min = INT64_MIN;
#endif
#ifdef UINT8_MAX
uint8_t b1 = UINT8_MAX;
#else
typedef int b1[(unsigned char) -1 != 255 ? 1 : -1];
#endif
#ifdef UINT16_MAX
uint16_t b2 = UINT16_MAX;
#endif
#ifdef UINT32_MAX
uint32_t b3 = UINT32_MAX;
#endif
#ifdef UINT64_MAX
uint64_t b4 = UINT64_MAX;
#endif
int_least8_t c1 = INT8_C (0x7f);
int_least8_t c1max = INT_LEAST8_MAX;
int_least8_t c1min = INT_LEAST8_MIN;
int_least16_t c2 = INT16_C (0x7fff);
int_least16_t c2max = INT_LEAST16_MAX;
int_least16_t c2min = INT_LEAST16_MIN;
int_least32_t c3 = INT32_C (0x7fffffff);
int_least32_t c3max = INT_LEAST32_MAX;
int_least32_t c3min = INT_LEAST32_MIN;
int_least64_t c4 = INT64_C (0x7fffffffffffffff);
int_least64_t c4max = INT_LEAST64_MAX;
int_least64_t c4min = INT_LEAST64_MIN;
uint_least8_t d1 = UINT8_C (0xff);
uint_least8_t d1max = UINT_LEAST8_MAX;
uint_least16_t d2 = UINT16_C (0xffff);
uint_least16_t d2max = UINT_LEAST16_MAX;
uint_least32_t d3 = UINT32_C (0xffffffff);
uint_least32_t d3max = UINT_LEAST32_MAX;
uint_least64_t d4 = UINT64_C (0xffffffffffffffff);
uint_least64_t d4max = UINT_LEAST64_MAX;
int_fast8_t e1 = INT_FAST8_MAX;
int_fast8_t e1min = INT_FAST8_MIN;
int_fast16_t e2 = INT_FAST16_MAX;
int_fast16_t e2min = INT_FAST16_MIN;
int_fast32_t e3 = INT_FAST32_MAX;
int_fast32_t e3min = INT_FAST32_MIN;
int_fast64_t e4 = INT_FAST64_MAX;
int_fast64_t e4min = INT_FAST64_MIN;
uint_fast8_t f1 = UINT_FAST8_MAX;
uint_fast16_t f2 = UINT_FAST16_MAX;
uint_fast32_t f3 = UINT_FAST32_MAX;
uint_fast64_t f4 = UINT_FAST64_MAX;
#ifdef INTPTR_MAX
intptr_t g = INTPTR_MAX;
intptr_t gmin = INTPTR_MIN;
#endif
#ifdef UINTPTR_MAX
uintptr_t h = UINTPTR_MAX;
#endif
intmax_t i = INTMAX_MAX;
uintmax_t j = UINTMAX_MAX;

/* Check that SIZE_MAX has the correct type, if possible.  */
/* ISO C 11 mandates _Generic, but GCC versions < 4.9 lack it.  */
#if 201112 <= __STDC_VERSION__ \
    && (!defined __GNUC__ || 4 < __GNUC__ + (9 <= __GNUC_MINOR__) \
        || defined __clang__)
int k = _Generic (SIZE_MAX, size_t: 0);
#elif (2 <= __GNUC__ || 4 <= __clang_major__ || defined __IBM__TYPEOF__ \
       || (0x5110 <= __SUNPRO_C && !__STDC__))
extern size_t k;
extern __typeof__ (SIZE_MAX) k;
#endif

#include <limits.h> /* for CHAR_BIT */
#define TYPE_MINIMUM(t) \
  ((t) ((t) 0 < (t) -1 ? (t) 0 : ~ TYPE_MAXIMUM (t)))
#define TYPE_MAXIMUM(t) \
  ((t) ((t) 0 < (t) -1 \
        ? (t) -1 \
        : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))
struct s {
  int check_PTRDIFF:
      PTRDIFF_MIN == TYPE_MINIMUM (ptrdiff_t)
      && PTRDIFF_MAX == TYPE_MAXIMUM (ptrdiff_t)
      ? 1 : -1;
  /* Detect bug in FreeBSD 6.0/ia64 and FreeBSD 13.0/arm64.  */
  int check_SIG_ATOMIC:
      SIG_ATOMIC_MIN == TYPE_MINIMUM (sig_atomic_t)
      && SIG_ATOMIC_MAX == TYPE_MAXIMUM (sig_atomic_t)
      ? 1 : -1;
  int check_SIZE: SIZE_MAX == TYPE_MAXIMUM (size_t) ? 1 : -1;
  int check_WCHAR:
      WCHAR_MIN == TYPE_MINIMUM (wchar_t)
      && WCHAR_MAX == TYPE_MAXIMUM (wchar_t)
      ? 1 : -1;
  /* Detect bug in mingw.  */
  int check_WINT:
      WINT_MIN == TYPE_MINIMUM (wint_t)
      && WINT_MAX == TYPE_MAXIMUM (wint_t)
      ? 1 : -1;

  /* Detect bugs in glibc 2.4 and Solaris 10 stdint.h, among others.  */
  int check_UINT8_C:
        (-1 < UINT8_C (0)) == (-1 < (uint_least8_t) 0) ? 1 : -1;
  int check_UINT16_C:
        (-1 < UINT16_C (0)) == (-1 < (uint_least16_t) 0) ? 1 : -1;

  /* Detect bugs in OpenBSD 3.9 stdint.h.  */
#ifdef UINT8_MAX
  int check_uint8: (uint8_t) -1 == UINT8_MAX ? 1 : -1;
#endif
#ifdef UINT16_MAX
  int check_uint16: (uint16_t) -1 == UINT16_MAX ? 1 : -1;
#endif
#ifdef UINT32_MAX
  int check_uint32: (uint32_t) -1 == UINT32_MAX ? 1 : -1;
#endif
#ifdef UINT64_MAX
  int check_uint64: (uint64_t) -1 == UINT64_MAX ? 1 : -1;
#endif
  int check_uint_least8: (uint_least8_t) -1 == UINT_LEAST8_MAX ? 1 : -1;
  int check_uint_least16: (uint_least16_t) -1 == UINT_LEAST16_MAX ? 1 : -1;
  int check_uint_least32: (uint_least32_t) -1 == UINT_LEAST32_MAX ? 1 : -1;
  int check_uint_least64: (uint_least64_t) -1 == UINT_LEAST64_MAX ? 1 : -1;
  int check_uint_fast8: (uint_fast8_t) -1 == UINT_FAST8_MAX ? 1 : -1;
  int check_uint_fast16: (uint_fast16_t) -1 == UINT_FAST16_MAX ? 1 : -1;
  int check_uint_fast32: (uint_fast32_t) -1 == UINT_FAST32_MAX ? 1 : -1;
  int check_uint_fast64: (uint_fast64_t) -1 == UINT_FAST64_MAX ? 1 : -1;
  int check_uintptr: (uintptr_t) -1 == UINTPTR_MAX ? 1 : -1;
  int check_uintmax: (uintmax_t) -1 == UINTMAX_MAX ? 1 : -1;
  int check_size: (size_t) -1 == SIZE_MAX ? 1 : -1;
};
         ]])],
         [dnl Determine whether the various *_MIN, *_MAX macros are usable
          dnl in preprocessor expression. We could do it by compiling a test
          dnl program for each of these macros. It is faster to run a program
          dnl that inspects the macro expansion.
          dnl This detects a bug on HP-UX 11.23/ia64.
          AC_RUN_IFELSE([
            AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#define __STDC_CONSTANT_MACROS 1
#define __STDC_LIMIT_MACROS 1
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
#include <stdio.h>
#include <string.h>
#define MVAL(macro) MVAL1(macro)
#define MVAL1(expression) #expression
static const char *macro_values[] =
  {
#ifdef INT8_MAX
    MVAL (INT8_MAX),
#endif
#ifdef INT16_MAX
    MVAL (INT16_MAX),
#endif
#ifdef INT32_MAX
    MVAL (INT32_MAX),
#endif
#ifdef INT64_MAX
    MVAL (INT64_MAX),
#endif
#ifdef UINT8_MAX
    MVAL (UINT8_MAX),
#endif
#ifdef UINT16_MAX
    MVAL (UINT16_MAX),
#endif
#ifdef UINT32_MAX
    MVAL (UINT32_MAX),
#endif
#ifdef UINT64_MAX
    MVAL (UINT64_MAX),
#endif
    NULL
  };
]], [[
  const char **mv;
  for (mv = macro_values; *mv != NULL; mv++)
    {
      const char *value = *mv;
      /* Test whether it looks like a cast expression.  */
      if (strncmp (value, "((unsigned int)"/*)*/, 15) == 0
          || strncmp (value, "((unsigned short)"/*)*/, 17) == 0
          || strncmp (value, "((unsigned char)"/*)*/, 16) == 0
          || strncmp (value, "((int)"/*)*/, 6) == 0
          || strncmp (value, "((signed short)"/*)*/, 15) == 0
          || strncmp (value, "((signed char)"/*)*/, 14) == 0)
        return mv - macro_values + 1;
    }
  return 0;
]])],
              [gl_cv_header_working_stdint_h=yes],
              [],
              [case "$host_os" in
                                    # Guess yes on native Windows.
                 mingw* | windows*) gl_cv_header_working_stdint_h="guessing yes" ;;
                                    # In general, assume it works.
                 *)                 gl_cv_header_working_stdint_h="guessing yes" ;;
               esac
              ])
         ])
      ])
  fi

  HAVE_C99_STDINT_H=0
  HAVE_SYS_BITYPES_H=0
  HAVE_SYS_INTTYPES_H=0
  GL_GENERATE_STDINT_H=true
  case "$gl_cv_header_working_stdint_h" in
    *yes)
      HAVE_C99_STDINT_H=1
      dnl Now see whether the system <stdint.h> works without
      dnl __STDC_CONSTANT_MACROS/__STDC_LIMIT_MACROS defined.
      dnl If not, there would be problems when stdint.h is included from C++.
      AC_CACHE_CHECK([whether stdint.h works without ISO C predefines],
        [gl_cv_header_stdint_without_STDC_macros],
        [gl_cv_header_stdint_without_STDC_macros=no
         AC_COMPILE_IFELSE([
           AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
intmax_t im = INTMAX_MAX;
int32_t i32 = INT32_C (0x7fffffff);
           ]])],
           [gl_cv_header_stdint_without_STDC_macros=yes])
        ])

      if test $gl_cv_header_stdint_without_STDC_macros = no; then
        AC_DEFINE([__STDC_CONSTANT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
        AC_DEFINE([__STDC_LIMIT_MACROS], [1],
          [Define to 1 if the system <stdint.h> predates C++11.])
      fi
      AC_CACHE_CHECK([whether stdint.h has UINTMAX_WIDTH etc.],
        [gl_cv_header_stdint_width],
        [gl_cv_header_stdint_width=no
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[
              /* Work if build is not clean.  */
              #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1
              #ifndef __STDC_WANT_IEC_60559_BFP_EXT__
               #define __STDC_WANT_IEC_60559_BFP_EXT__ 1
              #endif
              #include <stdint.h>
              ]gl_STDINT_INCLUDES[
              int iw = UINTMAX_WIDTH;
              ]])],
           [gl_cv_header_stdint_width=yes])])
      if test "$gl_cv_header_stdint_width" = yes; then
        GL_GENERATE_STDINT_H=false
      fi
      ;;
    *)
      dnl Check for <sys/inttypes.h>, and for
      dnl <sys/bitypes.h> (used in Linux libc4 >= 4.6.7 and libc5).
      AC_CHECK_HEADERS([sys/inttypes.h sys/bitypes.h])
      if test $ac_cv_header_sys_inttypes_h = yes; then
        HAVE_SYS_INTTYPES_H=1
      fi
      if test $ac_cv_header_sys_bitypes_h = yes; then
        HAVE_SYS_BITYPES_H=1
      fi
      gl_STDINT_TYPE_PROPERTIES
      ;;
  esac

  dnl The substitute stdint.h needs the substitute limit.h's _GL_INTEGER_WIDTH.
  gl_REPLACE_LIMITS_H

  AC_SUBST([HAVE_C99_STDINT_H])
  AC_SUBST([HAVE_SYS_BITYPES_H])
  AC_SUBST([HAVE_SYS_INTTYPES_H])
])
m4trace:m4/stdint.m4:376: -1- AC_DEFUN([gl_STDINT_BITSIZEOF], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to the number of bits in type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for bit size of $gltype], [gl_cv_bitsizeof_${gltype}],
      [AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT],
         [$2
#include <limits.h>], [result=unknown])
       eval gl_cv_bitsizeof_${gltype}=\$result
      ])
    eval result=\$gl_cv_bitsizeof_${gltype}
    if test $result = unknown; then
      dnl Use a nonempty default, because some compilers, such as IRIX 5 cc,
      dnl do a syntax check even on unused #if conditions and give an error
      dnl on valid C code like this:
      dnl   #if 0
      dnl   # if  > 32
      dnl   # endif
      dnl   #endif
      result=0
    fi
    GLTYPE=`echo "$gltype" | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    AC_DEFINE_UNQUOTED([BITSIZEOF_${GLTYPE}], [$result])
    eval BITSIZEOF_${GLTYPE}=\$result
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:414: -1- AC_DEFUN([gl_CHECK_TYPES_SIGNED], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to 1 if ']gltype[' is a signed integer type.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([whether $gltype is signed], [gl_cv_type_${gltype}_signed],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([$2[
            int verify[2 * (($gltype) -1 < ($gltype) 0) - 1];]])],
         result=yes, result=no)
       eval gl_cv_type_${gltype}_signed=\$result
      ])
    eval result=\$gl_cv_type_${gltype}_signed
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    if test "$result" = yes; then
      AC_DEFINE_UNQUOTED([HAVE_SIGNED_${GLTYPE}], [1])
      eval HAVE_SIGNED_${GLTYPE}=1
    else
      eval HAVE_SIGNED_${GLTYPE}=0
    fi
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:447: -1- AC_DEFUN([gl_INTEGER_TYPE_SUFFIX], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX],
       [Define to l, ll, u, ul, ull, etc., as suitable for
        constants of type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for $gltype integer literal suffix],
      [gl_cv_type_${gltype}_suffix],
      [eval gl_cv_type_${gltype}_suffix=no
       eval result=\$gl_cv_type_${gltype}_signed
       if test "$result" = yes; then
         glsufu=
       else
         glsufu=u
       fi
       for glsuf in "$glsufu" ${glsufu}l ${glsufu}ll ${glsufu}i64; do
         case $glsuf in
           '')  gltype1='int';;
           l)   gltype1='long int';;
           ll)  gltype1='long long int';;
           i64) gltype1='__int64';;
           u)   gltype1='unsigned int';;
           ul)  gltype1='unsigned long int';;
           ull) gltype1='unsigned long long int';;
           ui64)gltype1='unsigned __int64';;
         esac
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([$2[
              extern $gltype foo;
              extern $gltype1 foo;]])],
           [eval gl_cv_type_${gltype}_suffix=\$glsuf])
         eval result=\$gl_cv_type_${gltype}_suffix
         test "$result" != no && break
       done])
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    eval result=\$gl_cv_type_${gltype}_suffix
    test "$result" = no && result=
    eval ${GLTYPE}_SUFFIX=\$result
    AC_DEFINE_UNQUOTED([${GLTYPE}_SUFFIX], [$result])
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX])])
])
m4trace:m4/stdint.m4:497: -1- AC_DEFUN([gl_STDINT_INCLUDES], [[
  #include <stddef.h>
  #include <signal.h>
  #if HAVE_WCHAR_H
  # include <wchar.h>
  #endif
]])
m4trace:m4/stdint.m4:509: -1- AC_DEFUN([gl_STDINT_TYPE_PROPERTIES], [
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_STDINT_BITSIZEOF([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_cv_type_ptrdiff_t_signed=yes
  gl_cv_type_size_t_signed=no
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])

  dnl If wint_t is smaller than 'int', it cannot satisfy the ISO C 99
  dnl requirement that wint_t is "unchanged by default argument promotions".
  dnl In this case gnulib's <wchar.h> and <wctype.h> override wint_t.
  dnl Set the variable BITSIZEOF_WINT_T accordingly.
  if test $GNULIBHEADERS_OVERRIDE_WINT_T = 1; then
    BITSIZEOF_WINT_T=32
  fi
])
m4trace:m4/stdio_h.m4:9: -1- AC_DEFUN([gl_STDIO_H_EARLY], [
  dnl Defining __USE_MINGW_ANSI_STDIO to 1 must be done early, because
  dnl the results of several configure tests depend on it: The tests
  dnl   - checking whether snprintf returns a byte count as in C99...
  dnl   - checking whether snprintf truncates the result as in C99...
  dnl   - checking whether printf supports the 'F' directive...
  dnl   - checking whether printf supports the grouping flag...
  dnl   - checking whether printf supports the zero flag correctly...
  dnl   - checking whether printf supports infinite 'double' arguments...
  dnl   - checking whether printf supports large precisions...
  dnl report 'yes' if __USE_MINGW_ANSI_STDIO is 1 but 'no' if
  dnl __USE_MINGW_ANSI_STDIO is not set.
  AH_VERBATIM([MINGW_ANSI_STDIO],
[/* Use GNU style printf and scanf.  */
#ifndef __USE_MINGW_ANSI_STDIO
# undef __USE_MINGW_ANSI_STDIO
#endif
])
  AC_DEFINE([__USE_MINGW_ANSI_STDIO])
])
m4trace:m4/stdio_h.m4:31: -1- AC_DEFUN_ONCE([gl_STDIO_H], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_NEXT_HEADERS([stdio.h])

  dnl Determine whether __USE_MINGW_ANSI_STDIO makes printf and
  dnl inttypes.h behave like gnu instead of system; we must give our
  dnl printf wrapper the right attribute to match.
  AC_CACHE_CHECK([which flavor of printf attribute matches inttypes macros],
    [gl_cv_func_printf_attribute_flavor],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
       #define __STDC_FORMAT_MACROS 1
       #include <stdio.h>
       #include <inttypes.h>
       /* For non-mingw systems, compilation will trivially succeed.
          For mingw, compilation will succeed for older mingw (system
          printf, "I64d") and fail for newer mingw (gnu printf, "lld"). */
       #if (defined _WIN32 && ! defined __CYGWIN__) && \
         (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 4))
       extern char PRIdMAX_probe[sizeof PRIdMAX == sizeof "I64d" ? 1 : -1];
       #endif
      ]])], [gl_cv_func_printf_attribute_flavor=system],
      [gl_cv_func_printf_attribute_flavor=gnu])])
  if test "$gl_cv_func_printf_attribute_flavor" = gnu; then
    AC_DEFINE([GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU], [1],
      [Define to 1 if printf and friends should be labeled with
       attribute "__gnu_printf__" instead of "__printf__"])
  fi

  dnl For defining _PRINTF_NAN_LEN_MAX.
  gl_MUSL_LIBC

  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_READ_FUNCS=1
    fi
  ])

  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_SIGPIPE or GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
    fi
  ])
  dnl This ifdef is an optimization, to avoid performing a configure check whose
  dnl result is not used. But it does not make the test of
  dnl GNULIB_STDIO_H_NONBLOCKING or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
    fi
  ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by both C89 and C11.
  gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([fcloseall])
  if test $ac_cv_have_decl_fcloseall = no; then
    HAVE_DECL_FCLOSEALL=0
  fi

  AC_CHECK_DECLS_ONCE([getw])
  if test $ac_cv_have_decl_getw = no; then
    HAVE_DECL_GETW=0
  fi

  AC_CHECK_DECLS_ONCE([putw])
  if test $ac_cv_have_decl_putw = no; then
    HAVE_DECL_PUTW=0
  fi
])
m4trace:m4/stdio_h.m4:121: -1- AC_DEFUN([gl_STDIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdio_h.m4:133: -1- AC_DEFUN([gl_STDIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_ZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VZPRINTF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ZPRINTF])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
])
m4trace:m4/stdio_h.m4:214: -1- AC_DEFUN([gl_STDIO_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_FCLOSEALL=1;         AC_SUBST([HAVE_DECL_FCLOSEALL])
  HAVE_DECL_FPURGE=1;            AC_SUBST([HAVE_DECL_FPURGE])
  HAVE_DECL_FSEEKO=1;            AC_SUBST([HAVE_DECL_FSEEKO])
  HAVE_DECL_FTELLO=1;            AC_SUBST([HAVE_DECL_FTELLO])
  HAVE_DECL_GETDELIM=1;          AC_SUBST([HAVE_DECL_GETDELIM])
  HAVE_DECL_GETLINE=1;           AC_SUBST([HAVE_DECL_GETLINE])
  HAVE_DECL_GETW=1;              AC_SUBST([HAVE_DECL_GETW])
  HAVE_DECL_OBSTACK_PRINTF=1;    AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
  HAVE_DECL_PUTW=1;              AC_SUBST([HAVE_DECL_PUTW])
  HAVE_DECL_SNPRINTF=1;          AC_SUBST([HAVE_DECL_SNPRINTF])
  HAVE_DECL_VSNPRINTF=1;         AC_SUBST([HAVE_DECL_VSNPRINTF])
  HAVE_DPRINTF=1;                AC_SUBST([HAVE_DPRINTF])
  HAVE_FSEEKO=1;                 AC_SUBST([HAVE_FSEEKO])
  HAVE_FTELLO=1;                 AC_SUBST([HAVE_FTELLO])
  HAVE_PCLOSE=1;                 AC_SUBST([HAVE_PCLOSE])
  HAVE_POPEN=1;                  AC_SUBST([HAVE_POPEN])
  HAVE_RENAMEAT=1;               AC_SUBST([HAVE_RENAMEAT])
  HAVE_VASPRINTF=1;              AC_SUBST([HAVE_VASPRINTF])
  HAVE_VDPRINTF=1;               AC_SUBST([HAVE_VDPRINTF])
  REPLACE_DPRINTF=0;             AC_SUBST([REPLACE_DPRINTF])
  REPLACE_FCLOSE=0;              AC_SUBST([REPLACE_FCLOSE])
  REPLACE_FDOPEN=0;              AC_SUBST([REPLACE_FDOPEN])
  REPLACE_FFLUSH=0;              AC_SUBST([REPLACE_FFLUSH])
  REPLACE_FOPEN=0;               AC_SUBST([REPLACE_FOPEN])
  REPLACE_FOPEN_FOR_FOPEN_GNU=0; AC_SUBST([REPLACE_FOPEN_FOR_FOPEN_GNU])
  REPLACE_FPRINTF=0;             AC_SUBST([REPLACE_FPRINTF])
  REPLACE_FPURGE=0;              AC_SUBST([REPLACE_FPURGE])
  REPLACE_FREOPEN=0;             AC_SUBST([REPLACE_FREOPEN])
  REPLACE_FSEEK=0;               AC_SUBST([REPLACE_FSEEK])
  REPLACE_FSEEKO=0;              AC_SUBST([REPLACE_FSEEKO])
  REPLACE_FTELL=0;               AC_SUBST([REPLACE_FTELL])
  REPLACE_FTELLO=0;              AC_SUBST([REPLACE_FTELLO])
  REPLACE_GETDELIM=0;            AC_SUBST([REPLACE_GETDELIM])
  REPLACE_GETLINE=0;             AC_SUBST([REPLACE_GETLINE])
  REPLACE_OBSTACK_PRINTF=0;      AC_SUBST([REPLACE_OBSTACK_PRINTF])
  REPLACE_PERROR=0;              AC_SUBST([REPLACE_PERROR])
  REPLACE_POPEN=0;               AC_SUBST([REPLACE_POPEN])
  REPLACE_PRINTF=0;              AC_SUBST([REPLACE_PRINTF])
  REPLACE_REMOVE=0;              AC_SUBST([REPLACE_REMOVE])
  REPLACE_RENAME=0;              AC_SUBST([REPLACE_RENAME])
  REPLACE_RENAMEAT=0;            AC_SUBST([REPLACE_RENAMEAT])
  REPLACE_SNPRINTF=0;            AC_SUBST([REPLACE_SNPRINTF])
  REPLACE_SPRINTF=0;             AC_SUBST([REPLACE_SPRINTF])
  REPLACE_STDIO_READ_FUNCS=0;    AC_SUBST([REPLACE_STDIO_READ_FUNCS])
  REPLACE_STDIO_WRITE_FUNCS=0;   AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
  REPLACE_TMPFILE=0;             AC_SUBST([REPLACE_TMPFILE])
  REPLACE_VASPRINTF=0;           AC_SUBST([REPLACE_VASPRINTF])
  REPLACE_VDPRINTF=0;            AC_SUBST([REPLACE_VDPRINTF])
  REPLACE_VFPRINTF=0;            AC_SUBST([REPLACE_VFPRINTF])
  REPLACE_VPRINTF=0;             AC_SUBST([REPLACE_VPRINTF])
  REPLACE_VSNPRINTF=0;           AC_SUBST([REPLACE_VSNPRINTF])
  REPLACE_VSPRINTF=0;            AC_SUBST([REPLACE_VSPRINTF])
])
m4trace:m4/stdlib_h.m4:9: -1- AC_DEFUN_ONCE([gl_STDLIB_H], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_NEXT_HEADERS([stdlib.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getprogname getsubopt grantpt
    initstate initstate_r mbstowcs mbtowc mkdtemp mkostemp mkostemps mkstemp
    mkstemps posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])

  AC_REQUIRE([AC_C_RESTRICT])

  dnl Test whether MB_CUR_MAX needs to be overridden.
  dnl On Solaris 10, in UTF-8 locales, its value is 3 but needs to be 4.
  dnl Fortunately, we can do this because on this platform MB_LEN_MAX is 5.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_REQUIRE([gt_LOCALE_EN_UTF8])
  AC_CACHE_CHECK([whether MB_CUR_MAX is correct],
    [gl_cv_macro_MB_CUR_MAX_good],
    [
      dnl Initial guess, used when cross-compiling or when no suitable locale
      dnl is present.
changequote(,)dnl
      case "$host_os" in
                           # Guess no on Solaris and Haiku.
        solaris* | haiku*) gl_cv_macro_MB_CUR_MAX_good="guessing no" ;;
                           # Guess yes otherwise.
        *)                 gl_cv_macro_MB_CUR_MAX_good="guessing yes" ;;
      esac
changequote([,])dnl
      if test "$LOCALE_EN_UTF8" != none; then
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <locale.h>
#include <stdlib.h>
int main ()
{
  int result = 0;
  if (setlocale (LC_ALL, "$LOCALE_EN_UTF8") != NULL)
    {
      if (MB_CUR_MAX < 4)
        result |= 1;
    }
  return result;
}]])],
          [gl_cv_macro_MB_CUR_MAX_good=yes],
          [gl_cv_macro_MB_CUR_MAX_good=no],
          [:])
      fi
    ])
  case "$gl_cv_macro_MB_CUR_MAX_good" in
    *yes) ;;
    *) REPLACE_MB_CUR_MAX=1 ;;
  esac

  AC_CHECK_DECLS_ONCE([ecvt])
  if test $ac_cv_have_decl_ecvt = no; then
    HAVE_DECL_ECVT=0
  fi
  AC_CHECK_DECLS_ONCE([fcvt])
  if test $ac_cv_have_decl_fcvt = no; then
    HAVE_DECL_FCVT=0
  fi
  AC_CHECK_DECLS_ONCE([gcvt])
  if test $ac_cv_have_decl_gcvt = no; then
    HAVE_DECL_GCVT=0
  fi
])
m4trace:m4/stdlib_h.m4:98: -1- AC_DEFUN([gl_STDLIB_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdlib_h.m4:110: -1- AC_DEFUN([gl_STDLIB_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ABORT_DEBUG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPROGNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STACK_TRACE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOF])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STDLIB_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
])
m4trace:m4/stdlib_h.m4:173: -1- AC_DEFUN([gl_STDLIB_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE__EXIT=1;              AC_SUBST([HAVE__EXIT])
  HAVE_ALIGNED_ALLOC=1;      AC_SUBST([HAVE_ALIGNED_ALLOC])
  HAVE_ATOLL=1;              AC_SUBST([HAVE_ATOLL])
  HAVE_CANONICALIZE_FILE_NAME=1;  AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
  HAVE_DECL_ECVT=1;          AC_SUBST([HAVE_DECL_ECVT])
  HAVE_DECL_FCVT=1;          AC_SUBST([HAVE_DECL_FCVT])
  HAVE_DECL_GCVT=1;          AC_SUBST([HAVE_DECL_GCVT])
  HAVE_DECL_GETLOADAVG=1;    AC_SUBST([HAVE_DECL_GETLOADAVG])
  HAVE_DECL_PROGRAM_INVOCATION_NAME=1; AC_SUBST([HAVE_DECL_PROGRAM_INVOCATION_NAME])
  HAVE_GETPROGNAME=1;        AC_SUBST([HAVE_GETPROGNAME])
  HAVE_GETSUBOPT=1;          AC_SUBST([HAVE_GETSUBOPT])
  HAVE_GRANTPT=1;            AC_SUBST([HAVE_GRANTPT])
  HAVE_INITSTATE=1;          AC_SUBST([HAVE_INITSTATE])
  HAVE_DECL_INITSTATE=1;     AC_SUBST([HAVE_DECL_INITSTATE])
  HAVE_MBTOWC=1;             AC_SUBST([HAVE_MBTOWC])
  HAVE_MKDTEMP=1;            AC_SUBST([HAVE_MKDTEMP])
  HAVE_MKOSTEMP=1;           AC_SUBST([HAVE_MKOSTEMP])
  HAVE_MKOSTEMPS=1;          AC_SUBST([HAVE_MKOSTEMPS])
  HAVE_MKSTEMP=1;            AC_SUBST([HAVE_MKSTEMP])
  HAVE_MKSTEMPS=1;           AC_SUBST([HAVE_MKSTEMPS])
  HAVE_POSIX_MEMALIGN=1;     AC_SUBST([HAVE_POSIX_MEMALIGN])
  HAVE_POSIX_OPENPT=1;       AC_SUBST([HAVE_POSIX_OPENPT])
  HAVE_PTSNAME=1;            AC_SUBST([HAVE_PTSNAME])
  HAVE_PTSNAME_R=1;          AC_SUBST([HAVE_PTSNAME_R])
  HAVE_QSORT_R=1;            AC_SUBST([HAVE_QSORT_R])
  HAVE_RANDOM=1;             AC_SUBST([HAVE_RANDOM])
  HAVE_RANDOM_H=1;           AC_SUBST([HAVE_RANDOM_H])
  HAVE_RANDOM_R=1;           AC_SUBST([HAVE_RANDOM_R])
  HAVE_REALLOCARRAY=1;       AC_SUBST([HAVE_REALLOCARRAY])
  HAVE_REALPATH=1;           AC_SUBST([HAVE_REALPATH])
  HAVE_RPMATCH=1;            AC_SUBST([HAVE_RPMATCH])
  HAVE_SECURE_GETENV=1;      AC_SUBST([HAVE_SECURE_GETENV])
  HAVE_SETENV=1;             AC_SUBST([HAVE_SETENV])
  HAVE_DECL_SETENV=1;        AC_SUBST([HAVE_DECL_SETENV])
  HAVE_SETSTATE=1;           AC_SUBST([HAVE_SETSTATE])
  HAVE_DECL_SETSTATE=1;      AC_SUBST([HAVE_DECL_SETSTATE])
  HAVE_STRTOD=1;             AC_SUBST([HAVE_STRTOD])
  HAVE_STRTOF=1;             AC_SUBST([HAVE_STRTOF])
  HAVE_STRTOL=1;             AC_SUBST([HAVE_STRTOL])
  HAVE_STRTOLD=1;            AC_SUBST([HAVE_STRTOLD])
  HAVE_STRTOLL=1;            AC_SUBST([HAVE_STRTOLL])
  HAVE_STRTOUL=1;            AC_SUBST([HAVE_STRTOUL])
  HAVE_STRTOULL=1;           AC_SUBST([HAVE_STRTOULL])
  HAVE_STRUCT_RANDOM_DATA=1; AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
  HAVE_SYS_LOADAVG_H=0;      AC_SUBST([HAVE_SYS_LOADAVG_H])
  HAVE_UNLOCKPT=1;           AC_SUBST([HAVE_UNLOCKPT])
  HAVE_DECL_UNSETENV=1;      AC_SUBST([HAVE_DECL_UNSETENV])
  REPLACE__EXIT=0;           AC_SUBST([REPLACE__EXIT])
  REPLACE_ABORT=0;           AC_SUBST([REPLACE_ABORT])
  REPLACE_ALIGNED_ALLOC=0;   AC_SUBST([REPLACE_ALIGNED_ALLOC])
  REPLACE_CALLOC_FOR_CALLOC_GNU=0;    AC_SUBST([REPLACE_CALLOC_FOR_CALLOC_GNU])
  REPLACE_CALLOC_FOR_CALLOC_POSIX=0;  AC_SUBST([REPLACE_CALLOC_FOR_CALLOC_POSIX])
  REPLACE_CANONICALIZE_FILE_NAME=0;  AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
  REPLACE_FREE=0;            AC_SUBST([REPLACE_FREE])
  REPLACE_GETLOADAVG=0;      AC_SUBST([REPLACE_GETLOADAVG])
  REPLACE_GETPROGNAME=0;     AC_SUBST([REPLACE_GETPROGNAME])
  REPLACE_GETSUBOPT=0;       AC_SUBST([REPLACE_GETSUBOPT])
  REPLACE_INITSTATE=0;       AC_SUBST([REPLACE_INITSTATE])
  REPLACE_MALLOC_FOR_MALLOC_GNU=0;    AC_SUBST([REPLACE_MALLOC_FOR_MALLOC_GNU])
  REPLACE_MALLOC_FOR_MALLOC_POSIX=0;  AC_SUBST([REPLACE_MALLOC_FOR_MALLOC_POSIX])
  REPLACE_MB_CUR_MAX=0;      AC_SUBST([REPLACE_MB_CUR_MAX])
  REPLACE_MBSTOWCS=0;        AC_SUBST([REPLACE_MBSTOWCS])
  REPLACE_MBTOWC=0;          AC_SUBST([REPLACE_MBTOWC])
  REPLACE_MKOSTEMP=0;        AC_SUBST([REPLACE_MKOSTEMP])
  REPLACE_MKOSTEMPS=0;       AC_SUBST([REPLACE_MKOSTEMPS])
  REPLACE_MKSTEMP=0;         AC_SUBST([REPLACE_MKSTEMP])
  REPLACE_POSIX_MEMALIGN=0;  AC_SUBST([REPLACE_POSIX_MEMALIGN])
  REPLACE_POSIX_OPENPT=0;    AC_SUBST([REPLACE_POSIX_OPENPT])
  REPLACE_PTSNAME=0;         AC_SUBST([REPLACE_PTSNAME])
  REPLACE_PTSNAME_R=0;       AC_SUBST([REPLACE_PTSNAME_R])
  REPLACE_PUTENV=0;          AC_SUBST([REPLACE_PUTENV])
  REPLACE_QSORT_R=0;         AC_SUBST([REPLACE_QSORT_R])
  REPLACE_RAND=0;            AC_SUBST([REPLACE_RAND])
  REPLACE_RANDOM=0;          AC_SUBST([REPLACE_RANDOM])
  REPLACE_RANDOM_R=0;        AC_SUBST([REPLACE_RANDOM_R])
  REPLACE_REALLOC_FOR_REALLOC_GNU=0;    AC_SUBST([REPLACE_REALLOC_FOR_REALLOC_GNU])
  REPLACE_REALLOC_FOR_REALLOC_POSIX=0;  AC_SUBST([REPLACE_REALLOC_FOR_REALLOC_POSIX])
  REPLACE_REALLOCARRAY=0;    AC_SUBST([REPLACE_REALLOCARRAY])
  REPLACE_REALPATH=0;        AC_SUBST([REPLACE_REALPATH])
  REPLACE_SETENV=0;          AC_SUBST([REPLACE_SETENV])
  REPLACE_SETSTATE=0;        AC_SUBST([REPLACE_SETSTATE])
  REPLACE_STRTOD=0;          AC_SUBST([REPLACE_STRTOD])
  REPLACE_STRTOF=0;          AC_SUBST([REPLACE_STRTOF])
  REPLACE_STRTOL=0;          AC_SUBST([REPLACE_STRTOL])
  REPLACE_STRTOLD=0;         AC_SUBST([REPLACE_STRTOLD])
  REPLACE_STRTOLL=0;         AC_SUBST([REPLACE_STRTOLL])
  REPLACE_STRTOUL=0;         AC_SUBST([REPLACE_STRTOUL])
  REPLACE_STRTOULL=0;        AC_SUBST([REPLACE_STRTOULL])
  REPLACE_UNSETENV=0;        AC_SUBST([REPLACE_UNSETENV])
  REPLACE_WCTOMB=0;          AC_SUBST([REPLACE_WCTOMB])
  CAN_PRINT_STACK_TRACE=0;   AC_SUBST([CAN_PRINT_STACK_TRACE])
])
m4trace:m4/stpcpy.m4:9: -1- AC_DEFUN([gl_FUNC_STPCPY], [
  dnl Persuade glibc <string.h> to declare stpcpy().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl The stpcpy() declaration in lib/string.in.h uses 'restrict'.
  AC_REQUIRE([AC_C_RESTRICT])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_CHECK_FUNCS_ANDROID([stpcpy], [[#include <string.h>]])
  if test $ac_cv_func_stpcpy = no; then
    HAVE_STPCPY=0
    case "$gl_cv_onwards_func_stpcpy" in
      future*) REPLACE_STPCPY=1 ;;
    esac
  fi
])
m4trace:m4/stpcpy.m4:28: -1- AC_DEFUN([gl_PREREQ_STPCPY], [
  :
])
m4trace:m4/strchrnul.m4:9: -1- AC_DEFUN([gl_FUNC_STRCHRNUL], [
  dnl Persuade glibc <string.h> to declare strchrnul().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_CHECK_FUNCS_ANDROID([strchrnul], [[#include <string.h>]])
  if test $ac_cv_func_strchrnul = no; then
    HAVE_STRCHRNUL=0
    case "$gl_cv_onwards_func_strchrnul" in
      future*) REPLACE_STRCHRNUL=1 ;;
    esac
  else
    AC_CACHE_CHECK([whether strchrnul works],
      [gl_cv_func_strchrnul_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <string.h> /* for strchrnul */
]], [[const char *buf = "a";
      return strchrnul (buf, 'b') != buf + 1;
    ]])],
        [gl_cv_func_strchrnul_works=yes],
        [gl_cv_func_strchrnul_works=no],
        [dnl Cygwin 1.7.9 introduced strchrnul, but it was broken until 1.7.10
         AC_EGREP_CPP([Lucky user],
           [
#if defined __CYGWIN__
 #include <cygwin/version.h>
 #if CYGWIN_VERSION_DLL_COMBINED > CYGWIN_VERSION_DLL_MAKE_COMBINED (1007, 9)
  Lucky user
 #endif
#else
  Lucky user
#endif
           ],
           [gl_cv_func_strchrnul_works="guessing yes"],
           [gl_cv_func_strchrnul_works="guessing no"])
        ])
      ])
    case "$gl_cv_func_strchrnul_works" in
      *yes) ;;
      *) REPLACE_STRCHRNUL=1 ;;
    esac
  fi
])
m4trace:m4/strchrnul.m4:55: -1- AC_DEFUN([gl_PREREQ_STRCHRNUL], [:])
m4trace:m4/strdup.m4:11: -1- AC_DEFUN([gl_FUNC_STRDUP], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:20: -1- AC_DEFUN([gl_FUNC_STRDUP_POSIX], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_MALLOC_POSIX])
  if test $gl_cv_func_malloc_posix != yes; then
    REPLACE_STRDUP=1
  fi
  AC_CHECK_DECLS_ONCE([strdup])
  if test $ac_cv_have_decl_strdup = no; then
    HAVE_DECL_STRDUP=0
  fi
])
m4trace:m4/strdup.m4:34: -1- AC_DEFUN([gl_PREREQ_STRDUP], [:])
m4trace:m4/strerror.m4:9: -1- AC_DEFUN([gl_FUNC_STRERROR], [
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  AC_REQUIRE([gl_HEADER_ERRNO_H])
  AC_REQUIRE([gl_FUNC_STRERROR_0])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
    AC_REQUIRE([gl_FUNC_STRERROR_R_WORKS])
  ])
  if test "$GL_GENERATE_ERRNO_H:$REPLACE_STRERROR_0" = false:0; then
    AC_CACHE_CHECK([for working strerror function],
     [gl_cv_func_working_strerror],
     [AC_RUN_IFELSE(
        [AC_LANG_PROGRAM(
           [[#include <string.h>
           ]],
           [[if (!*strerror (-2)) return 1;]])],
        [gl_cv_func_working_strerror=yes],
        [gl_cv_func_working_strerror=no],
        [case "$host_os" in
                               # Guess yes on glibc systems.
           *-gnu* | gnu*)      gl_cv_func_working_strerror="guessing yes" ;;
                               # Guess yes on musl systems.
           *-musl* | midipix*) gl_cv_func_working_strerror="guessing yes" ;;
                               # If we don't know, obey --enable-cross-guesses.
           *)                  gl_cv_func_working_strerror="$gl_cross_guess_normal" ;;
         esac
        ])
    ])
    case "$gl_cv_func_working_strerror" in
      *yes) ;;
      *)
        dnl The system's strerror() fails to return a string for out-of-range
        dnl integers. Replace it.
        REPLACE_STRERROR=1
        ;;
    esac
    m4_ifdef([gl_FUNC_STRERROR_R_WORKS], [
      dnl If the system's strerror_r or __xpg_strerror_r clobbers strerror's
      dnl buffer, we must replace strerror.
      case "$gl_cv_func_strerror_r_works" in
        *no) REPLACE_STRERROR=1 ;;
      esac
    ])
  else
    dnl The system's strerror() cannot know about the new errno values we add
    dnl to <errno.h>, or any fix for strerror(0). Replace it.
    REPLACE_STRERROR=1
  fi
])
m4trace:m4/strerror.m4:62: -1- AC_DEFUN([gl_FUNC_STRERROR_0], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  REPLACE_STRERROR_0=0
  AC_CACHE_CHECK([whether strerror(0) succeeds],
   [gl_cv_func_strerror_0_works],
   [AC_RUN_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <string.h>
           #include <errno.h>
         ]],
         [[int result = 0;
           char *str;
           errno = 0;
           str = strerror (0);
           if (!*str) result |= 1;
           if (errno) result |= 2;
           if (strstr (str, "nknown") || strstr (str, "ndefined"))
             result |= 4;
           return result;]])],
      [gl_cv_func_strerror_0_works=yes],
      [gl_cv_func_strerror_0_works=no],
      [case "$host_os" in
                             # Guess yes on glibc systems.
         *-gnu* | gnu*)      gl_cv_func_strerror_0_works="guessing yes" ;;
                             # Guess yes on musl systems.
         *-musl* | midipix*) gl_cv_func_strerror_0_works="guessing yes" ;;
                             # Guess yes on native Windows.
         mingw* | windows*)  gl_cv_func_strerror_0_works="guessing yes" ;;
                             # If we don't know, obey --enable-cross-guesses.
         *)                  gl_cv_func_strerror_0_works="$gl_cross_guess_normal" ;;
       esac
      ])
  ])
  case "$gl_cv_func_strerror_0_works" in
    *yes) ;;
    *)
      REPLACE_STRERROR_0=1
      AC_DEFINE([REPLACE_STRERROR_0], [1], [Define to 1 if strerror(0)
        does not return a message implying success.])
      ;;
  esac
])
m4trace:m4/string_h.m4:13: -1- AC_DEFUN_ONCE([gl_STRING_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
  gl_NEXT_HEADERS([string.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]],
    [explicit_bzero ffsl ffsll memmem mempcpy memrchr memset_explicit
     rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/string_h.m4:37: -1- AC_DEFUN([gl_STRING_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_STRING_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/string_h.m4:49: -1- AC_DEFUN([gl_STRING_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMSET_EXPLICIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_STRING_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_STRING_H_DEFAULTS])
])
m4trace:m4/string_h.m4:104: -1- AC_DEFUN([gl_STRING_H_DEFAULTS], [
  HAVE_MBSLEN=0;             AC_SUBST([HAVE_MBSLEN])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_EXPLICIT_BZERO=1;        AC_SUBST([HAVE_EXPLICIT_BZERO])
  HAVE_FFSL=1;                  AC_SUBST([HAVE_FFSL])
  HAVE_FFSLL=1;                 AC_SUBST([HAVE_FFSLL])
  HAVE_DECL_MEMMEM=1;           AC_SUBST([HAVE_DECL_MEMMEM])
  HAVE_MEMPCPY=1;               AC_SUBST([HAVE_MEMPCPY])
  HAVE_MEMSET_EXPLICIT=1;       AC_SUBST([HAVE_MEMSET_EXPLICIT])
  HAVE_DECL_MEMRCHR=1;          AC_SUBST([HAVE_DECL_MEMRCHR])
  HAVE_RAWMEMCHR=1;             AC_SUBST([HAVE_RAWMEMCHR])
  HAVE_STPCPY=1;                AC_SUBST([HAVE_STPCPY])
  HAVE_STPNCPY=1;               AC_SUBST([HAVE_STPNCPY])
  HAVE_STRCHRNUL=1;             AC_SUBST([HAVE_STRCHRNUL])
  HAVE_DECL_STRDUP=1;           AC_SUBST([HAVE_DECL_STRDUP])
  HAVE_DECL_STRNDUP=1;          AC_SUBST([HAVE_DECL_STRNDUP])
  HAVE_DECL_STRNLEN=1;          AC_SUBST([HAVE_DECL_STRNLEN])
  HAVE_STRPBRK=1;               AC_SUBST([HAVE_STRPBRK])
  HAVE_STRSEP=1;                AC_SUBST([HAVE_STRSEP])
  HAVE_STRCASESTR=1;            AC_SUBST([HAVE_STRCASESTR])
  HAVE_DECL_STRTOK_R=1;         AC_SUBST([HAVE_DECL_STRTOK_R])
  HAVE_DECL_STRERROR_R=1;       AC_SUBST([HAVE_DECL_STRERROR_R])
  HAVE_STRERRORNAME_NP=1;       AC_SUBST([HAVE_STRERRORNAME_NP])
  HAVE_SIGABBREV_NP=1;          AC_SUBST([HAVE_SIGABBREV_NP])
  HAVE_SIGDESCR_NP=1;           AC_SUBST([HAVE_SIGDESCR_NP])
  HAVE_DECL_STRSIGNAL=1;        AC_SUBST([HAVE_DECL_STRSIGNAL])
  HAVE_STRVERSCMP=1;            AC_SUBST([HAVE_STRVERSCMP])
  REPLACE_FFSLL=0;              AC_SUBST([REPLACE_FFSLL])
  REPLACE_MEMCHR=0;             AC_SUBST([REPLACE_MEMCHR])
  REPLACE_MEMMEM=0;             AC_SUBST([REPLACE_MEMMEM])
  REPLACE_MEMPCPY=0;            AC_SUBST([REPLACE_MEMPCPY])
  REPLACE_MEMSET_EXPLICIT=0;    AC_SUBST([REPLACE_MEMSET_EXPLICIT])
  REPLACE_STPCPY=0;             AC_SUBST([REPLACE_STPCPY])
  REPLACE_STPNCPY=0;            AC_SUBST([REPLACE_STPNCPY])
  REPLACE_STRCHRNUL=0;          AC_SUBST([REPLACE_STRCHRNUL])
  REPLACE_STRDUP=0;             AC_SUBST([REPLACE_STRDUP])
  REPLACE_STRNCAT=0;            AC_SUBST([REPLACE_STRNCAT])
  REPLACE_STRNDUP=0;            AC_SUBST([REPLACE_STRNDUP])
  REPLACE_STRNLEN=0;            AC_SUBST([REPLACE_STRNLEN])
  REPLACE_STRSTR=0;             AC_SUBST([REPLACE_STRSTR])
  REPLACE_STRCASESTR=0;         AC_SUBST([REPLACE_STRCASESTR])
  REPLACE_STRTOK_R=0;           AC_SUBST([REPLACE_STRTOK_R])
  REPLACE_STRERROR=0;           AC_SUBST([REPLACE_STRERROR])
  REPLACE_STRERROR_R=0;         AC_SUBST([REPLACE_STRERROR_R])
  REPLACE_STRERRORNAME_NP=0;    AC_SUBST([REPLACE_STRERRORNAME_NP])
  REPLACE_STRSIGNAL=0;          AC_SUBST([REPLACE_STRSIGNAL])
  REPLACE_STRVERSCMP=0;         AC_SUBST([REPLACE_STRVERSCMP])
  UNDEFINE_STRTOK_R=0;          AC_SUBST([UNDEFINE_STRTOK_R])
])
m4trace:m4/sys_cdefs_h.m4:11: -1- AC_DEFUN_ONCE([gl_CHECK_HEADER_SYS_CDEFS_H], [AC_CACHE_CHECK([for glibc-compatible sys/cdefs.h],
     [gl_cv_header_sys_cdefs_h],
     [AC_COMPILE_IFELSE(
        [AC_LANG_DEFINES_PROVIDED
         [#include <sys/cdefs.h>
          enum { foo = __GNUC_PREREQ (14, 1) } bar;
        ]],
        [gl_cv_header_sys_cdefs_h=yes],
        [gl_cv_header_sys_cdefs_h=no])])
   if test "$gl_cv_header_sys_cdefs_h" = yes; then
     HAVE_SYS_CDEFS_H=1
   else
     HAVE_SYS_CDEFS_H=0
   fi
   AC_SUBST([HAVE_SYS_CDEFS_H])])
m4trace:m4/sys_select_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_SELECT_H], [
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],
    [gl_cv_header_sys_select_h_selfcontained],
    [
      dnl Test against two bugs:
      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of
      dnl    <sys/types.h>.
      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration
      dnl    of 'struct timeval', and no definition of this type.
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],
                                         [[struct timeval b;]])],
        [gl_cv_header_sys_select_h_selfcontained=yes],
        [gl_cv_header_sys_select_h_selfcontained=no])
      dnl Test against another bug:
      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation
      dnl    that relies on memset(), but without including <string.h>.
      if test $gl_cv_header_sys_select_h_selfcontained = yes; then
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[#include <sys/select.h>]],
                           [[int memset; int bzero;]])
          ],
          [AC_LINK_IFELSE(
             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[
                  #undef memset
                  #define memset nonexistent_memset
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void *memset (void *, int, unsigned long);
                  #undef bzero
                  #define bzero nonexistent_bzero
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void bzero (void *, unsigned long);
                  fd_set fds;
                  FD_ZERO (&fds);
                ]])
             ],
             [],
             [gl_cv_header_sys_select_h_selfcontained=no])
          ])
      fi
    ])
  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/select.h])
  if test $ac_cv_header_sys_select_h = yes; then
    HAVE_SYS_SELECT_H=1
  else
    HAVE_SYS_SELECT_H=0
  fi
  AC_SUBST([HAVE_SYS_SELECT_H])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
])
m4trace:m4/sys_select_h.m4:84: -1- AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SELECT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_select_h.m4:96: -1- AC_DEFUN([gl_SYS_SELECT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SELECT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
])
m4trace:m4/sys_select_h.m4:106: -1- AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])
  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])
  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])
])
m4trace:m4/sys_socket_h.m4:11: -1- AC_DEFUN_ONCE([gl_SYS_SOCKET_H], [
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On OSF/1, the functions recv(), send(), recvfrom(), sendto() have
  dnl old-style declarations (with return type 'int' instead of 'ssize_t')
  dnl unless _POSIX_PII_SOCKET is defined.
  case "$host_os" in
    osf*)
      AC_DEFINE([_POSIX_PII_SOCKET], [1],
        [Define to 1 in order to get the POSIX compatible declarations
         of socket functions.])
      ;;
  esac

  GL_GENERATE_SYS_SOCKET_H=false
  AC_CACHE_CHECK([whether <sys/socket.h> is self-contained],
    [gl_cv_header_sys_socket_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]], [[]])],
        [gl_cv_header_sys_socket_h_selfcontained=yes],
        [gl_cv_header_sys_socket_h_selfcontained=no])
    ])
  if test $gl_cv_header_sys_socket_h_selfcontained = yes; then
    dnl If the shutdown function exists, <sys/socket.h> should define
    dnl SHUT_RD, SHUT_WR, SHUT_RDWR.
    AC_CHECK_FUNCS([shutdown])
    if test $ac_cv_func_shutdown = yes; then
      AC_CACHE_CHECK([whether <sys/socket.h> defines the SHUT_* macros],
        [gl_cv_header_sys_socket_h_shut],
        [
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <sys/socket.h>]],
               [[int a[] = { SHUT_RD, SHUT_WR, SHUT_RDWR };]])],
            [gl_cv_header_sys_socket_h_shut=yes],
            [gl_cv_header_sys_socket_h_shut=no])
        ])
      if test $gl_cv_header_sys_socket_h_shut = no; then
        GL_GENERATE_SYS_SOCKET_H=true
      fi
    fi
  fi
  # We need to check for ws2tcpip.h now.
  gl_PREREQ_SYS_H_SOCKET
  AC_CHECK_TYPES([struct sockaddr_storage, sa_family_t],,,[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_sockaddr_storage = no; then
    HAVE_STRUCT_SOCKADDR_STORAGE=0
  fi
  if test $ac_cv_type_sa_family_t = no; then
    HAVE_SA_FAMILY_T=0
  fi
  if test $ac_cv_type_struct_sockaddr_storage != no; then
    AC_CHECK_MEMBERS([struct sockaddr_storage.ss_family],
      [],
      [HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=0],
      [#include <sys/types.h>
       #ifdef HAVE_SYS_SOCKET_H
       #include <sys/socket.h>
       #endif
       #ifdef HAVE_WS2TCPIP_H
       #include <ws2tcpip.h>
       #endif
      ])
  fi
  if test $HAVE_STRUCT_SOCKADDR_STORAGE = 0 || test $HAVE_SA_FAMILY_T = 0 \
     || test $HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 0; then
    GL_GENERATE_SYS_SOCKET_H=true
  fi
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_socket_h.m4:105: -1- AC_DEFUN([gl_PREREQ_SYS_H_SOCKET], [
  dnl Check prerequisites of the <sys/socket.h> replacement.
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  gl_CHECK_NEXT_HEADERS([sys/socket.h])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_SYS_SOCKET_H=1
  else
    HAVE_SYS_SOCKET_H=0
  fi
  AC_SUBST([HAVE_SYS_SOCKET_H])
  gl_PREREQ_SYS_H_WS2TCPIP
])
m4trace:m4/sys_socket_h.m4:122: -1- AC_DEFUN([gl_PREREQ_SYS_H_WINSOCK2], [
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  if test $ac_cv_header_sys_socket_h != yes; then
    dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
    dnl the check for those headers unconditional; yet cygwin reports
    dnl that the headers are present but cannot be compiled (since on
    dnl cygwin, all socket information should come from sys/socket.h).
    AC_CHECK_HEADERS([winsock2.h])
  fi
  if test "$ac_cv_header_winsock2_h" = yes; then
    HAVE_WINSOCK2_H=1
    UNISTD_H_HAVE_WINSOCK2_H=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H=1
  else
    HAVE_WINSOCK2_H=0
  fi
  AC_SUBST([HAVE_WINSOCK2_H])
])
m4trace:m4/sys_socket_h.m4:147: -1- AC_DEFUN([gl_PREREQ_SYS_H_WS2TCPIP], [
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_WS2TCPIP_H=0
  else
    if test $ac_cv_header_ws2tcpip_h = yes; then
      HAVE_WS2TCPIP_H=1
    else
      HAVE_WS2TCPIP_H=0
    fi
  fi
  AC_SUBST([HAVE_WS2TCPIP_H])
])
m4trace:m4/sys_socket_h.m4:166: -1- AC_DEFUN([gl_SYS_SOCKET_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_socket_h.m4:178: -1- AC_DEFUN([gl_SYS_SOCKET_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_SOCKET_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
])
m4trace:m4/sys_socket_h.m4:201: -1- AC_DEFUN([gl_SYS_SOCKET_H_DEFAULTS], [
  HAVE_STRUCT_SOCKADDR_STORAGE=1; AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE])
  HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=1;
                        AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY])
  HAVE_SA_FAMILY_T=1;   AC_SUBST([HAVE_SA_FAMILY_T])
  HAVE_ACCEPT4=1;       AC_SUBST([HAVE_ACCEPT4])
])
m4trace:m4/sys_stat_h.m4:12: -1- AC_DEFUN_ONCE([gl_SYS_STAT_H], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Check for broken stat macros.
  AC_REQUIRE([AC_HEADER_STAT])

  gl_CHECK_NEXT_HEADERS([sys/stat.h])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to enable precise timestamps in 'struct stat'.
  m4_ifdef([gl_WINDOWS_STAT_TIMESPEC], [
    AC_REQUIRE([gl_WINDOWS_STAT_TIMESPEC])
  ], [
    WINDOWS_STAT_TIMESPEC=0
  ])
  AC_SUBST([WINDOWS_STAT_TIMESPEC])

  dnl Whether to ensure that struct stat.st_size is 64-bit wide.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_ST_SIZE=0
  ])
  AC_SUBST([WINDOWS_64_BIT_ST_SIZE])

  dnl Define types that are supposed to be defined in <sys/types.h> or
  dnl <sys/stat.h>.
  AC_CHECK_TYPE([nlink_t], [],
    [AC_DEFINE([nlink_t], [int],
       [Define to the type of st_nlink in struct stat, or a supertype.])],
    [#include <sys/types.h>
     #include <sys/stat.h>])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [chmod fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])

  AC_REQUIRE([AC_C_RESTRICT])
])
m4trace:m4/sys_stat_h.m4:61: -1- AC_DEFUN([gl_SYS_STAT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_STAT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_stat_h.m4:73: -1- AC_DEFUN([gl_SYS_STAT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_UNISTD_H_REQUIRE_DEFAULTS dnl for REPLACE_FCHDIR
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_STAT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
])
m4trace:m4/sys_stat_h.m4:103: -1- AC_DEFUN([gl_SYS_STAT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCHMODAT=1;      AC_SUBST([HAVE_FCHMODAT])
  HAVE_FSTATAT=1;       AC_SUBST([HAVE_FSTATAT])
  HAVE_FUTIMENS=1;      AC_SUBST([HAVE_FUTIMENS])
  HAVE_GETUMASK=1;      AC_SUBST([HAVE_GETUMASK])
  HAVE_LCHMOD=1;        AC_SUBST([HAVE_LCHMOD])
  HAVE_LSTAT=1;         AC_SUBST([HAVE_LSTAT])
  HAVE_MKDIRAT=1;       AC_SUBST([HAVE_MKDIRAT])
  HAVE_MKFIFO=1;        AC_SUBST([HAVE_MKFIFO])
  HAVE_MKFIFOAT=1;      AC_SUBST([HAVE_MKFIFOAT])
  HAVE_MKNOD=1;         AC_SUBST([HAVE_MKNOD])
  HAVE_MKNODAT=1;       AC_SUBST([HAVE_MKNODAT])
  HAVE_UTIMENSAT=1;     AC_SUBST([HAVE_UTIMENSAT])
  REPLACE_CHMOD=0;      AC_SUBST([REPLACE_CHMOD])
  REPLACE_FCHMODAT=0;   AC_SUBST([REPLACE_FCHMODAT])
  REPLACE_FSTAT=0;      AC_SUBST([REPLACE_FSTAT])
  REPLACE_FSTATAT=0;    AC_SUBST([REPLACE_FSTATAT])
  REPLACE_FUTIMENS=0;   AC_SUBST([REPLACE_FUTIMENS])
  REPLACE_LSTAT=0;      AC_SUBST([REPLACE_LSTAT])
  REPLACE_MKDIR=0;      AC_SUBST([REPLACE_MKDIR])
  REPLACE_MKFIFO=0;     AC_SUBST([REPLACE_MKFIFO])
  REPLACE_MKFIFOAT=0;   AC_SUBST([REPLACE_MKFIFOAT])
  REPLACE_MKNOD=0;      AC_SUBST([REPLACE_MKNOD])
  REPLACE_MKNODAT=0;    AC_SUBST([REPLACE_MKNODAT])
  REPLACE_STAT=0;       AC_SUBST([REPLACE_STAT])
  REPLACE_UTIMENSAT=0;  AC_SUBST([REPLACE_UTIMENSAT])
])
m4trace:m4/sys_time_h.m4:13: -1- AC_DEFUN_ONCE([gl_SYS_TIME_H], [
  dnl Use AC_REQUIRE here, so that the REPLACE_GETTIMEOFDAY=0 statement
  dnl below is expanded once only, before all REPLACE_GETTIMEOFDAY=1
  dnl statements that occur in other macros.
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  gl_CHECK_NEXT_HEADERS([sys/time.h])

  if test $ac_cv_header_sys_time_h != yes; then
    HAVE_SYS_TIME_H=0
  fi

  dnl On native Windows with MSVC, 'struct timeval' is defined in <winsock2.h>
  dnl only. So include that header in the list.
  gl_PREREQ_SYS_H_WINSOCK2
  AC_CACHE_CHECK([for struct timeval], [gl_cv_sys_struct_timeval],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #if HAVE_WINSOCK2_H
            # include <winsock2.h>
            #endif
          ]],
          [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
       [gl_cv_sys_struct_timeval=yes],
       [gl_cv_sys_struct_timeval=no])
    ])
  if test $gl_cv_sys_struct_timeval != yes; then
    HAVE_STRUCT_TIMEVAL=0
  else
    dnl On native Windows with a 64-bit 'time_t', 'struct timeval' is defined
    dnl (in <sys/time.h> and <winsock2.h> for mingw64, in <winsock2.h> only
    dnl for MSVC) with a tv_sec field of type 'long' (32-bit!), which is
    dnl smaller than the 'time_t' type mandated by POSIX.
    dnl On OpenBSD 5.1 amd64, tv_sec is 64 bits and time_t 32 bits, but
    dnl that is good enough.
    AC_CACHE_CHECK([for wide-enough struct timeval.tv_sec member],
      [gl_cv_sys_struct_timeval_tv_sec],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#if HAVE_SYS_TIME_H
               #include <sys/time.h>
              #endif
              #include <time.h>
              #if HAVE_WINSOCK2_H
              # include <winsock2.h>
              #endif
            ]],
            [[static struct timeval x;
              typedef int verify_tv_sec_type[
                sizeof (time_t) <= sizeof x.tv_sec ? 1 : -1
              ];
            ]])],
         [gl_cv_sys_struct_timeval_tv_sec=yes],
         [gl_cv_sys_struct_timeval_tv_sec=no])
      ])
    if test $gl_cv_sys_struct_timeval_tv_sec != yes; then
      REPLACE_STRUCT_TIMEVAL=1
    fi
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
])
m4trace:m4/sys_time_h.m4:93: -1- AC_DEFUN([gl_SYS_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_time_h.m4:105: -1- AC_DEFUN([gl_SYS_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TIME_H_DEFAULTS])
])
m4trace:m4/sys_time_h.m4:114: -1- AC_DEFUN([gl_SYS_TIME_H_DEFAULTS], [
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_GETTIMEOFDAY=1;       AC_SUBST([HAVE_GETTIMEOFDAY])
  HAVE_STRUCT_TIMEVAL=1;     AC_SUBST([HAVE_STRUCT_TIMEVAL])
  HAVE_SYS_TIME_H=1;         AC_SUBST([HAVE_SYS_TIME_H])
  REPLACE_GETTIMEOFDAY=0;    AC_SUBST([REPLACE_GETTIMEOFDAY])
  REPLACE_STRUCT_TIMEVAL=0;  AC_SUBST([REPLACE_STRUCT_TIMEVAL])
])
m4trace:m4/sys_types_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_TYPES_H], [
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])

  dnl Use sane struct stat types in OpenVMS 8.2 and later.
  AC_DEFINE([_USE_STD_STAT], 1, [For standard stat data types on VMS.])

  gl_NEXT_HEADERS([sys/types.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to override the 'off_t' type.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Whether to define the 'off64_t' type.
  AC_REQUIRE([gl_TYPE_OFF64_T])

  dnl Whether to override the 'dev_t' and 'ino_t' types.
  m4_ifdef([gl_WINDOWS_STAT_INODES], [
    AC_REQUIRE([gl_WINDOWS_STAT_INODES])
  ], [
    WINDOWS_STAT_INODES=0
  ])
  AC_SUBST([WINDOWS_STAT_INODES])
])
m4trace:m4/sys_types_h.m4:42: -1- AC_DEFUN([gl_SYS_TYPES_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_TYPE_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_TYPES_H_DEFAULTS])
])
m4trace:m4/sys_types_h.m4:50: -1- AC_DEFUN([gl_SYS_TYPES_H_DEFAULTS], [
])
m4trace:m4/sys_uio_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_UIO_H], [
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
  dnl <sys/uio.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/uio.h])
  if test $ac_cv_header_sys_uio_h = yes; then
    HAVE_SYS_UIO_H=1
  else
    HAVE_SYS_UIO_H=0
  fi
  AC_SUBST([HAVE_SYS_UIO_H])
])
m4trace:m4/sys_uio_h.m4:26: -1- AC_DEFUN([gl_SYS_UIO_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_UIO_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_uio_h.m4:38: -1- AC_DEFUN([gl_SYS_UIO_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS], [
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_UIO_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_UIO_H_DEFAULTS])
])
m4trace:m4/sys_uio_h.m4:46: -1- AC_DEFUN([gl_SYS_UIO_H_DEFAULTS], [
])
m4trace:m4/sys_wait_h.m4:9: -1- AC_DEFUN_ONCE([gl_SYS_WAIT_H], [
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])

  dnl <sys/wait.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/wait.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/wait.h>]],
    [waitpid])
])
m4trace:m4/sys_wait_h.m4:29: -1- AC_DEFUN([gl_SYS_WAIT_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_SYS_WAIT_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_wait_h.m4:41: -1- AC_DEFUN([gl_SYS_WAIT_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_SYS_WAIT_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_SYS_WAIT_H_DEFAULTS])
])
m4trace:m4/sys_wait_h.m4:50: -1- AC_DEFUN([gl_SYS_WAIT_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
])
m4trace:m4/threadlib.m4:56: -1- AC_DEFUN([gl_ANYTHREADLIB_EARLY], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_anythreadlib_early_done"; then
    case "$host_os" in
      osf*)
        # On OSF/1, the compiler needs the flag -D_REENTRANT so that it
        # groks <pthread.h>. cc also understands the flag -pthread, but
        # we don't use it because 1. gcc-2.95 doesn't understand -pthread,
        # 2. putting a flag into CPPFLAGS that has an effect on the linker
        # causes the AC_LINK_IFELSE test below to succeed unexpectedly,
        # leading to wrong values of LIBTHREAD and LTLIBTHREAD.
        CPPFLAGS="$CPPFLAGS -D_REENTRANT"
        ;;
    esac
    # Some systems optimize for single-threaded programs by default, and
    # need special flags to disable these optimizations. For example, the
    # definition of 'errno' in <errno.h>.
    case "$host_os" in
      aix* | freebsd*) CPPFLAGS="$CPPFLAGS -D_THREAD_SAFE" ;;
      solaris*) CPPFLAGS="$CPPFLAGS -D_REENTRANT" ;;
    esac
    gl_anythreadlib_early_done=done
  fi
])
m4trace:m4/threadlib.m4:84: -1- AC_DEFUN([gl_WEAK_SYMBOLS], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether imported symbols can be declared weak],
    [gl_cv_have_weak],
    [case "$host_os" in
       cygwin* | mingw* | windows*)
         dnl On Cygwin 3.2.0 with gcc 10.2, and likewise on mingw 10.0.0 with
         dnl gcc 11.3, the test below would succeed, but programs that use
         dnl pthread_in_use() with weak symbol references crash miserably at
         dnl runtime.
         gl_cv_have_weak="guessing no"
         ;;
       *)
         gl_cv_have_weak=no
         dnl First, test whether the compiler accepts it syntactically.
         AC_LINK_IFELSE(
           [AC_LANG_PROGRAM(
              [[extern void xyzzy ();
#pragma weak xyzzy]],
              [[xyzzy();]])],
           [gl_cv_have_weak=maybe])
         if test $gl_cv_have_weak = maybe; then
           dnl Second, test whether it actually works. On Cygwin 1.7.2, with
           dnl gcc 4.3, symbols declared weak always evaluate to the address 0.
           AC_RUN_IFELSE(
             [AC_LANG_SOURCE([[
#include <stdio.h>
#pragma weak fputs
int main ()
{
  return (fputs == NULL);
}]])],
             [gl_cv_have_weak=yes],
             [gl_cv_have_weak=no],
             [dnl When cross-compiling, assume that only ELF platforms support
              dnl weak symbols.
              AC_EGREP_CPP([Extensible Linking Format],
                [#ifdef __ELF__
                 Extensible Linking Format
                 #endif
                ],
                [gl_cv_have_weak="guessing yes"],
                [gl_cv_have_weak="guessing no"])
             ])
         fi
         ;;
     esac
     dnl But when linking statically, weak symbols don't work.
     case " $LDFLAGS " in
       *" -static "*) gl_cv_have_weak=no ;;
     esac
     dnl Test for a bug in FreeBSD 11: A link error occurs when using a weak
     dnl symbol and linking against a shared library that has a dependency on
     dnl the shared library that defines the symbol.
     case "$gl_cv_have_weak" in
       *yes)
         case "$host_os" in
           freebsd* | dragonfly* | midnightbsd*)
             : > conftest1.c
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -fPIC -shared -o libempty.so conftest1.c -lpthread >&AS_MESSAGE_LOG_FD 2>&1
             cat <<EOF > conftest2.c
#include <pthread.h>
#pragma weak pthread_mutexattr_gettype
int main ()
{
  return (pthread_mutexattr_gettype != NULL);
}
EOF
             $CC $CPPFLAGS $CFLAGS $LDFLAGS -o conftest conftest2.c libempty.so >&AS_MESSAGE_LOG_FD 2>&1 \
               || gl_cv_have_weak=no
             rm -f conftest1.c libempty.so conftest2.c conftest
             ;;
         esac
         ;;
     esac
    ])
  case "$gl_cv_have_weak" in
    *yes)
      AC_DEFINE([HAVE_WEAK_SYMBOLS], [1],
        [Define to 1 if the compiler and linker support weak declarations of symbols.])
      ;;
  esac
])
m4trace:m4/threadlib.m4:189: -1- AC_DEFUN([gl_PTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  if test -z "$gl_pthreadlib_body_done"; then
    gl_pthread_api=no
    LIBPTHREAD=
    LIBPMULTITHREAD=
    # On OSF/1, the compiler needs the flag -pthread or -D_REENTRANT so that
    # it groks <pthread.h>. It's added above, in gl_ANYTHREADLIB_EARLY.
    AC_CHECK_HEADER([pthread.h],
      [gl_have_pthread_h=yes], [gl_have_pthread_h=no])
    if test "$gl_have_pthread_h" = yes; then
      # Other possible tests:
      #   -lpthreads (FSU threads, PCthreads)
      #   -lgthreads
      # Test whether both pthread_mutex_lock and pthread_mutexattr_init exist
      # in libc. IRIX 6.5 has the first one in both libc and libpthread, but
      # the second one only in libpthread, and lock.c needs it.
      #
      # If -pthread works, prefer it to -lpthread, since Ubuntu 14.04
      # needs -pthread for some reason.  See:
      # https://lists.gnu.org/r/bug-gnulib/2014-09/msg00023.html
      saved_LIBS="$LIBS"
      for gl_pthread in '' '-pthread'; do
        LIBS="$LIBS $gl_pthread"
        AC_LINK_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <pthread.h>
               pthread_mutex_t m;
               pthread_mutexattr_t ma;
             ]],
             [[pthread_mutex_lock (&m);
               pthread_mutexattr_init (&ma);]])],
          [gl_pthread_api=yes
           LIBPTHREAD=$gl_pthread
           LIBPMULTITHREAD=$gl_pthread])
        LIBS="$saved_LIBS"
        test $gl_pthread_api = yes && break
      done
      echo "$as_me:__oline__: gl_pthread_api=$gl_pthread_api" >&AS_MESSAGE_LOG_FD
      echo "$as_me:__oline__: LIBPTHREAD=$LIBPTHREAD" >&AS_MESSAGE_LOG_FD

      gl_pthread_in_glibc=no
      # On Linux with glibc >= 2.34, libc contains the fully functional
      # pthread functions.
      case "$host_os" in
        linux*)
          AC_EGREP_CPP([Lucky user],
            [#include <features.h>
             #ifdef __GNU_LIBRARY__
              #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 34) || (__GLIBC__ > 2)
               Lucky user
              #endif
             #endif
            ],
            [gl_pthread_in_glibc=yes],
            [])
          ;;
      esac
      echo "$as_me:__oline__: gl_pthread_in_glibc=$gl_pthread_in_glibc" >&AS_MESSAGE_LOG_FD

      # Test for libpthread by looking for pthread_kill. (Not pthread_self,
      # since it is defined as a macro on OSF/1.)
      if test $gl_pthread_api = yes && test -z "$LIBPTHREAD"; then
        # The program links fine without libpthread. But it may actually
        # need to link with libpthread in order to create multiple threads.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [if test $gl_pthread_in_glibc = yes; then
             LIBPMULTITHREAD=
           else
             LIBPMULTITHREAD=-lpthread
             # On Solaris and HP-UX, most pthread functions exist also in libc.
             # Therefore pthread_in_use() needs to actually try to create a
             # thread: pthread_create from libc will fail, whereas
             # pthread_create will actually create a thread.
             # On Solaris 10 or newer, this test is no longer needed, because
             # libc contains the fully functional pthread functions.
             case "$host_os" in
changequote(,)dnl
               solaris | solaris2.[1-9] | solaris2.[1-9].* | hpux*)
changequote([,])dnl
                 AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                   [Define if the pthread_in_use() detection is hard.])
             esac
           fi
          ],
          [dnl This is needed on FreeBSD 5.2.1.
           AC_CHECK_LIB([thr], [pthread_kill],
             [if test $gl_pthread_in_glibc = yes; then
                LIBPMULTITHREAD=
              else
                LIBPMULTITHREAD=-lthr
              fi
             ])
          ])
      elif test $gl_pthread_api != yes; then
        # Some library is needed. Try libpthread and libc_r.
        AC_CHECK_LIB([pthread], [pthread_kill],
          [gl_pthread_api=yes
           LIBPTHREAD=-lpthread
           LIBPMULTITHREAD=-lpthread])
        if test $gl_pthread_api != yes; then
          # For FreeBSD 4.
          AC_CHECK_LIB([c_r], [pthread_kill],
            [gl_pthread_api=yes
             LIBPTHREAD=-lc_r
             LIBPMULTITHREAD=-lc_r])
        fi
      fi
      echo "$as_me:__oline__: LIBPMULTITHREAD=$LIBPMULTITHREAD" >&AS_MESSAGE_LOG_FD
    fi
    AC_MSG_CHECKING([whether POSIX threads API is available])
    AC_MSG_RESULT([$gl_pthread_api])
    AC_SUBST([LIBPTHREAD])
    AC_SUBST([LIBPMULTITHREAD])
    if test $gl_pthread_api = yes; then
      AC_DEFINE([HAVE_PTHREAD_API], [1],
        [Define if you have the <pthread.h> header and the POSIX threads API.])
    fi

    dnl On some systems, sched_yield is in librt, rather than in libpthread.
    AC_LINK_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <sched.h>]],
         [[sched_yield ();]])],
      [SCHED_YIELD_LIB=
      ],
      [dnl Solaris 7...10 has sched_yield in librt, not in libpthread or libc.
       AC_CHECK_LIB([rt], [sched_yield], [SCHED_YIELD_LIB=-lrt],
         [dnl Solaris 2.5.1, 2.6 has sched_yield in libposix4, not librt.
          AC_CHECK_LIB([posix4], [sched_yield], [SCHED_YIELD_LIB=-lposix4])])
      ])
    AC_SUBST([SCHED_YIELD_LIB])
    dnl For backward compatibility.
    LIB_SCHED_YIELD="$SCHED_YIELD_LIB"
    AC_SUBST([LIB_SCHED_YIELD])

    gl_pthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:330: -1- AC_DEFUN([gl_PTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_PTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:350: -1- AC_DEFUN([gl_STDTHREADLIB_BODY], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test -z "$gl_stdthreadlib_body_done"; then
    AC_CHECK_HEADERS_ONCE([threads.h])

    case "$host_os" in
      mingw* | windows*)
        LIBSTDTHREAD=
        ;;
      *)
        gl_PTHREADLIB_BODY
        if test $ac_cv_header_threads_h = yes; then
          dnl glibc >= 2.29 has thrd_create in libpthread.
          dnl FreeBSD >= 10 has thrd_create in libstdthreads; this library depends
          dnl on libpthread (for the symbol 'pthread_mutexattr_gettype').
          dnl glibc >= 2.34, AIX >= 7.1, and Solaris >= 11.4 have thrd_create in
          dnl libc.
          gl_CHECK_FUNCS_ANDROID([thrd_create], [[#include <threads.h>]])
          if test $ac_cv_func_thrd_create = yes; then
            LIBSTDTHREAD=
          else
            AC_CHECK_LIB([stdthreads], [thrd_create], [
              LIBSTDTHREAD='-lstdthreads -lpthread'
            ], [
              dnl Guess that thrd_create is in libpthread.
              LIBSTDTHREAD="$LIBPMULTITHREAD"
            ])
          fi
        else
          dnl Libraries needed by thrd.c, mtx.c, cnd.c, tss.c.
          LIBSTDTHREAD="$LIBPMULTITHREAD $SCHED_YIELD_LIB"
        fi
        ;;
    esac
    AC_SUBST([LIBSTDTHREAD])

    AC_MSG_CHECKING([whether ISO C threads API is available])
    AC_MSG_RESULT([$ac_cv_header_threads_h])
    gl_stdthreadlib_body_done=done
  fi
])
m4trace:m4/threadlib.m4:394: -1- AC_DEFUN([gl_STDTHREADLIB], [
  AC_REQUIRE([gl_ANYTHREADLIB_EARLY])
  gl_STDTHREADLIB_BODY
])
m4trace:m4/threadlib.m4:431: -1- AC_DEFUN([gl_THREADLIB_EARLY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
])
m4trace:m4/threadlib.m4:438: -1- AC_DEFUN([gl_THREADLIB_EARLY_BODY], [
  dnl Ordering constraints: This macro modifies CPPFLAGS in a way that
  dnl influences the result of the autoconf tests that test for *_unlocked
  dnl declarations, on AIX 5 at least. Therefore it must come early.
  AC_BEFORE([$0], [gl_FUNC_GLIBC_UNLOCKED_IO])dnl
  AC_BEFORE([$0], [gl_ARGP])dnl

  AC_REQUIRE([AC_CANONICAL_HOST])
  dnl _GNU_SOURCE is needed for pthread_rwlock_t on glibc systems.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  dnl Check for multithreading.
  m4_ifdef([gl_THREADLIB_DEFAULT_NO],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=no])],
    [m4_divert_text([DEFAULTS], [gl_use_threads_default=])])
  dnl gl_use_winpthreads_default defaults to 'no', because in mingw 10, like
  dnl in mingw 5, the use of libwinpthread still makes test-pthread-tss crash.
  m4_divert_text([DEFAULTS], [gl_use_winpthreads_default=no])
  AC_ARG_ENABLE([threads],
AS_HELP_STRING([[--enable-threads={isoc|posix|isoc+posix|windows}]], [specify multithreading API])m4_ifdef([gl_THREADLIB_DEFAULT_NO], [], [
AS_HELP_STRING([[--disable-threads]], [build without multithread safety])]),
    [gl_use_threads=$enableval],
    [if test -n "$gl_use_threads_default"; then
       gl_use_threads="$gl_use_threads_default"
     else
changequote(,)dnl
       case "$host_os" in
         dnl Disable multithreading by default on OSF/1, because it interferes
         dnl with fork()/exec(): When msgexec is linked with -lpthread, its
         dnl child process gets an endless segmentation fault inside execvp().
         osf*) gl_use_threads=no ;;
         dnl Disable multithreading by default on Cygwin 1.5.x, because it has
         dnl bugs that lead to endless loops or crashes. See
         dnl <https://cygwin.com/ml/cygwin/2009-08/msg00283.html>.
         cygwin*)
               case `uname -r` in
                 1.[0-5].*) gl_use_threads=no ;;
                 *)         gl_use_threads=yes ;;
               esac
               ;;
         dnl Obey gl_AVOID_WINPTHREAD on mingw.
         mingw* | windows*)
               case "$gl_use_winpthreads_default" in
                 yes) gl_use_threads=posix ;;
                 no)  gl_use_threads=windows ;;
                 *)   gl_use_threads=yes ;;
               esac
               ;;
         *)    gl_use_threads=yes ;;
       esac
changequote([,])dnl
     fi
    ])
  if test "$gl_use_threads" = yes \
     || test "$gl_use_threads" = isoc \
     || test "$gl_use_threads" = posix \
     || test "$gl_use_threads" = isoc+posix; then
    # For using <threads.h> or <pthread.h>:
    gl_ANYTHREADLIB_EARLY
  fi
])
m4trace:m4/threadlib.m4:502: -1- AC_DEFUN([gl_THREADLIB_BODY], [
  AC_REQUIRE([gl_THREADLIB_EARLY_BODY])
  gl_threads_api=none
  LIBTHREAD=
  LTLIBTHREAD=
  LIBMULTITHREAD=
  LTLIBMULTITHREAD=
  if test "$gl_use_threads" != no; then
    dnl Check whether the compiler and linker support weak declarations.
    gl_WEAK_SYMBOLS
    if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
      dnl If we use weak symbols to implement pthread_in_use / pth_in_use /
      dnl thread_in_use, we also need to test whether the ISO C 11 thrd_create
      dnl facility is in use.
      AC_CHECK_HEADERS_ONCE([threads.h])
      :
    fi
    if test "$gl_use_threads" = isoc || test "$gl_use_threads" = isoc+posix; then
      AC_CHECK_HEADERS_ONCE([threads.h])
      gl_have_isoc_threads="$ac_cv_header_threads_h"
    fi
    if test "$gl_use_threads" = yes \
       || test "$gl_use_threads" = posix \
       || test "$gl_use_threads" = isoc+posix; then
      gl_PTHREADLIB_BODY
      LIBTHREAD=$LIBPTHREAD LTLIBTHREAD=$LIBPTHREAD
      LIBMULTITHREAD=$LIBPMULTITHREAD LTLIBMULTITHREAD=$LIBPMULTITHREAD
      if test $gl_pthread_api = yes; then
        if test "$gl_use_threads" = isoc+posix && test "$gl_have_isoc_threads" = yes; then
          gl_threads_api='isoc+posix'
          AC_DEFINE([USE_ISOC_AND_POSIX_THREADS], [1],
            [Define if the combination of the ISO C and POSIX multithreading APIs can be used.])
          LIBTHREAD= LTLIBTHREAD=
        else
          gl_threads_api=posix
          AC_DEFINE([USE_POSIX_THREADS], [1],
            [Define if the POSIX multithreading library can be used.])
          if test -z "$LIBMULTITHREAD" && test -z "$LTLIBMULTITHREAD"; then
            AC_DEFINE([USE_POSIX_THREADS_FROM_LIBC], [1],
              [Define if references to the POSIX multithreading library are satisfied by libc.])
          else
            if case "$gl_cv_have_weak" in *yes) true;; *) false;; esac; then
              AC_DEFINE([USE_POSIX_THREADS_WEAK], [1],
                [Define if references to the POSIX multithreading library should be made weak.])
              LIBTHREAD= LTLIBTHREAD=
            else
              case "$host_os" in
                freebsd* | dragonfly* | midnightbsd*)
                  if test "x$LIBTHREAD" != "x$LIBMULTITHREAD"; then
                    dnl If weak symbols can't tell whether pthread_create(), pthread_key_create()
                    dnl etc. will succeed, we need a runtime test.
                    AC_DEFINE([PTHREAD_IN_USE_DETECTION_HARD], [1],
                      [Define if the pthread_in_use() detection is hard.])
                  fi
                  ;;
              esac
            fi
          fi
        fi
      fi
    fi
    if test $gl_threads_api = none; then
      if test "$gl_use_threads" = isoc && test "$gl_have_isoc_threads" = yes; then
        gl_STDTHREADLIB_BODY
        LIBTHREAD=$LIBSTDTHREAD LTLIBTHREAD=$LIBSTDTHREAD
        LIBMULTITHREAD=$LIBSTDTHREAD LTLIBMULTITHREAD=$LIBSTDTHREAD
        gl_threads_api=isoc
        AC_DEFINE([USE_ISOC_THREADS], [1],
          [Define if the ISO C multithreading library can be used.])
      fi
    fi
    if test $gl_threads_api = none; then
      case "$gl_use_threads" in
        yes | windows | win32) # The 'win32' is for backward compatibility.
          if { case "$host_os" in
                 mingw* | windows*) true;;
                 *) false;;
               esac
             }; then
            gl_threads_api=windows
            AC_DEFINE([USE_WINDOWS_THREADS], [1],
              [Define if the native Windows multithreading API can be used.])
          fi
          ;;
      esac
    fi
  else
    dnl "$gl_use_threads" is "no".
    AC_DEFINE([AVOID_ANY_THREADS], [1],
      [Define if no multithread safety and no multithreading is desired.])
  fi
  AC_MSG_CHECKING([for multithread API to use])
  AC_MSG_RESULT([$gl_threads_api])
  AC_SUBST([LIBTHREAD])
  AC_SUBST([LTLIBTHREAD])
  AC_SUBST([LIBMULTITHREAD])
  AC_SUBST([LTLIBMULTITHREAD])
])
m4trace:m4/threadlib.m4:602: -1- AC_DEFUN([gl_THREADLIB], [
  AC_REQUIRE([gl_THREADLIB_EARLY])
  AC_REQUIRE([gl_THREADLIB_BODY])
])
m4trace:m4/threadlib.m4:615: -1- AC_DEFUN([gl_DISABLE_THREADS], [
  m4_divert_text([INIT_PREPARE], [gl_use_threads_default=no])
])
m4trace:m4/threadlib.m4:628: -1- AC_DEFUN([gl_AVOID_WINPTHREAD], [
  m4_divert_text([INIT_PREPARE], [gl_use_winpthreads_default=no])
])
m4trace:m4/time_h.m4:13: -1- AC_DEFUN_ONCE([gl_TIME_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_TIME_H_DEFAULTS])

  gl_NEXT_HEADERS([time.h])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#include <time.h>
    ]], [
      asctime asctime_r ctime ctime_r gmtime_r localtime localtime_r mktime
      nanosleep strftime strptime time timegm timespec_get timespec_getres tzset
    ])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CACHE_CHECK([for TIME_UTC in <time.h>],
    [gl_cv_time_h_has_TIME_UTC],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static int x = TIME_UTC; x++;]])],
       [gl_cv_time_h_has_TIME_UTC=yes],
       [gl_cv_time_h_has_TIME_UTC=no])])
  if test $gl_cv_time_h_has_TIME_UTC = yes; then
    TIME_H_DEFINES_TIME_UTC=1
  else
    TIME_H_DEFINES_TIME_UTC=0
  fi
  AC_SUBST([TIME_H_DEFINES_TIME_UTC])
])
m4trace:m4/time_h.m4:53: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC], [
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CACHE_CHECK([for struct timespec in <time.h>],
    [gl_cv_sys_struct_timespec_in_time_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
       [gl_cv_sys_struct_timespec_in_time_h=yes],
       [gl_cv_sys_struct_timespec_in_time_h=no])])

  TIME_H_DEFINES_STRUCT_TIMESPEC=0
  SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=0
  PTHREAD_H_DEFINES_STRUCT_TIMESPEC=0
  UNISTD_H_DEFINES_STRUCT_TIMESPEC=0
  if test $gl_cv_sys_struct_timespec_in_time_h = yes; then
    TIME_H_DEFINES_STRUCT_TIMESPEC=1
  else
    AC_CACHE_CHECK([for struct timespec in <sys/time.h>],
      [gl_cv_sys_struct_timespec_in_sys_time_h],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
            ]],
            [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
         [gl_cv_sys_struct_timespec_in_sys_time_h=yes],
         [gl_cv_sys_struct_timespec_in_sys_time_h=no])])
    if test $gl_cv_sys_struct_timespec_in_sys_time_h = yes; then
      SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=1
    else
      AC_CACHE_CHECK([for struct timespec in <pthread.h>],
        [gl_cv_sys_struct_timespec_in_pthread_h],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <pthread.h>
              ]],
              [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
           [gl_cv_sys_struct_timespec_in_pthread_h=yes],
           [gl_cv_sys_struct_timespec_in_pthread_h=no])])
      if test $gl_cv_sys_struct_timespec_in_pthread_h = yes; then
        PTHREAD_H_DEFINES_STRUCT_TIMESPEC=1
      else
        AC_CACHE_CHECK([for struct timespec in <unistd.h>],
          [gl_cv_sys_struct_timespec_in_unistd_h],
          [AC_COMPILE_IFELSE(
             [AC_LANG_PROGRAM(
                [[#include <unistd.h>
                ]],
                [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
             [gl_cv_sys_struct_timespec_in_unistd_h=yes],
             [gl_cv_sys_struct_timespec_in_unistd_h=no])])
        if test $gl_cv_sys_struct_timespec_in_unistd_h = yes; then
          UNISTD_H_DEFINES_STRUCT_TIMESPEC=1
        fi
      fi
    fi
  fi
  AC_SUBST([TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([SYS_TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([PTHREAD_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([UNISTD_H_DEFINES_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:122: -1- AC_DEFUN([gl_TIME_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_TIME_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/time_h.m4:134: -1- AC_DEFUN([gl_TIME_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GETRES])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_TIME_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_TIME_H_DEFAULTS])
])
m4trace:m4/time_h.m4:158: -1- AC_DEFUN([gl_TIME_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_LOCALTIME_R=1;               AC_SUBST([HAVE_DECL_LOCALTIME_R])
  HAVE_NANOSLEEP=1;                      AC_SUBST([HAVE_NANOSLEEP])
  HAVE_STRPTIME=1;                       AC_SUBST([HAVE_STRPTIME])
  HAVE_TIMEGM=1;                         AC_SUBST([HAVE_TIMEGM])
  HAVE_TIMESPEC_GET=1;                   AC_SUBST([HAVE_TIMESPEC_GET])
  HAVE_TIMESPEC_GETRES=1;                AC_SUBST([HAVE_TIMESPEC_GETRES])
  dnl Even GNU libc does not have timezone_t and tzalloc() yet.
  HAVE_TIMEZONE_T=0;                     AC_SUBST([HAVE_TIMEZONE_T])
  HAVE_TZALLOC=0;                        AC_SUBST([HAVE_TZALLOC])
  REPLACE_CTIME=0;                       AC_SUBST([REPLACE_CTIME])
  REPLACE_GMTIME=0;                      AC_SUBST([REPLACE_GMTIME])
  REPLACE_LOCALTIME=0;                   AC_SUBST([REPLACE_LOCALTIME])
  REPLACE_LOCALTIME_R=0;                 AC_SUBST([REPLACE_LOCALTIME_R])
  REPLACE_LOCALTIME_RZ=0;                AC_SUBST([REPLACE_LOCALTIME_RZ])
  REPLACE_MKTIME=0;                      AC_SUBST([REPLACE_MKTIME])
  REPLACE_MKTIME_Z=0;                    AC_SUBST([REPLACE_MKTIME_Z])
  REPLACE_NANOSLEEP=0;                   AC_SUBST([REPLACE_NANOSLEEP])
  REPLACE_STRFTIME=0;                    AC_SUBST([REPLACE_STRFTIME])
  REPLACE_TIME=0;                        AC_SUBST([REPLACE_TIME])
  REPLACE_TIMEGM=0;                      AC_SUBST([REPLACE_TIMEGM])
  REPLACE_TIMESPEC_GET=0;                AC_SUBST([REPLACE_TIMESPEC_GET])
  REPLACE_TIMESPEC_GETRES=0;             AC_SUBST([REPLACE_TIMESPEC_GETRES])
  REPLACE_TZSET=0;                       AC_SUBST([REPLACE_TZSET])
])
m4trace:m4/unistd-safer.m4:9: -1- AC_DEFUN([gl_UNISTD_SAFER], [
  AC_CHECK_FUNCS_ONCE([pipe])
])
m4trace:m4/unistd_h.m4:11: -1- AC_DEFUN_ONCE([gl_UNISTD_H], [
  dnl Ensure to expand the default settings once only, before all statements
  dnl that occur in other macros.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([unistd.h])
  if test $ac_cv_header_unistd_h = yes; then
    HAVE_UNISTD_H=1
  else
    HAVE_UNISTD_H=0
  fi
  AC_SUBST([HAVE_UNISTD_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Determine WINDOWS_64_BIT_OFF_T.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS_ONCE([execvpe])
  if test $ac_cv_have_decl_execvpe = no; then
    HAVE_DECL_EXECVPE=0
  fi
])
m4trace:m4/unistd_h.m4:68: -1- AC_DEFUN([gl_UNISTD_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_UNISTD_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/unistd_h.m4:80: -1- AC_DEFUN([gl_UNISTD_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS_GNU])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_UNISTD_H_MODULE_INDICATOR_DEFAULTS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
])
m4trace:m4/unistd_h.m4:173: -1- AC_DEFUN([gl_UNISTD_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_CHOWN=1;                      AC_SUBST([HAVE_CHOWN])
  HAVE_COPY_FILE_RANGE=1;            AC_SUBST([HAVE_COPY_FILE_RANGE])
  HAVE_DUP3=1;                       AC_SUBST([HAVE_DUP3])
  HAVE_EUIDACCESS=1;                 AC_SUBST([HAVE_EUIDACCESS])
  HAVE_EXECVPE=1;                    AC_SUBST([HAVE_EXECVPE])
  HAVE_FACCESSAT=1;                  AC_SUBST([HAVE_FACCESSAT])
  HAVE_FCHDIR=1;                     AC_SUBST([HAVE_FCHDIR])
  HAVE_FCHOWNAT=1;                   AC_SUBST([HAVE_FCHOWNAT])
  HAVE_FDATASYNC=1;                  AC_SUBST([HAVE_FDATASYNC])
  HAVE_FSYNC=1;                      AC_SUBST([HAVE_FSYNC])
  HAVE_FTRUNCATE=1;                  AC_SUBST([HAVE_FTRUNCATE])
  HAVE_GETDTABLESIZE=1;              AC_SUBST([HAVE_GETDTABLESIZE])
  HAVE_GETENTROPY=1;                 AC_SUBST([HAVE_GETENTROPY])
  HAVE_GETGROUPS=1;                  AC_SUBST([HAVE_GETGROUPS])
  HAVE_GETHOSTNAME=1;                AC_SUBST([HAVE_GETHOSTNAME])
  HAVE_GETLOGIN=1;                   AC_SUBST([HAVE_GETLOGIN])
  HAVE_GETPAGESIZE=1;                AC_SUBST([HAVE_GETPAGESIZE])
  HAVE_GETPASS=1;                    AC_SUBST([HAVE_GETPASS])
  HAVE_GROUP_MEMBER=1;               AC_SUBST([HAVE_GROUP_MEMBER])
  HAVE_LCHOWN=1;                     AC_SUBST([HAVE_LCHOWN])
  HAVE_LINK=1;                       AC_SUBST([HAVE_LINK])
  HAVE_LINKAT=1;                     AC_SUBST([HAVE_LINKAT])
  HAVE_PIPE=1;                       AC_SUBST([HAVE_PIPE])
  HAVE_PIPE2=1;                      AC_SUBST([HAVE_PIPE2])
  HAVE_PREAD=1;                      AC_SUBST([HAVE_PREAD])
  HAVE_PWRITE=1;                     AC_SUBST([HAVE_PWRITE])
  HAVE_READLINK=1;                   AC_SUBST([HAVE_READLINK])
  HAVE_READLINKAT=1;                 AC_SUBST([HAVE_READLINKAT])
  HAVE_SETHOSTNAME=1;                AC_SUBST([HAVE_SETHOSTNAME])
  HAVE_SLEEP=1;                      AC_SUBST([HAVE_SLEEP])
  HAVE_SYMLINK=1;                    AC_SUBST([HAVE_SYMLINK])
  HAVE_SYMLINKAT=1;                  AC_SUBST([HAVE_SYMLINKAT])
  HAVE_UNLINKAT=1;                   AC_SUBST([HAVE_UNLINKAT])
  HAVE_USLEEP=1;                     AC_SUBST([HAVE_USLEEP])
  HAVE_DECL_ENVIRON=1;               AC_SUBST([HAVE_DECL_ENVIRON])
  HAVE_DECL_EXECVPE=1;               AC_SUBST([HAVE_DECL_EXECVPE])
  HAVE_DECL_FCHDIR=1;                AC_SUBST([HAVE_DECL_FCHDIR])
  HAVE_DECL_FDATASYNC=1;             AC_SUBST([HAVE_DECL_FDATASYNC])
  HAVE_DECL_GETDOMAINNAME=1;         AC_SUBST([HAVE_DECL_GETDOMAINNAME])
  HAVE_DECL_GETLOGIN=1;              AC_SUBST([HAVE_DECL_GETLOGIN])
  HAVE_DECL_GETLOGIN_R=1;            AC_SUBST([HAVE_DECL_GETLOGIN_R])
  HAVE_DECL_GETPAGESIZE=1;           AC_SUBST([HAVE_DECL_GETPAGESIZE])
  HAVE_DECL_GETUSERSHELL=1;          AC_SUBST([HAVE_DECL_GETUSERSHELL])
  HAVE_DECL_SETHOSTNAME=1;           AC_SUBST([HAVE_DECL_SETHOSTNAME])
  HAVE_DECL_TRUNCATE=1;              AC_SUBST([HAVE_DECL_TRUNCATE])
  HAVE_DECL_TTYNAME_R=1;             AC_SUBST([HAVE_DECL_TTYNAME_R])
  HAVE_OS_H=0;                       AC_SUBST([HAVE_OS_H])
  HAVE_SYS_PARAM_H=0;                AC_SUBST([HAVE_SYS_PARAM_H])
  REPLACE_ACCESS=0;                  AC_SUBST([REPLACE_ACCESS])
  REPLACE_CHOWN=0;                   AC_SUBST([REPLACE_CHOWN])
  REPLACE_CLOSE=0;                   AC_SUBST([REPLACE_CLOSE])
  REPLACE_COPY_FILE_RANGE=0;         AC_SUBST([REPLACE_COPY_FILE_RANGE])
  REPLACE_DUP=0;                     AC_SUBST([REPLACE_DUP])
  REPLACE_DUP2=0;                    AC_SUBST([REPLACE_DUP2])
  REPLACE_DUP3=0;                    AC_SUBST([REPLACE_DUP3])
  REPLACE_EXECL=0;                   AC_SUBST([REPLACE_EXECL])
  REPLACE_EXECLE=0;                  AC_SUBST([REPLACE_EXECLE])
  REPLACE_EXECLP=0;                  AC_SUBST([REPLACE_EXECLP])
  REPLACE_EXECV=0;                   AC_SUBST([REPLACE_EXECV])
  REPLACE_EXECVE=0;                  AC_SUBST([REPLACE_EXECVE])
  REPLACE_EXECVP=0;                  AC_SUBST([REPLACE_EXECVP])
  REPLACE_EXECVPE=0;                 AC_SUBST([REPLACE_EXECVPE])
  REPLACE_FACCESSAT=0;               AC_SUBST([REPLACE_FACCESSAT])
  REPLACE_FCHDIR=0;                  AC_SUBST([REPLACE_FCHDIR])
  REPLACE_FCHOWNAT=0;                AC_SUBST([REPLACE_FCHOWNAT])
  REPLACE_FDATASYNC=0;               AC_SUBST([REPLACE_FDATASYNC])
  REPLACE_FTRUNCATE=0;               AC_SUBST([REPLACE_FTRUNCATE])
  REPLACE_GETCWD=0;                  AC_SUBST([REPLACE_GETCWD])
  REPLACE_GETDOMAINNAME=0;           AC_SUBST([REPLACE_GETDOMAINNAME])
  REPLACE_GETDTABLESIZE=0;           AC_SUBST([REPLACE_GETDTABLESIZE])
  REPLACE_GETENTROPY=0;              AC_SUBST([REPLACE_GETENTROPY])
  REPLACE_GETLOGIN_R=0;              AC_SUBST([REPLACE_GETLOGIN_R])
  REPLACE_GETGROUPS=0;               AC_SUBST([REPLACE_GETGROUPS])
  REPLACE_GETPAGESIZE=0;             AC_SUBST([REPLACE_GETPAGESIZE])
  REPLACE_GETPASS=0;                 AC_SUBST([REPLACE_GETPASS])
  REPLACE_GETPASS_FOR_GETPASS_GNU=0; AC_SUBST([REPLACE_GETPASS_FOR_GETPASS_GNU])
  REPLACE_GETUSERSHELL=0;            AC_SUBST([REPLACE_GETUSERSHELL])
  REPLACE_ISATTY=0;                  AC_SUBST([REPLACE_ISATTY])
  REPLACE_LCHOWN=0;                  AC_SUBST([REPLACE_LCHOWN])
  REPLACE_LINK=0;                    AC_SUBST([REPLACE_LINK])
  REPLACE_LINKAT=0;                  AC_SUBST([REPLACE_LINKAT])
  REPLACE_LSEEK=0;                   AC_SUBST([REPLACE_LSEEK])
  REPLACE_PIPE2=0;                   AC_SUBST([REPLACE_PIPE2])
  REPLACE_PREAD=0;                   AC_SUBST([REPLACE_PREAD])
  REPLACE_PWRITE=0;                  AC_SUBST([REPLACE_PWRITE])
  REPLACE_READ=0;                    AC_SUBST([REPLACE_READ])
  REPLACE_READLINK=0;                AC_SUBST([REPLACE_READLINK])
  REPLACE_READLINKAT=0;              AC_SUBST([REPLACE_READLINKAT])
  REPLACE_RMDIR=0;                   AC_SUBST([REPLACE_RMDIR])
  REPLACE_SETHOSTNAME=0;             AC_SUBST([REPLACE_SETHOSTNAME])
  REPLACE_SLEEP=0;                   AC_SUBST([REPLACE_SLEEP])
  REPLACE_SYMLINK=0;                 AC_SUBST([REPLACE_SYMLINK])
  REPLACE_SYMLINKAT=0;               AC_SUBST([REPLACE_SYMLINKAT])
  REPLACE_TRUNCATE=0;                AC_SUBST([REPLACE_TRUNCATE])
  REPLACE_TTYNAME_R=0;               AC_SUBST([REPLACE_TTYNAME_R])
  REPLACE_UNLINK=0;                  AC_SUBST([REPLACE_UNLINK])
  REPLACE_UNLINKAT=0;                AC_SUBST([REPLACE_UNLINKAT])
  REPLACE_USLEEP=0;                  AC_SUBST([REPLACE_USLEEP])
  REPLACE_WRITE=0;                   AC_SUBST([REPLACE_WRITE])
  UNISTD_H_HAVE_SYS_RANDOM_H=0;      AC_SUBST([UNISTD_H_HAVE_SYS_RANDOM_H])
  UNISTD_H_HAVE_WINSOCK2_H=0;        AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
  UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                           AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
])
m4trace:m4/wait-process.m4:9: -1- AC_DEFUN([gl_WAIT_PROCESS], [
  dnl Prerequisites of lib/wait-process.c.
  AC_REQUIRE([gt_TYPE_SIG_ATOMIC_T])
  AC_CHECK_FUNCS([waitid])
])
m4trace:m4/waitpid.m4:9: -1- AC_DEFUN([gl_FUNC_WAITPID], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  HAVE_WAITPID=1
  case $host_os in
    mingw* | windows*) HAVE_WAITPID=0 ;;
  esac
])
m4trace:m4/warn-on-use.m4:28: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [
  m4_ifdef([gl_POSIXCHECK],
    [m4_foreach_w([gl_decl], [$2],
       [AH_TEMPLATE([HAVE_RAW_DECL_]AS_TR_CPP(m4_defn([gl_decl])),
         [Define to 1 if ]m4_defn([gl_decl])[ is declared even after
          undefining macros.])])dnl
     for gl_func in m4_flatten([$2]); do
       AS_VAR_PUSHDEF([gl_Symbol], [gl_cv_have_raw_decl_$gl_func])dnl
       dnl As a workaround to implicit built-in function declarations in
       dnl clang (e.g. strndup), reference ac_compile_for_check_decl instead
       dnl of ac_compile.  If, for whatever reason, the override of AC_PROG_CC
       dnl in zzgnulib.m4 is inactive, use the original ac_compile.
       ac_saved_ac_compile="$ac_compile"
       if test -n "$ac_compile_for_check_decl"; then
         ac_compile="$ac_compile_for_check_decl"
       fi
       AC_CACHE_CHECK([whether $gl_func is declared without a macro],
         [gl_Symbol],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$1],
[[#undef $gl_func
  (void) $gl_func;]])],
           [AS_VAR_SET([gl_Symbol], [yes])], [AS_VAR_SET([gl_Symbol], [no])])])
       ac_compile="$ac_saved_ac_compile"
       AS_VAR_IF([gl_Symbol], [yes],
         [AC_DEFINE_UNQUOTED(AS_TR_CPP([HAVE_RAW_DECL_$gl_func]), [1])
          dnl Shortcut for an AC_CHECK_DECL invocation that may come later:
          dnl If the raw declaration exists with the given includes, then
          dnl AC_CHECK_DECL with its many includes would see it as well.
          dnl So, set a cache variable to allow skipping any later
          dnl AC_CHECK_DECL invocation for $gl_func.
          eval "ac_cv_have_decl_$gl_func=yes"
         ])
       AS_VAR_POPDEF([gl_Symbol])dnl
     done
    ])
])
m4trace:m4/wchar_h.m4:13: -1- AC_DEFUN_ONCE([gl_WCHAR_H], [
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
  AC_REQUIRE([gl_WCHAR_H_INLINE_OK])
  dnl Prepare for creating substitute <wchar.h>.
  dnl Check for <wchar.h> (missing in Linux uClibc when built without wide
  dnl character support).
  dnl <wchar.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  AC_REQUIRE([gl_FEATURES_H])

  AC_REQUIRE([gt_TYPE_WINT_T])
  if test $gt_cv_c_wint_t = yes; then
    HAVE_WINT_T=1
  else
    HAVE_WINT_T=0
  fi
  AC_SUBST([HAVE_WINT_T])

  AC_REQUIRE([gl_TYPE_WINT_T_PREREQ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]],
    [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])

  AC_REQUIRE([AC_C_RESTRICT])

  AC_CHECK_DECLS([wcsdup], [], [], [[
      #include <wchar.h>
    ]])
  if test $ac_cv_have_decl_wcsdup = no; then
    HAVE_DECL_WCSDUP=0
  fi
])
m4trace:m4/wchar_h.m4:65: -1- AC_DEFUN([gl_WCHAR_H_INLINE_OK], [
  dnl Test whether <wchar.h> suffers due to the transition from '__inline' to
  dnl 'gnu_inline'. See <https://sourceware.org/bugzilla/show_bug.cgi?id=4022>
  dnl and <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=42440>. In summary,
  dnl glibc version 2.5 or older, together with gcc version 4.3 or newer and
  dnl the option -std=c99 or -std=gnu99, leads to a broken <wchar.h>.
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CACHE_CHECK([whether <wchar.h> uses 'inline' correctly],
    [gl_cv_header_wchar_h_correct_inline],
    [gl_cv_header_wchar_h_correct_inline=yes
     case "$host_os" in
       *-gnu* | gnu*)
         AC_LANG_CONFTEST([
           AC_LANG_SOURCE([[
             #define wcstod renamed_wcstod
             #include <wchar.h>
             extern int zero (void);
             int main () { return zero(); }
           ]])])
         dnl Do not rename the object file from conftest.$ac_objext to
         dnl conftest1.$ac_objext, as this will cause the link to fail on
         dnl z/OS when using the XPLINK object format (due to duplicate
         dnl CSECT names). Instead, temporarily redefine $ac_compile so
         dnl that the object file has the latter name from the start.
         saved_ac_compile="$ac_compile"
         ac_compile=`echo "$saved_ac_compile" | sed s/conftest/conftest1/`
         if echo '#include "conftest.c"' >conftest1.c \
            && AC_TRY_EVAL([ac_compile]); then
           AC_LANG_CONFTEST([
             AC_LANG_SOURCE([[
               #define wcstod renamed_wcstod
               #include <wchar.h>
               int zero (void) { return 0; }
             ]])])
           dnl See note above about renaming object files.
           ac_compile=`echo "$saved_ac_compile" | sed s/conftest/conftest2/`
           if echo '#include "conftest.c"' >conftest2.c \
              && AC_TRY_EVAL([ac_compile]); then
             if $CC -o conftest$ac_exeext $CFLAGS $LDFLAGS conftest1.$ac_objext conftest2.$ac_objext $LIBS >&AS_MESSAGE_LOG_FD 2>&1; then
               :
             else
               gl_cv_header_wchar_h_correct_inline=no
             fi
           fi
         fi
         ac_compile="$saved_ac_compile"
         rm -f conftest[12].c conftest[12].$ac_objext conftest$ac_exeext
         ;;
     esac
    ])
  if test $gl_cv_header_wchar_h_correct_inline = no; then
    AC_MSG_ERROR([<wchar.h> cannot be used with this compiler ($CC $CFLAGS $CPPFLAGS).
This is a known interoperability problem of glibc <= 2.5 with gcc >= 4.3 in
C99 mode. You have four options:
  - Add the flag -fgnu89-inline to CC and reconfigure, or
  - Fix your include files, using parts of
    <https://sourceware.org/git/?p=glibc.git;a=commitdiff;h=b037a293a48718af30d706c2e18c929d0e69a621>, or
  - Use a gcc version older than 4.3, or
  - Don't use the flags -std=c99 or -std=gnu99.
Configuration aborted.])
  fi
])
m4trace:m4/wchar_h.m4:133: -1- AC_DEFUN([gl_WCHAR_MODULE_INDICATOR], [
  dnl Ensure to expand the default settings once only.
  gl_WCHAR_H_REQUIRE_DEFAULTS
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/wchar_h.m4:145: -1- AC_DEFUN([gl_WCHAR_H_REQUIRE_DEFAULTS], [
  m4_defun(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS], [
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSZERO])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WGETCWD])
    dnl Support Microsoft deprecated alias function names by default.
    gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
  ])
  m4_require(GL_MODULE_INDICATOR_PREFIX[_WCHAR_H_MODULE_INDICATOR_DEFAULTS])
  dnl Make sure the shell variable for GNULIB_FREE_POSIX is initialized.
  gl_STDLIB_H_REQUIRE_DEFAULTS
  AC_REQUIRE([gl_WCHAR_H_DEFAULTS])
])
m4trace:m4/wchar_h.m4:200: -1- AC_DEFUN([gl_WCHAR_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_BTOWC=1;         AC_SUBST([HAVE_BTOWC])
  HAVE_MBSINIT=1;       AC_SUBST([HAVE_MBSINIT])
  HAVE_MBRTOWC=1;       AC_SUBST([HAVE_MBRTOWC])
  HAVE_MBRLEN=1;        AC_SUBST([HAVE_MBRLEN])
  HAVE_MBSRTOWCS=1;     AC_SUBST([HAVE_MBSRTOWCS])
  HAVE_MBSNRTOWCS=1;    AC_SUBST([HAVE_MBSNRTOWCS])
  HAVE_WCRTOMB=1;       AC_SUBST([HAVE_WCRTOMB])
  HAVE_WCSRTOMBS=1;     AC_SUBST([HAVE_WCSRTOMBS])
  HAVE_WCSNRTOMBS=1;    AC_SUBST([HAVE_WCSNRTOMBS])
  HAVE_WMEMCHR=1;       AC_SUBST([HAVE_WMEMCHR])
  HAVE_WMEMCMP=1;       AC_SUBST([HAVE_WMEMCMP])
  HAVE_WMEMCPY=1;       AC_SUBST([HAVE_WMEMCPY])
  HAVE_WMEMMOVE=1;      AC_SUBST([HAVE_WMEMMOVE])
  HAVE_WMEMPCPY=1;      AC_SUBST([HAVE_WMEMPCPY])
  HAVE_WMEMSET=1;       AC_SUBST([HAVE_WMEMSET])
  HAVE_WCSLEN=1;        AC_SUBST([HAVE_WCSLEN])
  HAVE_WCSNLEN=1;       AC_SUBST([HAVE_WCSNLEN])
  HAVE_WCSCPY=1;        AC_SUBST([HAVE_WCSCPY])
  HAVE_WCPCPY=1;        AC_SUBST([HAVE_WCPCPY])
  HAVE_WCSNCPY=1;       AC_SUBST([HAVE_WCSNCPY])
  HAVE_WCPNCPY=1;       AC_SUBST([HAVE_WCPNCPY])
  HAVE_WCSCAT=1;        AC_SUBST([HAVE_WCSCAT])
  HAVE_WCSNCAT=1;       AC_SUBST([HAVE_WCSNCAT])
  HAVE_WCSCMP=1;        AC_SUBST([HAVE_WCSCMP])
  HAVE_WCSNCMP=1;       AC_SUBST([HAVE_WCSNCMP])
  HAVE_WCSCASECMP=1;    AC_SUBST([HAVE_WCSCASECMP])
  HAVE_WCSNCASECMP=1;   AC_SUBST([HAVE_WCSNCASECMP])
  HAVE_WCSCOLL=1;       AC_SUBST([HAVE_WCSCOLL])
  HAVE_WCSXFRM=1;       AC_SUBST([HAVE_WCSXFRM])
  HAVE_WCSDUP=1;        AC_SUBST([HAVE_WCSDUP])
  HAVE_WCSCHR=1;        AC_SUBST([HAVE_WCSCHR])
  HAVE_WCSRCHR=1;       AC_SUBST([HAVE_WCSRCHR])
  HAVE_WCSCSPN=1;       AC_SUBST([HAVE_WCSCSPN])
  HAVE_WCSSPN=1;        AC_SUBST([HAVE_WCSSPN])
  HAVE_WCSPBRK=1;       AC_SUBST([HAVE_WCSPBRK])
  HAVE_WCSSTR=1;        AC_SUBST([HAVE_WCSSTR])
  HAVE_WCSTOK=1;        AC_SUBST([HAVE_WCSTOK])
  HAVE_WCSWIDTH=1;      AC_SUBST([HAVE_WCSWIDTH])
  HAVE_WCSFTIME=1;      AC_SUBST([HAVE_WCSFTIME])
  HAVE_DECL_WCTOB=1;    AC_SUBST([HAVE_DECL_WCTOB])
  HAVE_DECL_WCSDUP=1;   AC_SUBST([HAVE_DECL_WCSDUP])
  HAVE_DECL_WCWIDTH=1;  AC_SUBST([HAVE_DECL_WCWIDTH])
  REPLACE_MBSTATE_T=0;  AC_SUBST([REPLACE_MBSTATE_T])
  REPLACE_BTOWC=0;      AC_SUBST([REPLACE_BTOWC])
  REPLACE_WCTOB=0;      AC_SUBST([REPLACE_WCTOB])
  REPLACE_MBSINIT=0;    AC_SUBST([REPLACE_MBSINIT])
  REPLACE_MBRTOWC=0;    AC_SUBST([REPLACE_MBRTOWC])
  REPLACE_MBRLEN=0;     AC_SUBST([REPLACE_MBRLEN])
  REPLACE_MBSRTOWCS=0;  AC_SUBST([REPLACE_MBSRTOWCS])
  REPLACE_MBSNRTOWCS=0; AC_SUBST([REPLACE_MBSNRTOWCS])
  REPLACE_WCRTOMB=0;    AC_SUBST([REPLACE_WCRTOMB])
  REPLACE_WCSRTOMBS=0;  AC_SUBST([REPLACE_WCSRTOMBS])
  REPLACE_WCSNRTOMBS=0; AC_SUBST([REPLACE_WCSNRTOMBS])
  REPLACE_WCWIDTH=0;    AC_SUBST([REPLACE_WCWIDTH])
  REPLACE_WCSWIDTH=0;   AC_SUBST([REPLACE_WCSWIDTH])
  REPLACE_WCSFTIME=0;   AC_SUBST([REPLACE_WCSFTIME])
  REPLACE_WCSCMP=0;     AC_SUBST([REPLACE_WCSCMP])
  REPLACE_WCSNCMP=0;    AC_SUBST([REPLACE_WCSNCMP])
  REPLACE_WCSSTR=0;     AC_SUBST([REPLACE_WCSSTR])
  REPLACE_WCSTOK=0;     AC_SUBST([REPLACE_WCSTOK])
  REPLACE_WMEMCMP=0;    AC_SUBST([REPLACE_WMEMCMP])
  REPLACE_WMEMPCPY=0;   AC_SUBST([REPLACE_WMEMPCPY])
])
m4trace:m4/wint_t.m4:14: -1- AC_DEFUN([gt_TYPE_WINT_T], [
  AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <wchar.h>
            wint_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wint_t=yes],
       [gt_cv_c_wint_t=no])])
  if test $gt_cv_c_wint_t = yes; then
    AC_DEFINE([HAVE_WINT_T], [1], [Define if you have the 'wint_t' type.])

    dnl Determine whether gnulib's <wchar.h> or <wctype.h> would, if present,
    dnl override 'wint_t'.
    AC_CACHE_CHECK([whether wint_t is large enough],
      [gl_cv_type_wint_t_large_enough],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <wchar.h>
              int verify[sizeof (wint_t) < sizeof (int) ? -1 : 1];
            ]])],
         [gl_cv_type_wint_t_large_enough=yes],
         [gl_cv_type_wint_t_large_enough=no])])
    if test $gl_cv_type_wint_t_large_enough = no; then
      GNULIBHEADERS_OVERRIDE_WINT_T=1
    else
      GNULIBHEADERS_OVERRIDE_WINT_T=0
    fi
  else
    GNULIBHEADERS_OVERRIDE_WINT_T=0
  fi
  AC_SUBST([GNULIBHEADERS_OVERRIDE_WINT_T])
])
m4trace:m4/wint_t.m4:50: -1- AC_DEFUN([gl_TYPE_WINT_T_PREREQ], [
  AC_CHECK_HEADERS_ONCE([crtdefs.h])
  if test $ac_cv_header_crtdefs_h = yes; then
    HAVE_CRTDEFS_H=1
  else
    HAVE_CRTDEFS_H=0
  fi
  AC_SUBST([HAVE_CRTDEFS_H])
])
m4trace:m4/write.m4:9: -1- AC_DEFUN([gl_FUNC_WRITE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  m4_ifdef([gl_MSVC_INVAL], [
    AC_REQUIRE([gl_MSVC_INVAL])
    if test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1; then
      REPLACE_WRITE=1
    fi
  ])
  dnl This ifdef is just an optimization, to avoid performing a configure
  dnl check whose result is not used. It does not make the test of
  dnl GNULIB_UNISTD_H_SIGPIPE or GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_WRITE=1
    fi
  ])
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_WRITE=1
    fi
  ])
])
m4trace:m4/write.m4:36: -1- AC_DEFUN([gl_PREREQ_WRITE], [:])
m4trace:m4/xalloc.m4:9: -1- AC_DEFUN([gl_XALLOC], [:])
m4trace:m4/zzgnulib.m4:25: -1- AC_DEFUN([gl_ZZGNULIB])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section 'AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:20: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:20: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:20: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:26: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:26: -1- AC_CONFIG_MACRO_DIR_TRACE([m4])
m4trace:configure.ac:28: -1- AM_INIT_AUTOMAKE([-Wall -Werror foreign])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:28: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:28: -1- AM_AUTOMAKE_VERSION([1.17])
m4trace:configure.ac:28: -1- _AM_AUTOCONF_VERSION([2.72])
m4trace:configure.ac:28: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:28: -1- _AM_SET_OPTIONS([-Wall -Werror foreign])
m4trace:configure.ac:28: -1- _AM_SET_OPTION([-Wall])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([-Wall])
m4trace:configure.ac:28: -1- _AM_SET_OPTION([-Werror])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([-Werror])
m4trace:configure.ac:28: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:28: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:28: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:28: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:28: -1- AM_SANITY_CHECK
m4trace:configure.ac:28: -1- _AM_FILESYSTEM_TIMESTAMP_RESOLUTION
m4trace:configure.ac:28: -1- _AM_SLEEP_FRACTIONAL_SECONDS
m4trace:configure.ac:28: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:28: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:28: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:28: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:28: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:28: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:28: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:28: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:28: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:28: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:28: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:28: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:28: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:28: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:28: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:28: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:28: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:28: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:28: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CTAGS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^ETAGS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CSCOPE$])
m4trace:configure.ac:28: -1- _AM_SILENT_RULES
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:28: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:28: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:28: -1- _AM_PROG_RM_F
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__rm_f_notfound$])
m4trace:configure.ac:28: -1- _AM_PROG_XARGS_N
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__xargs_n$])
m4trace:configure.ac:31: -1- AC_PROG_CC
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:31: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:31: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:31: -1- gl_COMPILER_CLANG
m4trace:configure.ac:31: -1- gl_COMPILER_PREPARE_CHECK_DECL
m4trace:configure.ac:31: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:31: -1- AM_SET_DEPDIR
m4trace:configure.ac:31: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:31: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:31: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:31: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:31: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:31: -1- AM_DEP_TRACK
m4trace:configure.ac:31: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:31: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:31: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:31: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:31: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:31: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:31: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:31: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:31: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:37: -1- gl_EARLY
m4trace:configure.ac:37: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:37: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:37: -1- gl_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:37: -1- AC_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:37: -1- AC_CHECK_INCLUDES_DEFAULT
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_stdio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdio.h ]AS_TR_SH([stdio.h]) AS_TR_CPP([HAVE_stdio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdlib.h ]AS_TR_SH([stdlib.h]) AS_TR_CPP([HAVE_stdlib.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_string_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" string.h ]AS_TR_SH([string.h]) AS_TR_CPP([HAVE_string.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_strings_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" strings.h ]AS_TR_SH([strings.h]) AS_TR_CPP([HAVE_strings.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- AC_DEFUN([_AC_Header_minix_config_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" minix/config.h ]AS_TR_SH([minix/config.h]) AS_TR_CPP([HAVE_minix/config.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_HPUX_ALT_XOPEN_SOCKET_API$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_OPENBSD_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_ATTRIBS_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_BFP_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_DFP_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_FUNCS_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_IEC_60559_TYPES_EXT__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_LIB_EXT2__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__STDC_WANT_MATH_SPEC_FUNCS__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_ISOC11_SOURCE$])
m4trace:configure.ac:37: -1- gl_PROG_AR_RANLIB
m4trace:configure.ac:37: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:37: -1- gl_USE_AIX_EXTENSIONS
m4trace:configure.ac:37: -1- m4_pattern_allow([^_LINUX_SOURCE_COMPAT$])
m4trace:configure.ac:37: -1- AC_SYS_LARGEFILE
m4trace:configure.ac:37: -1- _AC_SYS_LARGEFILE_PROBE
m4trace:configure.ac:37: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:37: -1- _AC_SYS_YEAR2038_PROBE
m4trace:configure.ac:37: -1- _AC_SYS_YEAR2038_TEST_CODE
m4trace:configure.ac:37: -1- m4_pattern_allow([^_TIME_BITS$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^__MINGW_USE_VC2005_COMPAT$])
m4trace:configure.ac:37: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:37: -1- gl_STDIO_H_EARLY
m4trace:configure.ac:37: -1- m4_pattern_allow([^__USE_MINGW_ANSI_STDIO$])
m4trace:configure.ac:37: -1- gl_THREADLIB_EARLY
m4trace:configure.ac:37: -1- gl_THREADLIB_EARLY_BODY
m4trace:configure.ac:37: -1- gl_ANYTHREADLIB_EARLY
m4trace:configure.ac:38: -1- gl_INIT
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:38: -1- gl_COMMON
m4trace:configure.ac:38: -1- gl_00GNULIB
m4trace:configure.ac:38: -1- gl_COMMON_BODY
m4trace:configure.ac:38: -1- gl_ZZGNULIB
m4trace:configure.ac:38: -1- gl_FUNC_ACCESS
m4trace:configure.ac:38: -1- gl_UNISTD_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_COPY_FILE_RANGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_EXECVPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETENTROPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETPASS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_TRUNCATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ACCESS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_COPY_FILE_RANGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_DUP3$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECLE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECLP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECVE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECVP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_EXECVPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FACCESSAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FDATASYNC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETENTROPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETPASS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETPASS_FOR_GETPASS_GNU$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETUSERSHELL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PIPE2$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_READLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SETHOSTNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SYMLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TRUNCATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UNISTD_H_HAVE_SYS_RANDOM_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ACCESS_TRAILING_SLASH_BUG$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_ACCESS], [test $REPLACE_ACCESS = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_ACCESS], [test $REPLACE_ACCESS = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_ACCESS_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_ACCESS_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ACCESS_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ACCESS_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([access])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCESS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ACCESS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CHDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHOWN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CHOWN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_COPY_FILE_RANGE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_COPY_FILE_RANGE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DUP2$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DUP3])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DUP3$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ENVIRON])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ENVIRON$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EUIDACCESS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EUIDACCESS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECLE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECLP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECLP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECVE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECVP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXECVPE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXECVPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FACCESSAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FACCESSAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FCHDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHOWNAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FCHOWNAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDATASYNC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FDATASYNC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSYNC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSYNC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTRUNCATE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FTRUNCATE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCWD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETCWD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDOMAINNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDTABLESIZE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETENTROPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETENTROPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETGROUPS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETGROUPS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETHOSTNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETHOSTNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOGIN_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETLOGIN_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETOPT_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETOPT_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPAGESIZE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETPAGESIZE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETPASS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPASS_GNU])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETPASS_GNU$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUSERSHELL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETUSERSHELL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GROUP_MEMBER])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ISATTY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ISATTY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHOWN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LCHOWN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LINK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LINKAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LINKAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSEEK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LSEEK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PIPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PIPE2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PIPE2$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PREAD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PREAD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PWRITE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PWRITE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READ])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_READ$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_READLINK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READLINKAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_READLINKAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RMDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RMDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETHOSTNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SETHOSTNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SLEEP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SLEEP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SYMLINK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYMLINKAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SYMLINKAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TRUNCATE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TRUNCATE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TTYNAME_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TTYNAME_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_GETOPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_GETOPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_NONBLOCKING])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNISTD_H_SIGPIPE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNLINK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLINKAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNLINKAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_USLEEP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_USLEEP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WRITE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WRITE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ACCESS], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_ACCESS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHDIR], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CLOSE], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_CLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_DUP2], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_DUP2$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECL], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLE], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECLP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECLP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECV], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVE], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_EXECVPE], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_EXECVPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETCWD], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETCWD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETPID], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETPID$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ISATTY], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_ISATTY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_LSEEK], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_LSEEK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_READ], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_READ$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_RMDIR], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_RMDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_SWAB], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_SWAB$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UNLINK], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_UNLINK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WRITE], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_WRITE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([access])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[access]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([access])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_ACCESS$])
m4trace:configure.ac:38: -1- gl_ALIGNASOF
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_C_ALIGNASOF$])
m4trace:configure.ac:38: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:38: -1- m4_pattern_allow([^size_t$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:38: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([alloca.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_ALLOCA_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:38: -1- gl_ASSERT_H
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_C_STATIC_ASSERT$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([assert.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([assert.h], [assume])
m4trace:configure.ac:38: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:38: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([assert.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_ASSERT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ASSERT_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([assert.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ASSERT_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_ASSERT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_ASSERT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ASSERT_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ASSERT_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ASSERT_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ASSERT_H_FALSE])
m4trace:configure.ac:38: -1- gl___BUILTIN_EXPECT
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE___BUILTIN_EXPECT$])
m4trace:configure.ac:38: -1- gl_FUNC_CALLOC_GNU
m4trace:configure.ac:38: -1- gl_STDLIB_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALIGNED_ALLOC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETPROGNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_INITSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_INITSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_MEMALIGN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_QSORT_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_SETSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOLD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOUL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE__EXIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ABORT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ALIGNED_ALLOC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CALLOC_FOR_CALLOC_GNU$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CALLOC_FOR_CALLOC_POSIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FREE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETLOADAVG$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETPROGNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETSUBOPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_INITSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MALLOC_FOR_MALLOC_GNU$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MALLOC_FOR_MALLOC_POSIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MB_CUR_MAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBSTOWCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKOSTEMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKOSTEMPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_MEMALIGN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_OPENPT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_QSORT_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RAND$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RANDOM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REALLOC_FOR_REALLOC_GNU$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REALLOC_FOR_REALLOC_POSIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REALLOCARRAY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SETSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOLD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOUL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOULL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^CAN_PRINT_STACK_TRACE$])
m4trace:configure.ac:38: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:38: -1- gl_FUNC_MALLOC_POSIX
m4trace:configure.ac:38: -1- gl_FUNC_MALLOC_PTRDIFF
m4trace:configure.ac:38: -1- gl_CHECK_MALLOC_PTRDIFF
m4trace:configure.ac:38: -1- gl_CHECK_MALLOC_POSIX
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MALLOC_POSIX$])
m4trace:configure.ac:38: -1- _AC_FUNC_CALLOC_IF([], [REPLACE_CALLOC_FOR_CALLOC_GNU=1])
m4trace:configure.ac:38: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2979: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:690: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:697: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/calloc.m4:19: _AC_FUNC_CALLOC_IF is expanded from...
m4/calloc.m4:58: gl_FUNC_CALLOC_GNU is expanded from...
m4/gnulib-comp.m4:241: gl_INIT is expanded from...
configure.ac:38: the top level])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([calloc-gnu])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB__EXIT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB__EXIT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ABORT_DEBUG])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ABORT_DEBUG$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALIGNED_ALLOC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ALIGNED_ALLOC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ATOLL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ATOLL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_GNU])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CALLOC_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CANONICALIZE_FILE_NAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREE_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FREE_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLOADAVG])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETLOADAVG$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPROGNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETPROGNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSUBOPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETSUBOPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GRANTPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GRANTPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_GNU])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MALLOC_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOWCS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSTOWCS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBTOWC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBTOWC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDTEMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKDTEMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKOSTEMPS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKOSTEMPS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKSTEMPS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKSTEMPS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_MEMALIGN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_MEMALIGN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_OPENPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTSNAME_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTSNAME_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTENV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PUTENV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_QSORT_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_QSORT_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAND])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RAND$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RANDOM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RANDOM_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RANDOM_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOCARRAY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REALLOCARRAY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_GNU])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALLOC_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REALPATH])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REALPATH$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RPMATCH])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RPMATCH$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SECURE_GETENV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SECURE_GETENV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETENV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SETENV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STACK_TRACE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STACK_TRACE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOLD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOLL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOLL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOUL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOULL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOULL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SYSTEM_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNLOCKPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNLOCKPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UNSETENV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UNSETENV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOMB])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCTOMB$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_ECVT], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_ECVT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCVT], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCVT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GCVT], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_GCVT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKTEMP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKTEMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTENV], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTENV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-gnu])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-gnu])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_FUNC_CALLOC_POSIX
m4trace:configure.ac:38: -1- gl_LIBSOURCES([calloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([calloc-posix])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([calloc-posix])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[calloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([calloc-posix])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_FUNC_CANONICALIZE_FILENAME_MODE
m4trace:configure.ac:38: -1- gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
m4trace:configure.ac:38: -1- m4_pattern_allow([^LSTAT_FOLLOWS_SLASHED_SYMLINK$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_canonicalize_file_name], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" canonicalize_file_name ]AS_TR_CPP([HAVE_canonicalize_file_name])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([faccessat], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([faccessat], [[#include <unistd.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([faccessat])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([faccessat], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([faccessat])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([faccessat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:38: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:38: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:38: -1- gl_FUNC_REALPATH_WORKS
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_realpath], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" realpath ]AS_TR_CPP([HAVE_realpath])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_NOCRASH
m4trace:configure.ac:38: -1- m4_pattern_allow([^FUNC_REALPATH_WORKS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^FUNC_REALPATH_NEARLY_WORKS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([canonicalize])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_CANONICALIZE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE$])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([canonicalize_file_name])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([canonicalize_file_name])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[canonicalize_file_name]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([canonicalize_file_name])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([chdir])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([chdir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[chdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([chdir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CHDIR$])
m4trace:configure.ac:38: -1- gl_FUNC_CHDIR_LONG
m4trace:configure.ac:38: -1- gl_PATHMAX_SNIPPET_PREREQ
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -2- gl_PATHMAX_SNIPPET
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG], [test $gl_cv_have_unlimited_file_name_length = no])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_CHDIR_LONG], [test $gl_cv_have_unlimited_file_name_length = no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CHDIR_LONG_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CHDIR_LONG_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHDIR_LONG_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CHDIR_LONG_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_CHDIR_LONG], [
    gl_PREREQ_CHDIR_LONG
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_CHDIR_LONG
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([cloexec])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CLOEXEC$])
m4trace:configure.ac:38: -1- gl_FUNC_CLOSE
m4trace:configure.ac:38: -1- gl_MSVC_INVAL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func__set_invalid_parameter_handler], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" _set_invalid_parameter_handler ]AS_TR_CPP([HAVE__set_invalid_parameter_handler])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MSVC_INVALID_PARAMETER_HANDLER$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_CLOSE], [test $REPLACE_CLOSE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSE_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([close])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([close])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[close]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([close])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([close])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_CLOSE$])
m4trace:configure.ac:38: -1- gl_FUNC_CLOSEDIR
m4trace:configure.ac:38: -1- gl_DIRENT_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FDOPENDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCANDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ALPHASORT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_OPENDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_READDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REWINDDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CLOSEDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FDOPENDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:38: -1- gl_DIRENT_DIR
m4trace:configure.ac:38: -1- m4_pattern_allow([^DIR_HAS_FD_MEMBER$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_CLOSEDIR], [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_CLOSEDIR], [test $HAVE_CLOSEDIR = 0 || test $REPLACE_CLOSEDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSEDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CLOSEDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSEDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CLOSEDIR_FALSE])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([closedir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OPENDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_READDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_READDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REWINDDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REWINDDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CLOSEDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CLOSEDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DIRFD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DIRFD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPENDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FDOPENDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SCANDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ALPHASORT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ALPHASORT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([closedir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[closedir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([closedir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CLOSEDIR$])
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ACCEPT4$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^_POSIX_PII_SOCKET$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SHUTDOWN$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_SOCKET
m4trace:configure.ac:38: -1- gl_CHECK_SOCKET_HEADERS
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/socket.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/socket.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/socket.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_SOCKET_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_SOCKET_H$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WS2TCPIP
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SA_FAMILY_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])
m4trace:configure.ac:38: -1- AC_C_RESTRICT
m4trace:configure.ac:38: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_CONNECT], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CONNECT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_CONNECT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CONNECT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_CONNECT_FALSE])
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_MODULE_INDICATOR([connect])
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SOCKET])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SOCKET$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CONNECT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CONNECT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BIND])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_BIND$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETPEERNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETPEERNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETSOCKOPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETSOCKOPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LISTEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LISTEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RECV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SEND])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SEND$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RECVFROM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RECVFROM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SENDTO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SENDTO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SETSOCKOPT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SETSOCKOPT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SHUTDOWN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SHUTDOWN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ACCEPT4])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ACCEPT4$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([connect])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[connect]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([connect])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_CONNECT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([connect])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_CONNECT$])
m4trace:configure.ac:38: -1- gl_CHECK_TYPE_STRUCT_DIRENT_D_INO
m4trace:configure.ac:38: -1- m4_pattern_allow([^D_INO_IN_DIRENT$])
m4trace:configure.ac:38: -1- gl_DIRENT_H
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([dirent.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([dirent.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_dirent_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" dirent.h ]AS_TR_SH([dirent.h]) AS_TR_CPP([HAVE_dirent.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([dirent.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_DIRENT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_DIRENT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:38: -1- gl_DIRENT_DIR
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_FUNC_DIRFD
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DIRFD$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_DIRFD], [test $HAVE_DIRFD = 0 || test $REPLACE_DIRFD = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_DIRFD], [test $HAVE_DIRFD = 0 || test $REPLACE_DIRFD = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DIRFD_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DIRFD_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DIRFD_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DIRFD_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_DIRFD], [
    gl_PREREQ_DIRFD
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_DIRFD
m4trace:configure.ac:38: -1- m4_pattern_allow([^DIR_FD_MEMBER_NAME$])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([dirfd])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dirfd])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dirfd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([dirfd])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_DIRFD$])
m4trace:configure.ac:38: -1- gl_DOUBLE_SLASH_ROOT
m4trace:configure.ac:38: -1- m4_pattern_allow([^DOUBLE_SLASH_IS_DISTINCT_ROOT$])
m4trace:configure.ac:38: -1- gl_FUNC_DUP
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- _GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_DUP], [test $REPLACE_DUP = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DUP_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DUP_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_DUP], [
    gl_PREREQ_DUP
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_DUP
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([dup])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_DUP$])
m4trace:configure.ac:38: -1- gl_FUNC_DUP2
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_DUP2], [test $REPLACE_DUP2 = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DUP2_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_DUP2_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP2_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_DUP2_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_DUP2], [
    gl_PREREQ_DUP2
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_DUP2
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[dup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_DUP2$])
m4trace:configure.ac:38: -1- gl_ENVIRON
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gt_CHECK_VAR_DECL([#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ], [environ])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ENVIRON_DECL$])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([environ])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([environ])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[environ]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([environ])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_ENVIRON$])
m4trace:configure.ac:38: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([errno.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([errno.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([errno.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:38: -1- gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:38: -1- gl_REPLACE_ERRNO_VALUE([ENOLINK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:38: -1- gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
m4trace:configure.ac:38: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([errno.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_ERRNO_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:38: -1- gl_ERROR_H
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([error.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([error.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_error_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" error.h ]AS_TR_SH([error.h]) AS_TR_CPP([HAVE_error.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([error.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_ERROR_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERROR_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ERROR_H$])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([error], [[#include <error.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([error], [[#include <error.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([error])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([error], [[#include <error.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([error])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([error])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ERROR$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ERROR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_ERROR_AT_LINE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ERROR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_ERROR_AT_LINE$])
m4trace:configure.ac:38: -1- gl_ERROR
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_ERROR], [test $COMPILE_ERROR_C = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_ERROR], [test $COMPILE_ERROR_C = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_ERROR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_ERROR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ERROR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_ERROR_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_ERROR], [
    gl_PREREQ_ERROR
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_ERROR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_strerror_r], [_AC_CHECK_DECLS([strerror_r])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRERROR_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STRERROR_R_CHAR_P$])
m4trace:configure.ac:38: -1- AM_XGETTEXT_OPTION([--flag=error:3:c-format])
m4trace:configure.ac:38: -1- AM_XGETTEXT_OPTION_INIT
m4trace:configure.ac:38: -1- AM_XGETTEXT_OPTION([--flag=error_at_line:5:c-format])
m4trace:configure.ac:38: -1- gl_ERROR_H
m4trace:configure.ac:38: -1- gl_EXTERN_INLINE
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE___HEADER_INLINE$])
m4trace:configure.ac:38: -1- gl_FATAL_SIGNAL
m4trace:configure.ac:38: -1- gt_TYPE_SIG_ATOMIC_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIG_ATOMIC_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^sig_atomic_t$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_PREREQ_SIG_HANDLER_H
m4trace:configure.ac:38: -1- gl_FUNC_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_fchdir], [_AC_CHECK_DECLS([fchdir])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCHDIR$])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_OPEN_DIRECTORY$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FCHDIR], [test $HAVE_FCHDIR = 0 || test $REPLACE_FCHDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FCHDIR], [test $HAVE_FCHDIR = 0 || test $REPLACE_FCHDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FCHDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FCHDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCHDIR_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_FCHDIR], [
    gl_PREREQ_FCHDIR
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_FCHDIR
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([fchdir])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fchdir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fchdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fchdir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FCHDIR$])
m4trace:configure.ac:38: -1- gl_FUNC_FCNTL
m4trace:configure.ac:38: -1- gl_FCNTL_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FCNTL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_OPENAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CREAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCNTL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_OPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_OPENAT$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^FCNTL_DUPFD_BUGGY$])
m4trace:configure.ac:38: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fcntl ]AS_TR_CPP([HAVE_fcntl])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FCNTL], [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FCNTL], [test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FCNTL_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FCNTL_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCNTL_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FCNTL_FALSE])
m4trace:configure.ac:38: -1- gl_FCNTL_MODULE_INDICATOR([fcntl])
m4trace:configure.ac:38: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CREAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CREAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCNTL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FCNTL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NONBLOCKING])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_NONBLOCKING$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OPENAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OPENAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CREAT], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_CREAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_OPEN], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_OPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fcntl])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fcntl]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fcntl])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FCNTL$])
m4trace:configure.ac:38: -1- gl_FCNTL_H
m4trace:configure.ac:38: -1- gl_FCNTL_O_FLAGS
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" symlink ]AS_TR_CPP([HAVE_symlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WORKING_O_NOATIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WORKING_O_NOFOLLOW$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([fcntl.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([fcntl.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([fcntl.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_FCNTL_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FCNTL_H$])
m4trace:configure.ac:38: -1- AC_TYPE_PID_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
m4trace:configure.ac:38: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([fd-safer-flag])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_FD_SAFER_FLAG$])
m4trace:configure.ac:38: -1- gl_FUNC_FDOPENDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fdopendir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fdopendir ]AS_TR_CPP([HAVE_fdopendir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FDOPENDIR], [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FDOPENDIR], [test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPENDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FDOPENDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPENDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FDOPENDIR_FALSE])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdopendir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fdopendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdopendir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FDOPENDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_FDOPENDIR$])
m4trace:configure.ac:38: -1- gl_FILE_NAME_CONCAT_LGPL
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([mempcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([mempcpy], [[#include <string.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([mempcpy])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([mempcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([mempcpy])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([mempcpy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:38: -1- gl_FINDPROG_IN
m4trace:configure.ac:38: -1- gl_FUNC_EACCESS
m4trace:configure.ac:38: -1- m4_pattern_allow([^eaccess$])
m4trace:configure.ac:38: -1- gl_FUNC_FREE
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FREE_POSIX$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FREE], [test $REPLACE_FREE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FREE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FREE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FREE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_FREE], [
    gl_PREREQ_FREE
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_FREE
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([free-posix])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([free-posix])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[free-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([free-posix])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FREE_POSIX$])
m4trace:configure.ac:38: -1- gl_FUNC_FSTAT
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FCHMODAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FSTATAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FUTIMENS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETUMASK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LCHMOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LSTAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKDIRAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKFIFOAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKNOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKNODAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_UTIMENSAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CHMOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCHMODAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FSTAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FSTATAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FUTIMENS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LSTAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKFIFO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKFIFOAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKNOD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKNODAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_UTIMENSAT$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FSTAT], [test $REPLACE_FSTAT = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FSTAT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FSTAT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTAT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTAT_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_FSTAT], [
    case "$host_os" in
      mingw* | windows*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_FSTAT
  ])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:38: -1- gl_PREREQ_FSTAT
m4trace:configure.ac:38: -1- gl_SYS_STAT_H
m4trace:configure.ac:38: -1- m4_pattern_allow([^STAT_MACROS_BROKEN$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/stat.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/stat.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/stat.h ]AS_TR_SH([sys/stat.h]) AS_TR_CPP([HAVE_sys/stat.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/stat.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_STAT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINDOWS_STAT_TIMESPEC$])
m4trace:configure.ac:38: -1- gl_LARGEFILE
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^nlink_t$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [chmod fchmodat fstat fstatat futimens getumask lchmod lstat
    mkdirat mkfifo mkfifoat mknod mknodat stat utimensat])
m4trace:configure.ac:38: -1- gl_PREREQ_STAT_W32
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SDKDDKVER_H$])
m4trace:configure.ac:38: -1- gl_SYS_STAT_MODULE_INDICATOR([fstat])
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CHMOD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CHMOD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCHMODAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FCHMODAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSTAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSTATAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSTATAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FUTIMENS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FUTIMENS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETUMASK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETUMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LCHMOD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LCHMOD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LSTAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LSTAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKDIRAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKDIRAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKFIFO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKFIFOAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKFIFOAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNOD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKNOD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKNODAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKNODAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_UTIMENSAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_UTIMENSAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OVERRIDES_STRUCT_STAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OVERRIDES_STRUCT_STAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_CHMOD], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_CHMOD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MKDIR], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_MKDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_UMASK], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_UMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstat])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FSTAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([fstat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_FSTAT$])
m4trace:configure.ac:38: -1- gl_FUNC_FSTATAT
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fstatat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fstatat ]AS_TR_CPP([HAVE_fstatat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WORKING_FSTATAT_ZERO_FLAG$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FSTATAT], [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FSTATAT], [test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FSTATAT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FSTATAT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTATAT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FSTATAT_FALSE])
m4trace:configure.ac:38: -1- gl_SYS_STAT_MODULE_INDICATOR([fstatat])
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstatat])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fstatat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstatat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FSTATAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([fstatat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_FSTATAT$])
m4trace:configure.ac:38: -1- gl_FUNC_FTRUNCATE
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([ftruncate], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([ftruncate], [[#include <unistd.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([ftruncate])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([ftruncate], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([ftruncate])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([ftruncate])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_FTRUNCATE], [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_FTRUNCATE], [test $HAVE_FTRUNCATE = 0 || test $REPLACE_FTRUNCATE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FTRUNCATE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_FTRUNCATE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTRUNCATE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_FTRUNCATE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_FTRUNCATE], [
    gl_PREREQ_FTRUNCATE
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_FTRUNCATE
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE__CHSIZE$])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([ftruncate])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([ftruncate])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[ftruncate]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([ftruncate])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FTRUNCATE$])
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD_NULL
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD_SIGNATURE
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD_PATH_MAX
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETCWD$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_ALARM$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD_ABORT_BUG([gl_abort_bug=yes])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_getcwd], [_AC_CHECK_DECLS([getcwd])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_PATHMAX_SNIPPET
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MINIMALLY_WORKING_GETCWD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PARTLY_WORKING_GETCWD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETCWD_SHORTER$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_GETCWD], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_GETCWD], [
    gl_PREREQ_GETCWD
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_GETCWD
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_GETCWD$])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:38: -1- gl_FUNC_GETCWD_LGPL
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_GETCWD_LGPL], [test $REPLACE_GETCWD = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_LGPL_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETCWD_LGPL_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_LGPL_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETCWD_LGPL_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([getcwd])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getcwd])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getcwd]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getcwd])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETCWD$])
m4trace:configure.ac:38: -1- gl_FUNC_GETDTABLESIZE
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_getdtablesize], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getdtablesize ]AS_TR_CPP([HAVE_getdtablesize])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_getdtablesize], [_AC_CHECK_DECLS([getdtablesize])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETDTABLESIZE$])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE], [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_GETDTABLESIZE], [test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETDTABLESIZE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETDTABLESIZE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDTABLESIZE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETDTABLESIZE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_GETDTABLESIZE], [
    gl_PREREQ_GETDTABLESIZE
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_GETDTABLESIZE
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([getdtablesize])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getdtablesize])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getdtablesize]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getdtablesize])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETDTABLESIZE$])
m4trace:configure.ac:38: -1- gl_FUNC_GETPROGNAME
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([getprogname], [[#include <stdlib.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([getprogname], [[#include <stdlib.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([getprogname])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([getprogname], [[#include <stdlib.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([getprogname])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([getprogname])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETPROGNAME$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_GETPROGNAME], [test $HAVE_GETPROGNAME = 0 || test $REPLACE_GETPROGNAME = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_GETPROGNAME], [test $HAVE_GETPROGNAME = 0 || test $REPLACE_GETPROGNAME = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETPROGNAME_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_GETPROGNAME_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETPROGNAME_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_GETPROGNAME_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_GETPROGNAME], [
    gl_PREREQ_GETPROGNAME
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_GETPROGNAME
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_getexecname], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" getexecname ]AS_TR_CPP([HAVE_getexecname])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_NAME$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL___ARGV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_VAR___PROGNAME$])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([getprogname])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getprogname])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getprogname]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getprogname])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETPROGNAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:38: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:38: -1- gl_STDINT_H
m4trace:configure.ac:38: -1- gl_LIMITS_H
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([limits.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([limits.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_limits_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" limits.h ]AS_TR_SH([limits.h]) AS_TR_CPP([HAVE_limits.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([limits.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_LIMITS_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_LIMITS_H$])
m4trace:configure.ac:38: -1- gt_TYPE_WINT_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIBHEADERS_OVERRIDE_WINT_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_types_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/types.h ]AS_TR_SH([sys/types.h]) AS_TR_CPP([HAVE_sys/types.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([stdint.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([stdint.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdint.h ]AS_TR_SH([stdint.h]) AS_TR_CPP([HAVE_stdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([stdint.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^__STDC_CONSTANT_MACROS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^__STDC_LIMIT_MACROS$])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:38: -1- gl_STDINT_TYPE_PROPERTIES
m4trace:configure.ac:38: -1- gl_MULTIARCH
m4trace:configure.ac:38: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:38: -1- gl_STDINT_BITSIZEOF([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:38: -1- gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:38: -1- gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:38: -1- gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:38: -1- gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:38: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:38: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:38: -1- gl_REPLACE_LIMITS_H
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_C99_STDINT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_INTTYPES_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_IMAXABS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_IMAXDIV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_IMAXDIV_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_IMAXABS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_IMAXDIV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_IMAXABS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_IMAXDIV$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOIMAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOUMAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([inttypes.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([inttypes.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" inttypes.h ]AS_TR_SH([inttypes.h]) AS_TR_CPP([HAVE_inttypes.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([inttypes.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_INTTYPES_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])
m4trace:configure.ac:38: -1- gl_INTTYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXABS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_IMAXABS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_IMAXDIV])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_IMAXDIV$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOIMAX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOIMAX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOUMAX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOUMAX$])
m4trace:configure.ac:38: -1- gl___INLINE
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE___INLINE$])
m4trace:configure.ac:38: -1- gl_LIMITS_H
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([limits.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:38: -1- gl_LOCK
m4trace:configure.ac:38: -1- gl_THREADLIB
m4trace:configure.ac:38: -1- gl_THREADLIB_BODY
m4trace:configure.ac:38: -1- gl_WEAK_SYMBOLS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WEAK_SYMBOLS$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SCHED_YIELD_LIB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_ISOC_AND_POSIX_THREADS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_POSIX_THREADS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_POSIX_THREADS_FROM_LIBC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_POSIX_THREADS_WEAK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:38: -1- gl_STDTHREADLIB_BODY
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_threads_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" threads.h ]AS_TR_SH([threads.h]) AS_TR_CPP([HAVE_threads.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SCHED_YIELD_LIB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([thrd_create], [[#include <threads.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([thrd_create], [[#include <threads.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([thrd_create])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([thrd_create], [[#include <threads.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([thrd_create])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([thrd_create])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_THRD_CREATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBSTDTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_ISOC_THREADS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^USE_WINDOWS_THREADS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^AVOID_ANY_THREADS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LTLIBTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBMULTITHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LTLIBMULTITHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK$])
m4trace:configure.ac:38: -1- gl_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK_PREFER_WRITER$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:38: -1- gl_PREREQ_LOCK
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([lock])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_LOCK$])
m4trace:configure.ac:38: -1- gl_FUNC_LSTAT
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_LSTAT], [test $REPLACE_LSTAT = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_LSTAT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_LSTAT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSTAT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_LSTAT_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_LSTAT], [
    gl_PREREQ_LSTAT
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:38: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[lstat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_LSTAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([lstat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_LSTAT$])
m4trace:configure.ac:38: -1- gl_FUNC_MALLOC_GNU
m4trace:configure.ac:38: -1- _AC_FUNC_MALLOC_IF([], [REPLACE_MALLOC_FOR_MALLOC_GNU=1])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([malloc-gnu])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-gnu])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-gnu])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([malloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([malloc-posix])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([malloc-posix])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[malloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([malloc-posix])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_MALLOCA
m4trace:configure.ac:38: -1- gl_EEMALLOC
m4trace:configure.ac:38: -1- _AC_FUNC_MALLOC_IF([gl_cv_func_malloc_0_nonnull=1], [gl_cv_func_malloc_0_nonnull=0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^MALLOC_0_IS_NONNULL$])
m4trace:configure.ac:38: -1- gl_FUNC_MEMCHR
m4trace:configure.ac:38: -1- gl_FUNC_MMAP_ANON
m4trace:configure.ac:38: -1- m4_pattern_allow([^MAP_ANONYMOUS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MAP_ANONYMOUS$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_mman_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/mman.h ]AS_TR_SH([sys/mman.h]) AS_TR_CPP([HAVE_sys/mman.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_mprotect], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" mprotect ]AS_TR_CPP([HAVE_mprotect])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_STRING_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_EXPLICIT_BZERO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MEMSET_EXPLICIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRERRORNAME_NP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGABBREV_NP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGDESCR_NP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FFSLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MEMPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MEMSET_EXPLICIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRERRORNAME_NP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRVERSCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMCHR], [test $REPLACE_MEMCHR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMCHR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMCHR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMCHR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMCHR_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_MEMCHR], [
    gl_PREREQ_MEMCHR
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_MEMCHR
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_BP_SYM_H$])
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([memchr])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_EXPLICIT_BZERO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_EXPLICIT_BZERO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FFSL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFSLL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FFSLL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MEMCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMMEM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MEMMEM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMPCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MEMPCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMRCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MEMRCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MEMSET_EXPLICIT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MEMSET_EXPLICIT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAWMEMCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RAWMEMCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STPCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STPNCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STPNCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCHRNUL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRCHRNUL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRDUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRDUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNCAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRNCAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNDUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRNDUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRNLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRNLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPBRK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRPBRK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSEP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRSEP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSTR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRSTR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRCASESTR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRCASESTR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRTOK_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRTOK_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSNLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSRCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSTR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSSTR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASECMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSCASECMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNCASECMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSNCASECMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPCASECMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSPCASECMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCASESTR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSCASESTR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSCSPN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSCSPN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSPBRK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSPBRK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSPN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSSPN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSSEP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSSEP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSTOK_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSTOK_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRERROR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERROR_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRERROR_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRERRORNAME_NP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRERRORNAME_NP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGABBREV_NP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIGABBREV_NP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGDESCR_NP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIGDESCR_NP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRSIGNAL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRSIGNAL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRVERSCMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRVERSCMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_MEMCCPY], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_MEMCCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_STRDUP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_STRDUP$])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memchr])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([memchr])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MEMCHR$])
m4trace:configure.ac:38: -1- gl_FUNC_MEMPCPY
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([mempcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([mempcpy], [[#include <string.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([mempcpy])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([mempcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([mempcpy])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([mempcpy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMPCPY], [test $HAVE_MEMPCPY = 0 || test $REPLACE_MEMPCPY = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMPCPY], [test $HAVE_MEMPCPY = 0 || test $REPLACE_MEMPCPY = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMPCPY_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMPCPY_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMPCPY_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMPCPY_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_MEMPCPY], [
    gl_PREREQ_MEMPCPY
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_MEMPCPY
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([mempcpy])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mempcpy])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mempcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([mempcpy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MEMPCPY$])
m4trace:configure.ac:38: -1- gl_FUNC_MEMRCHR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_memrchr], [_AC_CHECK_DECLS([memrchr])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MEMRCHR$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MEMRCHR], [test $ac_cv_func_memrchr = no])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMRCHR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MEMRCHR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMRCHR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MEMRCHR_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_MEMRCHR], [
    gl_PREREQ_MEMRCHR
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_MEMRCHR
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([memrchr])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memrchr])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[memrchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([memrchr])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MEMRCHR$])
m4trace:configure.ac:38: -1- gl_MINMAX
m4trace:configure.ac:38: -1- gl_PREREQ_MINMAX
m4trace:configure.ac:38: -1- gl_MINMAX_IN_HEADER([limits.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MINMAX_IN_LIMITS_H$])
m4trace:configure.ac:38: -1- gl_MINMAX_IN_HEADER([sys/param.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MINMAX_IN_SYS_PARAM_H$])
m4trace:configure.ac:38: -1- gl_FUNC_MKFIFO
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^MKFIFO_TRAILING_SLASH_BUG$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MKFIFO], [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MKFIFO], [test $HAVE_MKFIFO = 0 || test $REPLACE_MKFIFO = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFO_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MKFIFO_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFO_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MKFIFO_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([mkfifo])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkfifo])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[mkfifo]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkfifo])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_MKFIFO$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MSVC_INVAL], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_INVAL_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_INVAL_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_INVAL_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_INVAL_FALSE])
m4trace:configure.ac:38: -1- gl_MSVC_NOTHROW
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_MSVC_NOTHROW], [test $HAVE_MSVC_INVALID_PARAMETER_HANDLER = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_NOTHROW_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_MSVC_NOTHROW_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_NOTHROW_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_MSVC_NOTHROW_FALSE])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([msvc-nothrow])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_MSVC_NOTHROW$])
m4trace:configure.ac:38: -1- gl_MULTIARCH
m4trace:configure.ac:38: -1- gl_ONCE
m4trace:configure.ac:38: -1- gl_FUNC_OPEN
m4trace:configure.ac:38: -1- gl_PREPROC_O_CLOEXEC
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_OPEN_TRAILING_SLASH_BUG
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- m4_pattern_allow([^OPEN_TRAILING_SLASH_BUG$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_OPEN], [test $REPLACE_OPEN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPEN_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPEN_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPEN_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPEN_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_OPEN], [
    gl_PREREQ_OPEN
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_OPEN
m4trace:configure.ac:38: -1- gl_PROMOTED_TYPE_MODE_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^PROMOTED_MODE_T$])
m4trace:configure.ac:38: -1- gl_FCNTL_MODULE_INDICATOR([open])
m4trace:configure.ac:38: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([open])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[open]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([open])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_OPEN$])
m4trace:configure.ac:38: -1- gl_FUNC_OPENAT
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_openat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" openat ]AS_TR_CPP([HAVE_openat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_OPENAT], [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_OPENAT], [test $HAVE_OPENAT = 0 || test $REPLACE_OPENAT = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPENAT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPENAT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENAT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENAT_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_OPENAT], [
    gl_PREREQ_OPENAT
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_OPENAT
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([openat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_OPENAT$])
m4trace:configure.ac:38: -1- gl_FCNTL_MODULE_INDICATOR([openat])
m4trace:configure.ac:38: -1- gl_FCNTL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([openat])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[openat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([openat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_OPENAT$])
m4trace:configure.ac:38: -1- gl_FUNC_OPENDIR
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:38: -1- gl_TEST_FCHDIR
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_OPENDIR], [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_OPENDIR], [test $HAVE_OPENDIR = 0 || test $REPLACE_OPENDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPENDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OPENDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OPENDIR_FALSE])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([opendir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([opendir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[opendir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([opendir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_OPENDIR$])
m4trace:configure.ac:38: -1- gl_PASSFD
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_recvmsg], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" recvmsg ]AS_TR_CPP([HAVE_recvmsg])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_sendmsg], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sendmsg ]AS_TR_CPP([HAVE_sendmsg])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^_LINUX_SOURCE_COMPAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_MSGHDR_MSG_ACCRIGHTS$])
m4trace:configure.ac:38: -1- gl_PATHMAX
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/param.h ]AS_TR_SH([sys/param.h]) AS_TR_CPP([HAVE_sys/param.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_select], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" select ]AS_TR_CPP([HAVE_select])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_FUNC_PIPE
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" pipe ]AS_TR_CPP([HAVE_pipe])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_PIPE], [test $HAVE_PIPE = 0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_PIPE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_PIPE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PIPE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PIPE_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([pipe])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pipe]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PIPE$])
m4trace:configure.ac:38: -1- gl_FUNC_PIPE2
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([pipe2], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([pipe2], [[#include <unistd.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([pipe2])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([pipe2], [[#include <unistd.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([pipe2])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([pipe2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([pipe2])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe2])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pipe2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PIPE2$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([pipe2-safer])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_PIPE2_SAFER$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN_BODY
m4trace:configure.ac:38: -1- gl_SPAWN_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWNATTR_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN$])
m4trace:configure.ac:38: -1- gl_HAVE_POSIX_SPAWN
m4trace:configure.ac:38: -1- m4_pattern_allow([^POSIX_SPAWN_LIB$])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([posix_spawn], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn], [[#include <spawn.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([posix_spawn])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn_file_actions_addchdir_np])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn_file_actions_addchdir_np])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([posix_spawn_file_actions_addchdir_np])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR_NP$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN_WORKS
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [./lib/autoconf/general.m4:2979: AC_RUN_IFELSE is expanded from...
lib/m4sugar/m4sh.m4:690: _AS_IF_ELSE is expanded from...
lib/m4sugar/m4sh.m4:697: AS_IF is expanded from...
./lib/autoconf/general.m4:2249: AC_CACHE_VAL is expanded from...
./lib/autoconf/general.m4:2270: AC_CACHE_CHECK is expanded from...
m4/posix_spawn.m4:136: gl_POSIX_SPAWN_WORKS is expanded from...
m4/posix_spawn.m4:15: gl_POSIX_SPAWN_BODY is expanded from...
m4/posix_spawn.m4:10: gl_POSIX_SPAWN is expanded from...
m4/gnulib-comp.m4:241: gl_INIT is expanded from...
configure.ac:38: the top level])
m4trace:configure.ac:38: -1- GL_MDA_DEFINES
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN_SECURE
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_INIT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_INIT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDFCHDIR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWN_FILE_ACTIONS_DESTROY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWN_FILE_ACTIONS_DESTROY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_INIT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_INIT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETFLAGS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETFLAGS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETFLAGS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETFLAGS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETPGROUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETPGROUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETPGROUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETPGROUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSCHEDPARAM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETSCHEDPARAM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSCHEDPARAM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETSCHEDPARAM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSCHEDPOLICY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETSCHEDPOLICY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSCHEDPOLICY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETSCHEDPOLICY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSIGDEFAULT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETSIGDEFAULT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSIGDEFAULT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETSIGDEFAULT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_GETSIGMASK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_GETSIGMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_SETSIGMASK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_SETSIGMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POSIX_SPAWNATTR_DESTROY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POSIX_SPAWNATTR_DESTROY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNI], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNI], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNI_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNI_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNI_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNI_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_SPAWNI], [
    gl_PREREQ_POSIX_SPAWN_INTERNAL
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_POSIX_SPAWN_INTERNAL
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PATHS_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CONFSTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCHED_SETPARAM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCHED_SETSCHEDULER$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETEGID$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SETEUID$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_VFORK$])
m4trace:configure.ac:38: -1- gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_posix_spawn_file_actions_addchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" posix_spawn_file_actions_addchdir ]AS_TR_CPP([HAVE_posix_spawn_file_actions_addchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn_file_actions_addchdir_np])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([posix_spawn_file_actions_addchdir_np], [[#include <spawn.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([posix_spawn_file_actions_addchdir_np])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([posix_spawn_file_actions_addchdir_np])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR_NP$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 0 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $HAVE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 0 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDCHDIR_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addchdir])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_addchdir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_addchdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_addchdir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDCHDIR$])
m4trace:configure.ac:38: -1- gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDCLOSE_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addclose])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_addclose])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_addclose]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_addclose])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE$])
m4trace:configure.ac:38: -1- gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDDUP2], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2 = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDDUP2], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2 = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDDUP2_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDDUP2_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDDUP2_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDDUP2_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_adddup2])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_adddup2])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_adddup2]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_adddup2])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2$])
m4trace:configure.ac:38: -1- gl_FUNC_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDOPEN], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_ADDOPEN], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1 || test $REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDOPEN_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_ADDOPEN_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDOPEN_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_ADDOPEN_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_addopen])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_addopen])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_addopen]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_addopen])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_DESTROY], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_DESTROY], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_DESTROY_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_DESTROY_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_DESTROY_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_DESTROY_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_destroy])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_destroy])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_destroy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_destroy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_DESTROY$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_INIT], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWN_FACTION_INIT], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_INIT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWN_FACTION_INIT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_INIT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWN_FACTION_INIT_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawn_file_actions_init])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawn_file_actions_init])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawn_file_actions_init]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawn_file_actions_init])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_INIT$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_DESTROY], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_DESTROY], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_DESTROY_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_DESTROY_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_DESTROY_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_DESTROY_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_destroy])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnattr_destroy])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnattr_destroy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnattr_destroy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNATTR_DESTROY$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_INIT], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_INIT], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_INIT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_INIT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_INIT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_INIT_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_init])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnattr_init])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnattr_init]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnattr_init])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNATTR_INIT$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETFLAGS], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETFLAGS], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETFLAGS_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETFLAGS_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETFLAGS_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETFLAGS_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setflags])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnattr_setflags])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnattr_setflags]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnattr_setflags])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNATTR_SETFLAGS$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETPGROUP], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETPGROUP], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETPGROUP_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETPGROUP_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETPGROUP_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETPGROUP_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setpgroup])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnattr_setpgroup])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnattr_setpgroup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnattr_setpgroup])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNATTR_SETPGROUP$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETSIGMASK], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNATTR_SETSIGMASK], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETSIGMASK_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNATTR_SETSIGMASK_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETSIGMASK_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNATTR_SETSIGMASK_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnattr_setsigmask])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnattr_setsigmask])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnattr_setsigmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnattr_setsigmask])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNATTR_SETSIGMASK$])
m4trace:configure.ac:38: -1- gl_POSIX_SPAWN
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SPAWNP], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SPAWNP], [test $HAVE_POSIX_SPAWN = 0 || test $REPLACE_POSIX_SPAWN = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNP_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SPAWNP_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNP_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SPAWNP_FALSE])
m4trace:configure.ac:38: -1- gl_SPAWN_MODULE_INDICATOR([posix_spawnp])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([posix_spawnp])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[posix_spawnp]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([posix_spawnp])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_POSIX_SPAWNP$])
m4trace:configure.ac:38: -1- gl_PTHREAD_H
m4trace:configure.ac:38: -1- gl_PTHREAD_H_PART1
m4trace:configure.ac:38: -1- gl_PTHREAD_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE_DETACHED$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_RECURSIVE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_ROBUST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_PROCESS_SHARED$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_CREATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SELF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_EQUAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_DETACH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_JOIN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_EXIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_ONCE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_CREATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_GETDETACHSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_SETDETACHSTATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_ATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SELF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_EQUAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_DETACH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_JOIN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_EXIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_ONCE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETTYPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETTYPE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_GETROBUST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_SETROBUST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEXATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_LOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TRYLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_MUTEX_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCKATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_RDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_WRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYRDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TRYWRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDRDLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_TIMEDWRLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_RWLOCK_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_CONDATTR_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_WAIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_TIMEDWAIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_SIGNAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_BROADCAST$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_COND_DESTROY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_CREATE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SETSPECIFIC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_GETSPECIFIC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_KEY_DELETE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_INIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_LOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_TRYLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_UNLOCK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SPIN_DESTROY$])
m4trace:configure.ac:38: -1- gl_PTHREADLIB
m4trace:configure.ac:38: -1- gl_PTHREADLIB_BODY
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTHREAD_IN_USE_DETECTION_HARD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPTHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBPMULTITHREAD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_API$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SCHED_YIELD_LIB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB_SCHED_YIELD$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([pthread.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([pthread.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_pthread_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" pthread.h ]AS_TR_SH([pthread.h]) AS_TR_CPP([HAVE_pthread.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([pthread.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_PTHREAD_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SPINLOCK_T$])
m4trace:configure.ac:38: -1- gl_PTHREAD_SPIN
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <pthread.h>
    ]], [
    pthread_create pthread_attr_init pthread_attr_getdetachstate
    pthread_attr_setdetachstate pthread_attr_destroy pthread_self pthread_equal
    pthread_detach pthread_join pthread_exit
    pthread_once
    pthread_mutex_init pthread_mutexattr_init pthread_mutexattr_gettype
    pthread_mutexattr_settype pthread_mutexattr_getrobust
    pthread_mutexattr_setrobust pthread_mutexattr_destroy pthread_mutex_lock
    pthread_mutex_trylock pthread_mutex_timedlock pthread_mutex_unlock
    pthread_mutex_destroy
    pthread_rwlock_init pthread_rwlockattr_init pthread_rwlockattr_destroy
    pthread_rwlock_rdlock pthread_rwlock_wrlock pthread_rwlock_tryrdlock
    pthread_rwlock_trywrlock pthread_rwlock_timedrdlock
    pthread_rwlock_timedwrlock pthread_rwlock_unlock pthread_rwlock_destroy
    pthread_cond_init pthread_condattr_init pthread_condattr_destroy
    pthread_cond_wait pthread_cond_timedwait pthread_cond_signal
    pthread_cond_broadcast pthread_cond_destroy
    pthread_key_create pthread_setspecific pthread_getspecific
    pthread_key_delete
    pthread_spin_init pthread_spin_lock pthread_spin_trylock pthread_spin_unlock
    pthread_spin_destroy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIB_PTHREAD$])
m4trace:configure.ac:38: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_THREAD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_THREAD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_ONCE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_ONCE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_RWLOCK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_RWLOCK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_COND])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_COND$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_TSS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_TSS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SPIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SPIN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_MUTEX_TIMEDLOCK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_MUTEX_TIMEDLOCK$])
m4trace:configure.ac:38: -1- gl_PTHREAD_ONCE
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_PTHREAD_ONCE], [test $HAVE_PTHREAD_ONCE = 0 || test $REPLACE_PTHREAD_ONCE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_PTHREAD_ONCE], [test $HAVE_PTHREAD_ONCE = 0 || test $REPLACE_PTHREAD_ONCE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_ONCE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_PTHREAD_ONCE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_ONCE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_PTHREAD_ONCE_FALSE])
m4trace:configure.ac:38: -1- gl_PTHREAD_MODULE_INDICATOR([pthread-once])
m4trace:configure.ac:38: -1- gl_PTHREAD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread-once])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[pthread-once]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread-once])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PTHREAD_ONCE$])
m4trace:configure.ac:38: -1- gl_FUNC_RAISE
m4trace:configure.ac:38: -1- gl_SIGNAL_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SIGNALBLOCKING$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIG2STR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STR2SIG$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TYPE_VOLATILE_SIG_ATOMIC_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGHANDLER_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PTHREAD_SIGMASK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RAISE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:38: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:38: -1- gl_CHECK_TYPE_SIGSET_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_RAISE], [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_RAISE], [test $HAVE_RAISE = 0 || test $REPLACE_RAISE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_RAISE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_RAISE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAISE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAISE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_RAISE], [
    gl_PREREQ_RAISE
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_RAISE
m4trace:configure.ac:38: -1- gl_SIGNAL_MODULE_INDICATOR([raise])
m4trace:configure.ac:38: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PTHREAD_SIGMASK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RAISE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RAISE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIG2STR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIG2STR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGNAL_H_SIGPIPE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIGNAL_H_SIGPIPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGPROCMASK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIGPROCMASK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SIGACTION])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SIGACTION$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([raise])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[raise]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([raise])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_RAISE$])
m4trace:configure.ac:38: -1- gl_FUNC_RAWMEMCHR
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_RAWMEMCHR], [test $HAVE_RAWMEMCHR = 0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_RAWMEMCHR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_RAWMEMCHR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAWMEMCHR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_RAWMEMCHR_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_RAWMEMCHR], [
    gl_PREREQ_RAWMEMCHR
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_RAWMEMCHR
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([rawmemchr])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rawmemchr])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rawmemchr]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([rawmemchr])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_RAWMEMCHR$])
m4trace:configure.ac:38: -1- gl_FUNC_READ
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_READ], [test $REPLACE_READ = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READ_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READ_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READ_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READ_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_READ], [
    gl_PREREQ_READ
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_READ
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([read])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([read])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[read]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([read])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_READ$])
m4trace:configure.ac:38: -1- gl_FUNC_READDIR
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_READDIR], [test $HAVE_READDIR = 0 || test $REPLACE_READDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_READDIR], [test $HAVE_READDIR = 0 || test $REPLACE_READDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READDIR_FALSE])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([readdir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readdir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readdir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([readdir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_READDIR$])
m4trace:configure.ac:38: -1- gl_FUNC_READLINK
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_readlink], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" readlink ]AS_TR_CPP([HAVE_readlink])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^READLINK_TRAILING_SLASH_BUG$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^READLINK_TRUNCATE_BUG$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_READLINK], [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_READLINK], [test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READLINK_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_READLINK_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINK_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_READLINK_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_READLINK], [
    gl_PREREQ_READLINK
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_READLINK
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([readlink])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlink])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[readlink]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlink])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_READLINK$])
m4trace:configure.ac:38: -1- gl_FUNC_REALLOC_GNU
m4trace:configure.ac:38: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:38: -1- gl_FUNC_REALLOC_SANITIZED
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEED_SANITIZED_REALLOC$])
m4trace:configure.ac:38: -1- _AC_FUNC_REALLOC_IF([], [REPLACE_REALLOC_FOR_REALLOC_GNU=1])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([realloc-gnu])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-gnu])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-gnu]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-gnu])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_GNU$])
m4trace:configure.ac:38: -1- gl_FUNC_REALLOC_POSIX
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEED_SANITIZED_REALLOC$])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([realloc.c])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([realloc-posix])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([realloc-posix])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[realloc-posix]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([realloc-posix])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_REALLOC_POSIX$])
m4trace:configure.ac:38: -1- gl_FUNC_REALLOCARRAY
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([reallocarray], [[#include <stdlib.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([reallocarray], [[#include <stdlib.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([reallocarray])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([reallocarray], [[#include <stdlib.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([reallocarray])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([reallocarray])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_REALLOCARRAY$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY], [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_REALLOCARRAY], [test $HAVE_REALLOCARRAY = 0 || test $REPLACE_REALLOCARRAY = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_REALLOCARRAY_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_REALLOCARRAY_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REALLOCARRAY_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REALLOCARRAY_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_REALLOCARRAY], [
    gl_PREREQ_REALLOCARRAY
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_REALLOCARRAY
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_REALLOCARRAY$])
m4trace:configure.ac:38: -1- gl_STDLIB_MODULE_INDICATOR([reallocarray])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([reallocarray])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[reallocarray]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([reallocarray])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_REALLOCARRAY$])
m4trace:configure.ac:38: -1- gl_FUNC_REWINDDIR
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_REWINDDIR], [test $HAVE_REWINDDIR = 0 || test $REPLACE_REWINDDIR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_REWINDDIR], [test $HAVE_REWINDDIR = 0 || test $REPLACE_REWINDDIR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_REWINDDIR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_REWINDDIR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REWINDDIR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_REWINDDIR_FALSE])
m4trace:configure.ac:38: -1- gl_DIRENT_MODULE_INDICATOR([rewinddir])
m4trace:configure.ac:38: -1- gl_DIRENT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([rewinddir])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[rewinddir]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([rewinddir])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_REWINDDIR$])
m4trace:configure.ac:38: -1- gl_PREREQ_SAFE_READ
m4trace:configure.ac:38: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:38: -1- gl_PREREQ_SAFE_WRITE
m4trace:configure.ac:38: -1- gl_PREREQ_SAFE_READ
m4trace:configure.ac:38: -1- gl_SAVE_CWD
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_fchdir], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" fchdir ]AS_TR_CPP([HAVE_fchdir])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_SCHED_H
m4trace:configure.ac:38: -1- gl_SCHED_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCHED_YIELD$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SCHED_YIELD$])
m4trace:configure.ac:38: -1- gl_CHECK_HEADER_SYS_CDEFS_H
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_CDEFS_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([sched.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sched.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sched.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SCHED_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SCHED_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SCHED_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SCHED_PARAM$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <sched.h>
    ]], [sched_yield])
m4trace:configure.ac:38: -1- gl_SCHED_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCHED_YIELD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SCHED_YIELD$])
m4trace:configure.ac:38: -1- gl_SH_FILENAME
m4trace:configure.ac:38: -1- gl_SIGACTION
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_sigaction], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaction ]AS_TR_CPP([HAVE_sigaction])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SIGACTION], [test $HAVE_SIGACTION = 0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SIGACTION_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SIGACTION_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGACTION_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGACTION_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_SIGACTION], [
    gl_PREREQ_SIGACTION
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_SIGACTION
m4trace:configure.ac:38: -1- m4_pattern_allow([^uid_t$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^gid_t$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_sigaltstack], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" sigaltstack ]AS_TR_CPP([HAVE_sigaltstack])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_siginterrupt], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" siginterrupt ]AS_TR_CPP([HAVE_siginterrupt])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:38: -1- gl_SIGNAL_MODULE_INDICATOR([sigaction])
m4trace:configure.ac:38: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigaction])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigaction]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigaction])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_SIGACTION$])
m4trace:configure.ac:38: -1- gl_SIGNAL_H
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([signal.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([signal.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([signal.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SIGNAL_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [sig2str str2sig
    pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])
m4trace:configure.ac:38: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SIGNALBLOCKING
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SIGPROCMASK], [test $HAVE_POSIX_SIGNALBLOCKING = 0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SIGPROCMASK_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SIGPROCMASK_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGPROCMASK_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SIGPROCMASK_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_SIGPROCMASK], [
    gl_PREREQ_SIGPROCMASK
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_SIGPROCMASK
m4trace:configure.ac:38: -1- gl_SIGNAL_MODULE_INDICATOR([sigprocmask])
m4trace:configure.ac:38: -1- gl_SIGNAL_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([sigprocmask])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[sigprocmask]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([sigprocmask])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_SIGPROCMASK$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_SOCKET], [test "$ac_cv_header_winsock2_h" = yes])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SOCKET_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_SOCKET_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SOCKET_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_SOCKET_FALSE])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_MODULE_INDICATOR([socket])
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([socket])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[socket]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([socket])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_SOCKET$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([socket])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_SOCKET$])
m4trace:configure.ac:38: -1- gl_SOCKETLIB
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINDOWS_SOCKETS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBSOCKET$])
m4trace:configure.ac:38: -1- gl_SOCKETS
m4trace:configure.ac:38: -1- gl_PREREQ_SOCKETS
m4trace:configure.ac:38: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:38: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:38: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:38: -1- gl_SPAWN_H
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([spawn.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([spawn.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_spawn_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" spawn.h ]AS_TR_SH([spawn.h]) AS_TR_CPP([HAVE_spawn.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([spawn.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SPAWN_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SPAWN_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWNATTR_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POSIX_SPAWN_FILE_ACTIONS_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SPAWN_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <spawn.h>
    ]], [posix_spawn posix_spawnp posix_spawnattr_init posix_spawnattr_destroy
    posix_spawnattr_getsigdefault posix_spawnattr_setsigdefault
    posix_spawnattr_getsigmask posix_spawnattr_setsigmask
    posix_spawnattr_getflags posix_spawnattr_setflags
    posix_spawnattr_getpgroup posix_spawnattr_setpgroup
    posix_spawnattr_getschedpolicy posix_spawnattr_setschedpolicy
    posix_spawnattr_getschedparam posix_spawnattr_setschedparam
    posix_spawn_file_actions_init posix_spawn_file_actions_destroy
    posix_spawn_file_actions_addopen posix_spawn_file_actions_addclose
    posix_spawn_file_actions_adddup2 posix_spawn_file_actions_addchdir
    posix_spawn_file_actions_addfchdir])
m4trace:configure.ac:38: -1- gl_SPAWN_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SPAWN_PIPE
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_libcx_spawn2_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" libcx/spawn2.h ]AS_TR_SH([libcx/spawn2.h]) AS_TR_CPP([HAVE_libcx/spawn2.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_OS2_SPAWN], [case "$host_os" in os2*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_OS2_SPAWN], [case "$host_os" in os2*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OS2_SPAWN_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_OS2_SPAWN_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OS2_SPAWN_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_OS2_SPAWN_FALSE])
m4trace:configure.ac:38: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:38: -1- gl_FUNC_STAT
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" lstat ]AS_TR_CPP([HAVE_lstat])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STAT], [test $REPLACE_STAT = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STAT_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STAT_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STAT_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STAT_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_STAT], [
    case "$host_os" in
      mingw* | windows*)
        AC_LIBOBJ([stat-w32])
        ;;
    esac
    gl_PREREQ_STAT
  ])
m4trace:configure.ac:38: -1- gl_LIBSOURCES([stat-w32.c])
m4trace:configure.ac:38: -1- gl_PREREQ_STAT
m4trace:configure.ac:38: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stat]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_STAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([stat])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_STAT$])
m4trace:configure.ac:38: -1- gl_STAT_TIME
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:38: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:38: -1- gl_C_BOOL
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_C_BOOL$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_stdbool_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdbool.h ]AS_TR_SH([stdbool.h]) AS_TR_CPP([HAVE_stdbool.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_stdckdint_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" stdckdint.h ]AS_TR_SH([stdckdint.h]) AS_TR_CPP([HAVE_stdckdint.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([stdckdint.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STDCKDINT_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_STDCKDINT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_STDCKDINT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDCKDINT_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDCKDINT_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDCKDINT_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDCKDINT_H_FALSE])
m4trace:configure.ac:38: -1- gl_STDDEF_H
m4trace:configure.ac:38: -1- gl_STDDEF_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^NULLPTR_T_NEEDS_STDDEF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STDDEF_NOT_IDEMPOTENT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MAX_ALIGN_T$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([stddef.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([stddef.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([stddef.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:38: -1- gl_STDDEF_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([stddef.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_STDDEF_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:38: -1- gl_STDINT_H
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([stdint.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_STDINT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL_HEADER([limits.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIMITS_H$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_GENERATE_LIMITS_H], [$gl_generate_var])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GENERATE_LIMITS_H_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_LIMITS_H_FALSE])
m4trace:configure.ac:38: -1- gl_STDIO_H
m4trace:configure.ac:38: -1- gl_STDIO_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETW$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PUTW$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FOPEN_FOR_FOPEN_GNU$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([stdio.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_PRINTF_ATTRIBUTE_FLAVOR_GNU$])
m4trace:configure.ac:38: -1- gl_MUSL_LIBC
m4trace:configure.ac:38: -1- m4_pattern_allow([^MUSL_LIBC$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_fcloseall], [_AC_CHECK_DECLS([fcloseall])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCLOSEALL$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_getw], [_AC_CHECK_DECLS([getw])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GETW$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_putw], [_AC_CHECK_DECLS([putw])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_PUTW$])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_DZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_DZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FCLOSE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FCLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FDOPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FDOPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FFLUSH])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FFLUSH$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FGETC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FGETS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FGETS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FOPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FOPEN_GNU])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FOPEN_GNU$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPURGE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FPURGE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FPUTC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FPUTS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FPUTS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREAD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FREAD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FREOPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FREOPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSCANF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSEEK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FSEEKO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FSEEKO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FTELL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FTELLO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FTELLO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FWRITE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FWRITE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_FZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_FZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETCHAR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETCHAR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETDELIM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETDELIM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETLINE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETLINE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_PRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_OBSTACK_ZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_OBSTACK_ZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PCLOSE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PCLOSE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PERROR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PERROR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_POPEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_POPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PUTC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTCHAR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PUTCHAR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PUTS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PUTS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_REMOVE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_REMOVE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RENAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_RENAMEAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_RENAMEAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SCANF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SNPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SNZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SNZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SPRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_NONBLOCKING])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STDIO_H_SIGPIPE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TMPFILE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TMPFILE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VASPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VASZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VASZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFSCANF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VFSCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSCANF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VSCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VDPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VDZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VDZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFPRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VFZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VFZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VPRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VSNPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSNZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VSNZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSPRINTF_POSIX])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VSZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VSZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_VZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_VZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_ZPRINTF])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_ZPRINTF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FCLOSEALL], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_FCLOSEALL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FDOPEN], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_FDOPEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_FILENO], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_FILENO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_GETW], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_GETW$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_PUTW], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_PUTW$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TEMPNAM], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_TEMPNAM$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STDIO_READ], [test $REPLACE_STDIO_READ_FUNCS = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_READ_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_READ_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_READ_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_READ_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STDIO_WRITE], [test $REPLACE_STDIO_WRITE_FUNCS = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_WRITE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STDIO_WRITE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_WRITE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STDIO_WRITE_FALSE])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fscanf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fscanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fscanf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FSCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([scanf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([scanf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[scanf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([scanf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_SCANF$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fgetc])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgetc])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgetc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgetc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FGETC$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([getc])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getc])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETC$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([getchar])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getchar])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[getchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([getchar])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_GETCHAR$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fgets])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fgets])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fgets]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fgets])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FGETS$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fread])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fread])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fread]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fread])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FREAD$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fprintf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fprintf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fprintf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FPRINTF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([printf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([printf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[printf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([printf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PRINTF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([vfprintf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vfprintf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vfprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([vfprintf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_VFPRINTF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([vprintf])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([vprintf])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[vprintf]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([vprintf])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_VPRINTF$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fputc])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputc])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FPUTC$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([putc])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putc])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putc]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([putc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PUTC$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([putchar])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putchar])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[putchar]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([putchar])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PUTCHAR$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fputs])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fputs])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fputs]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fputs])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FPUTS$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([puts])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([puts])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[puts]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([puts])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_PUTS$])
m4trace:configure.ac:38: -1- gl_STDIO_MODULE_INDICATOR([fwrite])
m4trace:configure.ac:38: -1- gl_STDIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fwrite])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[fwrite]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([fwrite])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_FWRITE$])
m4trace:configure.ac:38: -1- gl_STDLIB_H
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([stdlib.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([stdlib.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([stdlib.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
/* OpenIndiana has a bug: <sys/time.h> must be included before
   <sys/loadavg.h>.  */
# include <sys/time.h>
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit aligned_alloc atoll canonicalize_file_name free
    getloadavg getprogname getsubopt grantpt
    initstate initstate_r mbstowcs mbtowc mkdtemp mkostemp mkostemps mkstemp
    mkstemps posix_memalign posix_openpt ptsname ptsname_r qsort_r
    random random_r reallocarray realpath rpmatch secure_getenv setenv
    setstate setstate_r srandom srandom_r
    strtod strtol strtold strtoll strtoul strtoull unlockpt unsetenv])
m4trace:configure.ac:38: -1- gt_LOCALE_EN_UTF8
m4trace:configure.ac:38: -1- AM_LANGINFO_CODESET
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LOCALE_EN_UTF8$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_ecvt], [_AC_CHECK_DECLS([ecvt])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_ECVT$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_fcvt], [_AC_CHECK_DECLS([fcvt])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_FCVT$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_gcvt], [_AC_CHECK_DECLS([gcvt])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_GCVT$])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_FUNC_STPCPY
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([stpcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([stpcpy], [[#include <string.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([stpcpy])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([stpcpy], [[#include <string.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([stpcpy])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([stpcpy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STPCPY], [test $HAVE_STPCPY = 0 || test $REPLACE_STPCPY = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STPCPY], [test $HAVE_STPCPY = 0 || test $REPLACE_STPCPY = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STPCPY_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STPCPY_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPCPY_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STPCPY_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_STPCPY], [
    gl_PREREQ_STPCPY
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_STPCPY
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([stpcpy])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stpcpy])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[stpcpy]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([stpcpy])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_STPCPY$])
m4trace:configure.ac:38: -1- gl_FUNC_STRCHRNUL
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_ANDROID([strchrnul], [[#include <string.h>]])
m4trace:configure.ac:38: -1- gl_SILENT([
       case "$host_os" in
         gl_CHECK_FUNCS_CASE_FOR_ANDROID([strchrnul], [[#include <string.h>]])
         gl_CHECK_FUNCS_DEFAULT_CASE([strchrnul])
       esac
      ])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_CASE_FOR_ANDROID([strchrnul], [[#include <string.h>]])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_DEFAULT_CASE([strchrnul])
m4trace:configure.ac:38: -1- gl_CHECK_FUNCS_SET_RESULTS([strchrnul])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STRCHRNUL], [test $HAVE_STRCHRNUL = 0 || test $REPLACE_STRCHRNUL = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STRCHRNUL], [test $HAVE_STRCHRNUL = 0 || test $REPLACE_STRCHRNUL = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRCHRNUL_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRCHRNUL_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRCHRNUL_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRCHRNUL_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_STRCHRNUL], [
    gl_PREREQ_STRCHRNUL
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_STRCHRNUL
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([strchrnul])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strchrnul])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strchrnul]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([strchrnul])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_STRCHRNUL$])
m4trace:configure.ac:38: -1- gl_FUNC_STRDUP_POSIX
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_strdup], [_AC_CHECK_DECLS([strdup])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STRDUP], [test $REPLACE_STRDUP = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRDUP_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRDUP_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRDUP_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRDUP_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_STRDUP], [
    gl_PREREQ_STRDUP
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_STRDUP
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([strdup])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strdup])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strdup]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([strdup])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_STRDUP$])
m4trace:configure.ac:38: -1- gl_FUNC_STRERROR
m4trace:configure.ac:38: -1- gl_FUNC_STRERROR_0
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRERROR_0$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STRERROR], [test $REPLACE_STRERROR = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_FALSE])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([strerror])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:38: -1- gl_STRING_MODULE_INDICATOR([strerror])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strerror])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[strerror]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([strerror])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_STRERROR$])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE], [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_STRERROR_OVERRIDE], [test -n "$ERRNO_H" || test $REPLACE_STRERROR_0 = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_OVERRIDE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_STRERROR_OVERRIDE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_OVERRIDE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_STRERROR_OVERRIDE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_STRERROR_OVERRIDE], [
    gl_PREREQ_SYS_H_WINSOCK2
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- gl_STRING_H
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([string.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([string.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]], [explicit_bzero ffsl ffsll memmem mempcpy memrchr memset_explicit
     rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strerrorname_np sigabbrev_np sigdescr_np strsignal strverscmp])
m4trace:configure.ac:38: -1- gl_STRING_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_SELECT_H
m4trace:configure.ac:38: -1- gl_SYS_SELECT_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_PSELECT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_PSELECT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_SELECT$])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/select.h ]AS_TR_SH([sys/select.h]) AS_TR_CPP([HAVE_sys/select.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
m4trace:configure.ac:38: -1- gl_SYS_SELECT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_PSELECT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_PSELECT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_SELECT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_SELECT$])
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H
m4trace:configure.ac:38: -1- gl_SYS_SOCKET_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_STAT_H
m4trace:configure.ac:38: -1- gl_SYS_STAT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_TIME_H
m4trace:configure.ac:38: -1- gl_SYS_TIME_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRUCT_TIMEVAL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GETTIMEOFDAY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRUCT_TIMEVAL$])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/time.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/time.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/time.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_TIME_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H$])
m4trace:configure.ac:38: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/socket.h ]AS_TR_SH([sys/socket.h]) AS_TR_CPP([HAVE_sys/socket.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
m4trace:configure.ac:38: -1- gl_SYS_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_GETTIMEOFDAY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:38: -1- gl_SYS_TYPES_H
m4trace:configure.ac:38: -1- gl_SYS_TYPES_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^_USE_STD_STAT$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([sys/types.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/types.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/types.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_TYPES_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H$])
m4trace:configure.ac:38: -1- gl_TYPE_OFF_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:38: -1- gl_TYPE_OFF64_T
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_OFF64_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^WINDOWS_STAT_INODES$])
m4trace:configure.ac:38: -1- gl_SYS_TYPES_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_UIO_H
m4trace:configure.ac:38: -1- gl_SYS_UIO_H_DEFAULTS
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/uio.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/uio.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_uio_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/uio.h ]AS_TR_SH([sys/uio.h]) AS_TR_CPP([HAVE_sys/uio.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/uio.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_UIO_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_UIO_H$])
m4trace:configure.ac:38: -1- gl_SYS_UIO_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_SYS_WAIT_H
m4trace:configure.ac:38: -1- gl_SYS_WAIT_H_DEFAULTS
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([sys/wait.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([sys/wait.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_wait_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/wait.h ]AS_TR_SH([sys/wait.h]) AS_TR_CPP([HAVE_sys/wait.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([sys/wait.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_SYS_WAIT_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[#include <sys/wait.h>]], [waitpid])
m4trace:configure.ac:38: -1- gl_SYS_WAIT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WAITPID])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WAITPID$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_SYS_SINGLE_THREADED_H$])
m4trace:configure.ac:38: -1- gl_TIME_H
m4trace:configure.ac:38: -1- gl_TIME_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_NANOSLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_STRPTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TIMESPEC_GET$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TIMESPEC_GETRES$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TIMEZONE_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_TZALLOC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_CTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_GMTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LOCALTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LOCALTIME_R$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_LOCALTIME_RZ$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MKTIME_Z$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_NANOSLEEP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_STRFTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TIMEGM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TIMESPEC_GET$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TIMESPEC_GETRES$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_TZSET$])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS([time.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([time.h], [assume])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([time.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_TIME_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TIME_H$])
m4trace:configure.ac:38: -1- gl_CHECK_TYPE_STRUCT_TIMESPEC
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" sys/time.h ]AS_TR_SH([sys/time.h]) AS_TR_CPP([HAVE_sys/time.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^SYS_TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PTHREAD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^UNISTD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
#include <time.h>
    ]], [
      asctime asctime_r ctime ctime_r gmtime_r localtime localtime_r mktime
      nanosleep strftime strptime time timegm timespec_get timespec_getres tzset
    ])
m4trace:configure.ac:38: -1- m4_pattern_allow([^TIME_H_DEFINES_TIME_UTC$])
m4trace:configure.ac:38: -1- gl_TIME_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_CTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_CTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MKTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MKTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_LOCALTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_LOCALTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_NANOSLEEP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_NANOSLEEP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRFTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRFTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_STRPTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_STRPTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMEGM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIMEGM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GET])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GET$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIMESPEC_GETRES])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIMESPEC_GETRES$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_R])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIME_R$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TIME_RZ])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TIME_RZ$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZNAME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TZNAME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_TZSET])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_TZSET$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_TZSET], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_TZSET$])
m4trace:configure.ac:38: -1- gl_UNISTD_H
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([unistd.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([unistd.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" unistd.h ]AS_TR_SH([unistd.h]) AS_TR_CPP([HAVE_unistd.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([unistd.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if defined _WIN32 && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [access chdir chown copy_file_range dup dup2 dup3 environ euidaccess
    execl execle execlp execv execve execvp execvpe
    faccessat fchdir
    fchownat fdatasync fsync ftruncate getcwd getdomainname getdtablesize
    getentropy getgroups gethostname getlogin getlogin_r getpagesize getpass
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat
    truncate ttyname_r unlink unlinkat usleep])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Check_Decl_execvpe], [_AC_CHECK_DECLS([execvpe])])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_EXECVPE$])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_UNISTD_SAFER
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Func_pipe], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_func_]]_AC_LANG_ABBREV[[_list],
  [" pipe ]AS_TR_CPP([HAVE_pipe])["])])_AC_FUNCS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- AC_C_VARARRAYS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_C_VARARRAYS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^__STDC_NO_VLA__$])
m4trace:configure.ac:38: -1- gl_WAIT_PROCESS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WAITID$])
m4trace:configure.ac:38: -1- gl_FUNC_WAITPID
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WAITPID], [test $HAVE_WAITPID = 0])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WAITPID], [test $HAVE_WAITPID = 0])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WAITPID_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WAITPID_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WAITPID_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WAITPID_FALSE])
m4trace:configure.ac:38: -1- gl_SYS_WAIT_MODULE_INDICATOR([waitpid])
m4trace:configure.ac:38: -1- gl_SYS_WAIT_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([waitpid])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[waitpid]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([waitpid])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_WAITPID$])
m4trace:configure.ac:38: -1- gl_WCHAR_H
m4trace:configure.ac:38: -1- gl_WCHAR_H_DEFAULTS
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_BTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBSINIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBRTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBRLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBSRTOWCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_MBSNRTOWCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCRTOMB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSRTOMBS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNRTOMBS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMMOVE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WMEMSET$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCPCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCPNCPY$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNCAT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCASECMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSNCASECMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCOLL$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSXFRM$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSRCHR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSCSPN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSSPN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSPBRK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSSTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSTOK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSWIDTH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCSFTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_WCTOB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_WCWIDTH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBSTATE_T$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_BTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCTOB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBSINIT$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBRTOWC$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBRLEN$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBSRTOWCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_MBSNRTOWCS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCRTOMB$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSRTOMBS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSNRTOMBS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCWIDTH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSWIDTH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSFTIME$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSNCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSSTR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WCSTOK$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WMEMCMP$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^REPLACE_WMEMPCPY$])
m4trace:configure.ac:38: -1- gl_WCHAR_H_INLINE_OK
m4trace:configure.ac:38: -1- gl_CHECK_NEXT_HEADERS([wchar.h])
m4trace:configure.ac:38: -1- gl_NEXT_HEADERS_INTERNAL([wchar.h], [check])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" wchar.h ]AS_TR_SH([wchar.h]) AS_TR_CPP([HAVE_wchar.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- gl_ABSOLUTE_HEADER_ONE([wchar.h])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_WCHAR_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_WCHAR_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:38: -1- gl_FEATURES_H
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_features_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" features.h ]AS_TR_SH([features.h]) AS_TR_CPP([HAVE_features.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_FEATURES_H$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_WINT_T$])
m4trace:configure.ac:38: -1- gl_TYPE_WINT_T_PREREQ
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_Header_crtdefs_h], [m4_divert_text([INIT_PREPARE],
  [AS_VAR_APPEND([ac_header_]]_AC_LANG_ABBREV[[_list],
  [" crtdefs.h ]AS_TR_SH([crtdefs.h]) AS_TR_CPP([HAVE_crtdefs.h])["])])_AC_HEADERS_EXPANSION(_AC_LANG_ABBREV)])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_CRTDEFS_H$])
m4trace:configure.ac:38: -1- gl_WARN_ON_USE_PREPARE([[
      #include <wchar.h>
    ]], [btowc wctob mbsinit mbrtowc mbrlen mbsrtowcs mbsnrtowcs wcrtomb
     wcsrtombs wcsnrtombs wcwidth
     wmemchr wmemcmp wmemcpy wmemmove wmempcpy wmemset
     wcslen wcsnlen wcscpy wcpcpy wcsncpy wcpncpy wcscat wcsncat wcscmp
     wcsncmp wcscasecmp wcsncasecmp wcscoll wcsxfrm wcsdup wcschr wcsrchr
     wcscspn wcsspn wcspbrk wcsstr wcstok wcswidth wcsftime
    ])
m4trace:configure.ac:38: -1- AC_DEFUN([_AC_UNDECLARED_BUILTIN_c], [_AC_UNDECLARED_BUILTIN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^HAVE_DECL_WCSDUP$])
m4trace:configure.ac:38: -1- gl_WCHAR_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_BTOWC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_BTOWC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCTOB])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCTOB$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSINIT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSINIT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSZERO])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSZERO$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRTOWC])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBRTOWC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBRLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBRLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSRTOWCS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSRTOWCS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MBSNRTOWCS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MBSNRTOWCS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCRTOMB])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCRTOMB$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRTOMBS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSRTOMBS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNRTOMBS])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNRTOMBS$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCWIDTH])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCWIDTH$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMCMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMMOVE])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMMOVE$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMPCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMPCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WMEMSET])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WMEMSET$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNLEN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNLEN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCPCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCPNCPY])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCPNCPY$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCAT])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNCAT$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNCMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCASECMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCASECMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSNCASECMP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSNCASECMP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCOLL])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCOLL$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSXFRM])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSXFRM$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSDUP])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSDUP$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSRCHR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSRCHR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSCSPN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSCSPN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSPN])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSSPN$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSPBRK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSPBRK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSSTR])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSSTR$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSTOK])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSTOK$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSWIDTH])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSWIDTH$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WCSFTIME])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WCSFTIME$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_WGETCWD])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_WGETCWD$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_INIT_VARIABLE([GNULIB_MDA_WCSDUP], [1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_GNULIB_MDA_WCSDUP$])
m4trace:configure.ac:38: -1- gl_STDLIB_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_MUTEX], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_MUTEX_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_MUTEX_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_MUTEX_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_MUTEX_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_ONCE], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_ONCE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_ONCE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_ONCE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_ONCE_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_RECMUTEX], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RECMUTEX_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RECMUTEX_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RECMUTEX_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RECMUTEX_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_RWLOCK], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RWLOCK_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_RWLOCK_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RWLOCK_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_RWLOCK_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_PATH], [case "$host_os" in cygwin* | mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_PATH], [case "$host_os" in cygwin* | mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_PATH_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_PATH_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_PATH_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_PATH_FALSE])
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WINDOWS_SPAWN], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WINDOWS_SPAWN], [case "$host_os" in mingw* | windows*) true;; *) false;; esac])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_SPAWN_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WINDOWS_SPAWN_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_SPAWN_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WINDOWS_SPAWN_FALSE])
m4trace:configure.ac:38: -1- gl_FUNC_WRITE
m4trace:configure.ac:38: -1- gl_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
m4trace:configure.ac:38: -1- AM_CONDITIONAL([GL_COND_OBJ_WRITE], [test $REPLACE_WRITE = 1])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WRITE_TRUE$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_COND_OBJ_WRITE_FALSE$])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WRITE_TRUE])
m4trace:configure.ac:38: -1- _AM_SUBST_NOTMAKE([GL_COND_OBJ_WRITE_FALSE])
m4trace:configure.ac:38: -1- AM_COND_IF([GL_COND_OBJ_WRITE], [
    gl_PREREQ_WRITE
  ])
m4trace:configure.ac:38: -1- gl_PREREQ_WRITE
m4trace:configure.ac:38: -1- gl_UNISTD_MODULE_INDICATOR([write])
m4trace:configure.ac:38: -1- gl_UNISTD_H_REQUIRE_DEFAULTS
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE([write])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GL_MODULE_INDICATOR_PREFIX[]_GNULIB_[]m4_translit([[write]],
                                                       [abcdefghijklmnopqrstuvwxyz./-],
                                                       [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR_FOR_TESTS([write])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_TEST_WRITE$])
m4trace:configure.ac:38: -1- gl_XALLOC
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([xalloc])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_XALLOC$])
m4trace:configure.ac:38: -1- gl_MODULE_INDICATOR([xalloc-die])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GNULIB_XALLOC_DIE$])
m4trace:configure.ac:38: -1- gl_COMMON
m4trace:configure.ac:38: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:38: -1- gl_CC_GNULIB_WARNINGS
m4trace:configure.ac:38: -1- gl_CC_ALLOW_WARNINGS
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_CFLAG_ALLOW_WARNINGS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^GL_CFLAG_GNULIB_WARNINGS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBGNU_LIBDEPS$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^LIBGNU_LTLIBDEPS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:46: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:46: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:46: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:46: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gl_LIBOBJDEPS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:46: -1- m4_pattern_allow([^gltests_LIBOBJDEPS$])
m4trace:configure.ac:46: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:46: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:46: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
